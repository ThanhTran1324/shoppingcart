{"version":3,"sources":["history.js","apis/firebaseShoppingCart.js","actions/cartActions/index.js","actions/cartActions/type.js","actions/index.js","actions/types.js","components/ItemList.js","components/ItemForm.js","components/ItemNew.js","components/ItemEdit.js","components/Modal.js","components/ItemDelete.js","components/ItemView.js","components/Header.js","components/Auth.js","components/CartView.js","components/App.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/index.js","reducers/itemReducer.js","index.js"],"names":["createBrowserHistory","firebaseConnect","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cartFetch","dispatch","getState","a","auth","userId","database","ref","on","snapshot","type","payload","val","items","signIn","signOut","then","console","log","catch","error","history","push","itemFetch","id","once","response","ItemList","renderAdmin","item","props","currentUserId","className","to","style","whiteSpace","renderList","Object","values","map","key","width","height","objectFit","src","undefined","images","alt","onClick","cartAdd","overflow","name","price","this","itemsFetch","marginTop","Component","connect","state","set","ItemForm","selectedFile","imageLink","uploadPercent","imageName","renderInput","input","meta","label","confirmError","touched","errorClassName","renderImageInput","onChange","fileSelectedHandler","fileUploadHandler","tabIndex","parseFloat","toFixed","convertImage","reader","FileReader","readAsDataURL","size","onload","event","img","Image","target","result","el","elem","document","createElement","scaleFactor","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","binary","atob","split","array","i","length","charCodeAt","setState","Blob","Uint8Array","files","getElementById","disabled","classList","add","preventDefault","filename","uploadTask","storage","put","bytesTransferred","totalBytes","getDownloadURL","downloadURL","onSubmit","formValue","parseInt","handleSubmit","Field","component","reduxForm","form","validate","ItemNew","itemCreate","isSignedIn","formValues","newItem","uuid","ItemEdit","match","params","itemEdit","initialValues","_","pick","ownProps","update","Modal","ReactDOM","createPortal","e","stopPropagation","header","content","actions","querySelector","ItemDelete","Fragment","itemDelete","remove","ItemView","Header","componentDidMount","onAuthStateChanged","user","uid","renderCartBadge","cart","renderAuthButton","React","Auth","switchSignIn","signInSwitch","signInWithEmailAndPassword","email","password","errorCode","code","renderErrorFromServer","googleLogin","provider","GoogleAuthProvider","signInWithPopup","componentWrapup","CartView","color","cartRemove","total","child","App","path","exact","INTIAL_STATE","initialState","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.093895d4.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import * as firebase from \"firebase\";\n\nvar config = {\n  apiKey: process.env.REACT_APP_API_1,\n  authDomain: process.env.REACT_APP_API_2,\n  databaseURL: process.env.REACT_APP_API_3,\n  projectId: process.env.REACT_APP_API_4,\n  storageBucket: process.env.REACT_APP_API_5,\n  messagingSenderId: process.env.REACT_APP_API_6,\n  appId: process.env.REACT_APP_API_7,\n  measurementId: process.env.REACT_APP_API_8\n};\n// Initialize Firebase\n\nexport const firebaseConnect = firebase.initializeApp(config);\n","import { CART_ADD, CART_FETCH, CART_REMOVE, CART_CLEAN } from \"./type\";\n\nimport { firebaseConnect } from \"../../apis/firebaseShoppingCart\";\n//import history from \"../../history\";\n\nexport const cartAdd = item => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  await firebaseConnect\n    .database()\n    .ref(`/cart/Cart-${userId}/${item.id}`)\n    .set(item);\n  dispatch({\n    type: CART_ADD,\n    payload: item\n  });\n};\n\nexport const cartFetch = () => async (dispatch, getState) => {\n  const userId = await getState().auth.userId;\n\n  if (userId !== null) {\n    firebaseConnect\n      .database()\n      .ref(`/cart/Cart-${userId}`)\n      .on(\"value\", function(snapshot) {\n        dispatch({\n          type: CART_FETCH,\n          payload: snapshot.val()\n        });\n      });\n  }\n};\n\nexport const cartRemove = id => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  firebaseConnect\n    .database()\n    .ref(`/cart/Cart-${userId}/`)\n    .child(id) //id of child\n    .remove();\n\n  dispatch({\n    type: CART_REMOVE,\n    payload: id\n  });\n};\n\nexport const cartClean = () => {\n  return {\n    type: CART_CLEAN\n  };\n};\n","export const CART_ADD = \"CART_ADD\";\nexport const CART_FETCH = \"CART_FETCH\";\nexport const CART_REMOVE = \"CART_REMOVE\";\nexport const CART_CLEAN = \"CART_CLEAN\";\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  ITEM_CREATE,\n  ITEMS_FETCH,\n  ITEM_DELETE,\n  ITEM_FETCH,\n  ITEM_EDIT\n} from \"./types\";\nimport { cartClean } from \"./cartActions/\";\nimport uuid from \"uuid\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport history from \"../history\";\nimport firebase from \"firebase\";\n// import { CART_CLEAN } from \"./cartActions/type\";\n// import * as _ from \"lodash\";\n\n// var data = firebaseConnect.database().ref(\"/\");\n\nlet items = firebaseConnect.database().ref(\"items\");\nexport const signIn = userId => async dispatch => {\n  dispatch({\n    type: SIGN_IN,\n    payload: userId\n  });\n  // dispatch(cartFetch());\n};\n\nexport const signOut = () => dispatch => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      console.log(\"Signed Out\");\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  dispatch({ type: SIGN_OUT });\n  dispatch(cartClean());\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemCreate = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const newItem = {\n    ...formValues,\n    userId: userId,\n    id: uuid()\n  };\n  firebaseConnect\n    .database()\n    .ref(`items/${newItem.id}`)\n    .set(newItem);\n\n  const response = await firebaseConnect\n    .database()\n    .ref(`items/${newItem.id}`)\n    .once(\"value\")\n    .then(snapshot => {\n      return snapshot.val();\n    });\n\n  dispatch({\n    type: ITEM_CREATE,\n    payload: response\n  });\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemsFetch = () => dispatch => {\n  items.on(\"value\", function(snapshot) {\n    // console.log(snapshot);\n    dispatch({\n      type: ITEMS_FETCH,\n      payload: snapshot.val()\n    });\n  });\n};\n//items.set(_.keyBy(response, \"id\")); convert array to Object to fix database\n\nexport const itemFetch = id => async dispatch => {\n  let response = await items.once(\"value\").then(snapshot => {\n    return snapshot.val()[id]; //access to Object and get value with key = id\n  });\n  dispatch({\n    type: ITEM_FETCH,\n    payload: response\n  });\n};\n\nexport const itemDelete = id => async dispatch => {\n  const deleteItem = await firebaseConnect.database().ref(`items/${id}`);\n  deleteItem\n    .remove()\n    .then(() => {\n      dispatch({\n        type: ITEM_DELETE,\n        payload: id\n      });\n    })\n    .catch(error => {\n      console.log(error); // need fix delete error\n    });\n  history.push(\"/shoppingcart\");\n};\nexport const itemEdit = (id, formValues) => async dispatch => {\n  let editItem = firebaseConnect.database().ref(`items/${id}`);\n  editItem.update(formValues);\n  const response = await firebaseConnect\n    .database()\n    .ref(`items/${id}`)\n    .once(\"value\")\n    .then(snapshot => {\n      return snapshot.val();\n    });\n  dispatch({\n    type: ITEM_EDIT,\n    payload: response\n  });\n  history.push(\"/shoppingcart\");\n};\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const ITEM_CREATE = \"ITEM_CREATE\";\nexport const ITEM_EDIT = \"ITEM_EDIT\";\nexport const ITEMS_FETCH = \"ITEMS_FETCH\";\nexport const ITEM_FETCH = \"ITEM_FETCH\";\nexport const ITEM_DELETE = \"ITEM_DELETE\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { itemsFetch } from \"../actions\";\nimport { cartAdd } from \"../actions/cartActions\";\n\nexport class ItemList extends Component {\n  componentDidMount() {\n    this.props.itemsFetch();\n  }\n  renderAdmin = item => {\n    if (item.userId === this.props.currentUserId)\n      return (\n        <div>\n          <hr></hr>\n          <div className=\"ui large two buttons\">\n            <Link\n              to={`/shoppingcart/items/delete/${item.id}`}\n              className=\"ui  negative button \"\n              style={{ whiteSpace: \"nowrap\" }}\n            >\n              <i className=\"icon trash alternate\" />\n              Delete\n            </Link>\n            <div className=\"or\"></div>\n            <Link\n              to={`/shoppingcart/items/edit/${item.id}`}\n              className=\"ui  positive button \"\n            >\n              <i className=\"edit icon\"></i>Edit\n            </Link>\n          </div>\n        </div>\n      );\n  };\n  renderList = () => {\n    return Object.values(this.props.items).map(item => {\n      // console.log(item.images);\n      return (\n        <div className=\"card  \" key={item.id}>\n          <div className=\"blurring dimmable image\">\n            <img\n              className=\"imageCartList\"\n              style={{ width: \"100%\", height: \"290px\", objectFit: \"fill\" }}\n              src={\n                item.images === undefined\n                  ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\n                  : item.images\n              }\n              alt=\"hinh\"\n            ></img>\n          </div>\n\n          <div className=\"content\">\n            <div className=\" ui buttons right floated\">\n              <button\n                className=\"ui button primary\"\n                onClick={() => this.props.cartAdd(item)}\n              >\n                <i className=\"shopping cart icon\"></i>\n                Add\n              </button>\n            </div>\n            <div className=\"header\" style={{ overflow: \"hidden\" }}>\n              {item.name}\n            </div>\n            <div className=\"meta\">\n              <span className=\"price\">${item.price}</span>\n            </div>\n\n            <div className=\"extra content\">{this.renderAdmin(item)}</div>\n          </div>\n        </div>\n\n        // <div key={item.id} className=\"item\">\n        //   {item.name}/${item.price}\n        //   <div className=\" ui buttons right floated\">\n        //     {this.renderAdmin(item)}\n        //     <button\n        //       className=\"ui button primary\"\n        //       onClick={() => this.props.cartAdd(item)}\n        //     >\n        //       <i className=\"shopping cart icon\"></i>\n        //       Add to cart\n        //     </button>\n        //   </div>\n        // </div>\n      );\n    });\n  };\n  render() {\n    return (\n      <div className=\"ui fluid container  \" style={{ marginTop: \"5px\" }}>\n        <div className=\"ui special cards centered\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    currentUserId: state.auth.userId\n  };\n};\nexport default connect(mapStateToProps, { itemsFetch, cartAdd })(ItemList);\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\n\n// import axios from \"axios\";\nclass ItemForm extends Component {\n  state = {\n    selectedFile: null,\n    imageLink: null,\n    uploadPercent: 0,\n    imageName: null\n  };\n  renderInput = ({ input, meta, label, type }) => {\n    const confirmError = meta.error && meta.touched;\n    const errorClassName = `field ${confirmError ? `error` : ``}`;\n\n    return (\n      <div className={errorClassName}>\n        <label>\n          {label}\n          {`${confirmError ? \"Requited\" : \"\"}`}\n        </label>\n        <input {...input} type={type} />\n      </div>\n    );\n  };\n\n  renderImageInput = ({ input, meta, label, uploadPercent }) => {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <div>\n          <input type=\"file\" onChange={this.fileSelectedHandler}></input>\n          <div\n            onClick={this.fileUploadHandler}\n            className=\"ui labeled button\"\n            tabIndex=\"0\"\n          >\n            <div id=\"uploadButton\" className=\"ui button  \">\n              <i className=\"upload icon \"></i> Upload\n            </div>\n            <p className=\"ui basic label\">\n              {parseFloat(uploadPercent).toFixed(2)}%\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  convertImage = item => {\n    console.log(\"converting\");\n    var resize_width = 600;\n    var reader = new FileReader();\n\n    //image turned to base64-encoded Data URI.\n    reader.readAsDataURL(item);\n    reader.name = item.name; //get the image's name\n    reader.size = item.size; //get the image's size\n    reader.onload = event => {\n      var img = new Image(); //create a image\n      img.src = event.target.result; //result is base64-encoded Data URI\n      img.name = event.target.name; //set name (optional)\n      img.size = event.target.size; //set size (optional)\n      img.onload = async el => {\n        var elem = document.createElement(\"canvas\"); //create a canvas\n\n        //scale the image to 600 (width) and keep aspect ratio\n        var scaleFactor = resize_width / el.target.width;\n        elem.width = resize_width;\n        elem.height = el.target.height * scaleFactor;\n\n        //draw in canvas\n        var ctx = elem.getContext(\"2d\");\n        ctx.drawImage(el.target, 0, 0, elem.width, elem.height);\n\n        //get the base64-encoded Data URI from the resize image\n        var srcEncoded = ctx.canvas.toDataURL(el.target, \"image/jpeg\", 0);\n        //convert uri to image\n        var binary = atob(srcEncoded.split(\",\")[1]);\n        var array = [];\n        for (var i = 0; i < binary.length; i++) {\n          array.push(binary.charCodeAt(i));\n        }\n        this.setState({\n          selectedFile: new Blob([new Uint8Array(array)], {\n            type: \"image/jpeg\"\n          })\n        });\n      };\n    };\n  };\n\n  fileSelectedHandler = event => {\n    if (event.target.files.length > 0) {\n      this.setState({ imageName: event.target.files[0].name });\n      this.convertImage(event.target.files[0]);\n      document.getElementById(\"submitButton\").disabled = true; //disable submit button , wait for click upload\n      document.getElementById(\"uploadButton\").classList.add(\"green\");\n    }\n  };\n  fileUploadHandler = event => {\n    event.preventDefault();\n    var filename = this.state.imageName; //get file name\n    var storageRef = firebaseConnect.storage().ref(`/images/` + filename); //upload to image folder\n    var uploadTask = storageRef.put(this.state.selectedFile);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        //run during upload proccess\n        this.setState({\n          uploadPercent: (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        });\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          // arrow function to use this.setState\n          this.setState({ imageLink: downloadURL });\n          document.getElementById(\"submitButton\").disabled = false;\n        });\n      }\n    );\n  };\n\n  onSubmit = formValue => {\n    formValue.images = this.state.imageLink;\n    formValue.price = parseInt(formValue.price);\n    this.props.onSubmit(formValue);\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <form\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n          className=\"ui form error\"\n        >\n          <Field name=\"name\" component={this.renderInput} label=\"Name : \" />\n          <Field\n            name=\"price\"\n            component={this.renderInput}\n            label=\"Price: \"\n            type=\"number\"\n          />\n\n          {/* Upload item pictures */}\n          <Field\n            name=\"images\"\n            component={this.renderImageInput}\n            label=\"Images: \"\n            uploadPercent={this.state.uploadPercent}\n          />\n\n          <button id=\"submitButton\" className=\"ui green approve right button\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst validate = formValue => {\n  const error = {};\n  if (!formValue.name) error.name = \"Requite Value!\";\n  if (!formValue.price) error.price = \"Requite Value!\";\n\n  return error;\n};\n\nexport default reduxForm({\n  form: \"ItemForm\",\n  validate\n})(ItemForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { itemCreate } from \"../actions\";\nimport ItemForm from \"./ItemForm\";\n\nclass ItemNew extends Component {\n  onSubmit = formValue => {\n    this.props.itemCreate(formValue);\n  };\n  render() {\n    if (this.props.isSignedIn)\n      return <ItemForm onSubmit={this.onSubmit}></ItemForm>;\n    else {\n      return (\n        <div className=\"ui  container \">Please Login To Create New Item !</div>\n      );\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, { itemCreate })(ItemNew);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport ItemForm from \"./ItemForm\";\n\nimport { itemFetch, itemEdit } from \"../actions\";\nclass ItemEdit extends Component {\n  componentDidMount() {\n    this.props.itemFetch(this.props.match.params.id);\n  }\n  id = this.props.match.params.id;\n\n  onSubmit = formValues => {\n    this.props.itemEdit(this.id, formValues);\n  };\n  render() {\n    if (this.props.item)\n      return (\n        <ItemForm\n          onSubmit={this.onSubmit}\n          initialValues={_.pick(this.props.item, \"name\", \"price\")}\n        ></ItemForm>\n      );\n    else return \"loading\";\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    item: state.items[ownProps.match.params.id]\n  };\n};\nexport default connect(mapStateToProps, { itemFetch, itemEdit })(ItemEdit);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport history from \"../history\";\nconst Modal = props => {\n  return ReactDOM.createPortal(\n    <div\n      onClick={() => history.push(\"/\")}\n      className=\"ui dimmer modals visible active\"\n    >\n      <div\n        onClick={e => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">{props.header}</div>\n        <div className=\"content\"> {props.content}</div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Modal from \"./Modal\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { itemFetch, itemDelete } from \"../actions\";\nclass ItemDelete extends Component {\n  componentDidMount() {\n    this.props.itemFetch(this.props.match.params.id);\n  }\n  actions = () => {\n    return (\n      <React.Fragment>\n        <Link to=\"/shoppingcart\" className=\"ui button\">\n          Cancel\n        </Link>\n        <button\n          className=\"ui button primary\"\n          onClick={() => this.props.itemDelete(this.props.match.params.id)}\n        >\n          Delete\n        </button>\n      </React.Fragment>\n    );\n  };\n  render() {\n    //console.log(this.props.item);\n    return (\n      <div>\n        <Modal\n          actions={this.actions()}\n          header=\"Delete Item\"\n          content={`Do you want to delete   ${\n            this.props.item ? this.props.item.name : \"\"\n          }?`}\n        ></Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps.match.params.id);\n  return {\n    item: state.items[ownProps.match.params.id]\n  };\n};\nexport default connect(mapStateToProps, { itemFetch, itemDelete })(ItemDelete);\n","import React, { Component } from \"react\";\n\nexport class ItemView extends Component {\n  render() {\n    return <div>view</div>;\n  }\n}\n\nexport default ItemView;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport { cartFetch } from \"../actions/cartActions\";\nimport { signIn, signOut } from \"../actions/\";\nclass Header extends React.Component {\n  componentDidMount = async () => {\n    await firebaseConnect.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.signIn(user.uid);\n        this.props.cartFetch();\n      }\n    });\n  };\n  renderCartBadge = () => {\n    return (\n      <div>\n        Cart <i className=\" icon shopping cart\" />\n        <span className=\"badge\">{` ( ${\n          this.props.cart ? Object.values(this.props.cart).length : \"0\"\n        })`}</span>\n      </div>\n    );\n  };\n  renderAuthButton = () => {\n    if (this.props.isSignedIn)\n      return (\n        <Link to=\"/shoppingcart\" onClick={this.props.signOut} className=\"item \">\n          Logout\n        </Link>\n      );\n    else\n      return (\n        <Link to=\"/shoppingcart/login/\" className=\"item\">\n          Login\n        </Link>\n      );\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui teal four item inverted menu\">\n          <Link to=\"/shoppingcart/\" className=\" item\">\n            Home\n          </Link>\n          <Link to=\"/shoppingcart/items/new\" className=\"item\">\n            Create Item\n          </Link>\n          <Link id=\"cart\" to=\"/shoppingcart/cart/view\" className=\"item\">\n            {this.renderCartBadge()}\n          </Link>\n          {this.renderAuthButton()}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, { cartFetch, signIn, signOut })(Header);\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\n// import firebaseui from \"firebaseui\";\n\nimport \"./auth.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n// import GoogleAuth from \"./GoogleAuth\";\nimport history from \"../history\";\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: \"\"\n    };\n  }\n\n  switchSignIn = event => {\n    event.preventDefault();\n    this.setState({ signInSwitch: !this.state.signInSwitch });\n    console.log(this.state.signInSwitch);\n  };\n  renderInput = ({ input, meta, label, type }) => {\n    const confirmError = meta.error && meta.touched;\n    const errorClassName = `field textbox ${confirmError ? `error` : ``}`;\n\n    return (\n      <div className={errorClassName}>\n        <label>\n          {label}\n          {`${confirmError ? meta.error : \"\"}`}\n        </label>\n        <input {...input} type={type} />\n      </div>\n    );\n  };\n  onSubmit = formValue => {\n    // console.log(formValue);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(formValue.email, formValue.password)\n      .then(result => {\n        this.setState({ error: \"Login Success\" });\n\n        this.props.signIn(result.user.uid);\n        history.push(\"/shoppingcart\");\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n\n        // console.log(errorCode);\n        // var errorMessage = error.message;\n\n        this.setState({ error: errorCode });\n        // ...\n        // console.log( \"message:\", errorMessage);\n      });\n  };\n  renderErrorFromServer = () => {\n    // console.log(this.state.error);\n    switch (this.state.error) {\n      case \"auth/user-not-found\":\n      case \"auth/wrong-password\":\n        return <div>Wrong User or Password</div>;\n      default:\n        return <div>{this.state.error}</div>;\n    }\n  };\n  googleLogin = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = result.credential.accessToken;\n        // // The signed-in user info.\n        // var user = result.user;\n        // ...\n      })\n      .catch(function(error) {\n        // Handle Errors here.\n        // var errorCode = error.code;\n        // var errorMessage = error.message;\n        // // The email of the user's account used.\n        // var email = error.email;\n        // // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        // ...\n      });\n  };\n  render() {\n    return (\n      <div className=\"ui  container \">\n        <div className=\"login-container\">\n          <div className=\"login-box\">\n            <h1>login</h1>\n            <form\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\n              className=\"ui form error\"\n            >\n              <Field\n                name=\"email\"\n                label=\"Email\"\n                component={this.renderInput}\n              ></Field>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                component={this.renderInput}\n              ></Field>\n\n              {this.renderErrorFromServer()}\n              <button\n                type=\"submit\"\n                className=\"ui teal approve  button  my-login-button\"\n              >\n                Sign In\n              </button>\n            </form>\n          </div>\n          <button\n            onClick={this.googleLogin}\n            className=\"ui red google button my-google-login\"\n          >\n            <i className=\"google icon\"></i>Google Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nconst validate = formValue => {\n  const error = {};\n  const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (!formValue.email) error.email = \" Requite Value !\";\n  else if (!formValue.email.match(mailformat)) error.email = \" Wrong Format !\";\n  if (!formValue.password) error.password = \" Requite Value !\";\n\n  return error;\n};\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nconst componentWrapup = connect(mapStateToProps, { signIn, signOut })(Auth);\n\nexport default reduxForm({\n  form: \"userForm\",\n  validate\n})(componentWrapup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n//import { Link } from \"react-router-dom\";\nimport { cartRemove, cartFetch } from \"../actions/cartActions\";\nexport class CartView extends Component {\n  componentDidMount() {\n    this.props.cartFetch();\n  }\n  renderList = () => {\n    if (this.props.cart !== null)\n      return Object.values(this.props.cart).map(item => {\n        return (\n          <div key={item.id} className=\"item\">\n            {/* {item.name}/${item.price} */}\n            <img\n              className=\"ui avatar image\"\n              src={item.images}\n              alt={item.name}\n            ></img>\n            <div className=\"content\">\n              <div className=\"header\">{item.name}</div>\n              <div style={{ color: \"#FF9200\" }}>${item.price}</div>\n            </div>\n            <div className=\" ui buttons right floated\">\n              <button\n                onClick={() => this.props.cartRemove(item.id)}\n                className=\"ui negative button right floated\"\n              >\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      });\n    else return <div>Your Cart is empty !</div>;\n  };\n  total = () => {\n    var total = 0;\n    if (this.props.cart !== null)\n      Object.values(this.props.cart).map(item => {\n        return (total += parseInt(item.price));\n      });\n    return total;\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui celled massive list\">{this.renderList()}</div>\n        <div className=\"ui right floated\">\n          <h3> Total: ${this.total()}</h3>\n          <button className=\"fluid ui button positive \">Pay</button>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\nexport default connect(mapStateToProps, { cartRemove, cartFetch })(CartView);\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport history from \"../history\";\nimport ItemList from \"./ItemList\";\nimport ItemNew from \"./ItemNew\";\nimport ItemEdit from \"./ItemEdit\";\nimport ItemDelete from \"./ItemDelete\";\nimport ItemView from \"./ItemView\";\nimport Header from \"./Header\";\nimport Auth from \"./Auth\";\nimport CartView from \"./CartView\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui fluid container\">\n        <Router history={history}>\n          <div>\n            <Header />\n            <Switch>\n              <Route path=\"/shoppingcart/\" exact component={ItemList}></Route>\n              <Route\n                path=\"/shoppingcart/items/new\"\n                exact\n                component={ItemNew}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/edit/:id\"\n                exact\n                component={ItemEdit}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/delete/:id\"\n                exact\n                component={ItemDelete}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/view/:id\"\n                exact\n                component={ItemView}\n              ></Route>\n\n              <Route\n                path=\"/shoppingcart/cart/view\"\n                exact\n                component={CartView}\n              ></Route>\n              <Route path=\"/shoppingcart/login\" exact component={Auth}></Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\n\nconst INTIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\nexport default (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD,\n  CART_FETCH,\n  CART_REMOVE,\n  CART_CLEAN\n} from \"../actions/cartActions/type\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CART_ADD:\n      return { ...state, [action.payload.id]: action.payload };\n    case CART_FETCH:\n      return { ..._.mapKeys(action.payload, \"id\") };\n    case CART_REMOVE:\n      return _.omit(state, action.payload);\n    case CART_CLEAN:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport { reducer as formReducer } from \"redux-form\";\nimport itemReducer from \"./itemReducer\";\nimport cartReducer from \"./cartReducer\";\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  items: itemReducer,\n  cart: cartReducer\n});\n","import {\n  ITEM_CREATE,\n  ITEM_EDIT,\n  ITEMS_FETCH,\n  ITEM_FETCH,\n  ITEM_DELETE\n} from \"../actions/types\";\nimport _ from \"lodash\";\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ITEM_CREATE:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEM_EDIT:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEM_FETCH:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEMS_FETCH:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case ITEM_DELETE:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}