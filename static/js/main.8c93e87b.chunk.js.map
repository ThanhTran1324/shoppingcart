{"version":3,"sources":["history.js","apis/firebaseShoppingCart.js","actions/cartActions/index.js","actions/cartActions/type.js","actions/index.js","actions/types.js","components/SortAndFilter.js","components/ItemList.js","components/ItemForm.js","components/ItemNew.js","components/ItemEdit.js","components/Modal.js","components/ItemDelete.js","components/ItemView.js","components/Header.js","components/Auth.js","components/CartView.js","components/ForGotPassword.js","components/App.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/index.js","reducers/itemReducer.js","index.js"],"names":["createBrowserHistory","firebaseConnect","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cartFetch","dispatch","getState","a","auth","userId","database","ref","on","snapshot","type","payload","val","items","signIn","signOut","then","console","log","catch","error","history","push","itemFetch","id","orderByChild","equalTo","once","response","itemSorted","name","value","sortedItems","originalItems","_","Object","values","o","reverse","sort","b","price","createdTime","SortAndFilter","renderSelecter","input","label","option","className","onChange","handleChange","defaultValue","map","e","index","key","undefined","target","props","handleOnSearch","formValues","itemSearch","renderSearch","onSubmit","handleSubmit","placeholder","Field","component","this","Component","wrapper","connect","state","search","reduxForm","form","ItemList","renderAdmin","item","currentUserId","to","style","whiteSpace","renderList","overflow","width","height","objectFit","src","images","alt","onClick","cartAdd","textTransform","color","fontSize","itemsFetch","keys","length","marginTop","set","ItemForm","selectedFile","imageLink","uploadPercent","imageName","renderInput","meta","confirmError","touched","errorClassName","renderImageInput","fileSelectedHandler","fileUploadHandler","tabIndex","parseFloat","toFixed","convertImage","reader","FileReader","readAsDataURL","size","onload","event","img","Image","result","el","elem","document","createElement","scaleFactor","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","binary","atob","split","array","i","charCodeAt","setState","Blob","Uint8Array","files","getElementById","disabled","classList","add","preventDefault","filename","uploadTask","storage","put","bytesTransferred","totalBytes","getDownloadURL","downloadURL","formValue","date","Date","getTime","validate","ItemNew","itemCreate","isSignedIn","newItem","uuid","ItemEdit","match","params","itemEdit","initialValues","pick","ownProps","update","Modal","ReactDOM","createPortal","stopPropagation","header","content","actions","querySelector","ItemDelete","Fragment","itemDelete","remove","ItemView","Header","componentDidMount","onAuthStateChanged","user","uid","renderCartBadge","cart","renderAuthButton","React","Auth","autoComplete","showVerifyPassword","createUserWithEmailAndPassword","email","password","errorCode","code","signInWithEmailAndPassword","renderErrorFromServer","googleLogin","provider","GoogleAuthProvider","signInWithPopup","renderVerifyPassword","renderForgetPassword","SignInSignUpSwitch","cursor","componentWrapup","verifyPassword","CartView","float","cartRemove","total","totalprice","parseInt","display","child","ForGotPassword","componentWillMount","sendPasswordResetEmail","innerHTML","App","path","exact","INTIAL_STATE","initialState","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.8c93e87b.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import * as firebase from \"firebase\";\n\nvar config = {\n  apiKey: process.env.REACT_APP_API_1,\n  authDomain: process.env.REACT_APP_API_2,\n  databaseURL: process.env.REACT_APP_API_3,\n  projectId: process.env.REACT_APP_API_4,\n  storageBucket: process.env.REACT_APP_API_5,\n  messagingSenderId: process.env.REACT_APP_API_6,\n  appId: process.env.REACT_APP_API_7,\n  measurementId: process.env.REACT_APP_API_8\n};\n// Initialize Firebase\n\nexport const firebaseConnect = firebase.initializeApp(config);\n","import { CART_ADD, CART_FETCH, CART_REMOVE, CART_CLEAN } from \"./type\";\n\nimport { firebaseConnect } from \"../../apis/firebaseShoppingCart\";\n//import history from \"../../history\";\n\nexport const cartAdd = item => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  await firebaseConnect\n    .database()\n    .ref(`/cart/Cart-${userId}/${item.id}`)\n    .set(item);\n  dispatch({\n    type: CART_ADD,\n    payload: item\n  });\n};\n\nexport const cartFetch = () => async (dispatch, getState) => {\n  const userId = await getState().auth.userId;\n\n  if (userId !== null) {\n    firebaseConnect\n      .database()\n      .ref(`/cart/Cart-${userId}`)\n      .on(\"value\", function(snapshot) {\n        dispatch({\n          type: CART_FETCH,\n          payload: snapshot.val()\n        });\n      });\n  }\n};\n\nexport const cartRemove = id => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  firebaseConnect\n    .database()\n    .ref(`/cart/Cart-${userId}/`)\n    .child(id) //id of child\n    .remove();\n\n  dispatch({\n    type: CART_REMOVE,\n    payload: id\n  });\n};\n\nexport const cartClean = () => {\n  return {\n    type: CART_CLEAN\n  };\n};\n","export const CART_ADD = \"CART_ADD\";\nexport const CART_FETCH = \"CART_FETCH\";\nexport const CART_REMOVE = \"CART_REMOVE\";\nexport const CART_CLEAN = \"CART_CLEAN\";\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  ITEM_CREATE,\n  ITEMS_FETCH,\n  ITEM_DELETE,\n  ITEM_FETCH,\n  ITEM_EDIT,\n  ITEM_SORTED,\n  ITEM_FILTERED\n} from \"./types\";\nimport { cartClean } from \"./cartActions/\";\nimport uuid from \"uuid\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport history from \"../history\";\nimport firebase from \"firebase\";\n// import { CART_CLEAN } from \"./cartActions/type\";\nimport * as _ from \"lodash\";\n\n// var data = firebaseConnect.database().ref(\"/\");\n\nlet items = firebaseConnect.database().ref(\"items\");\nexport const signIn = userId => async dispatch => {\n  dispatch({\n    type: SIGN_IN,\n    payload: userId\n  });\n  // dispatch(cartFetch());\n};\n\nexport const signOut = () => dispatch => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      console.log(\"Signed Out\");\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  dispatch({ type: SIGN_OUT });\n  dispatch(cartClean());\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemCreate = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const newItem = {\n    ...formValues,\n    userId: userId,\n    id: uuid()\n  };\n  firebaseConnect\n    .database()\n    .ref(`items/${newItem.id}`)\n    .set(newItem);\n\n  const response = await firebaseConnect\n    .database()\n    .ref(`items/${newItem.id}`)\n    .once(\"value\")\n    .then(snapshot => {\n      return snapshot.val();\n    });\n\n  dispatch({\n    type: ITEM_CREATE,\n    payload: response\n  });\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemsFetch = () => async dispatch => {\n  let response = await items.once(\"value\").then(function(snapshot) {\n    return snapshot.val();\n  });\n  dispatch({\n    type: ITEMS_FETCH,\n    payload: response\n  });\n  dispatch(itemSorted(\"time\", \"1\")); //sort item as new first after fetch\n};\n//items.set(_.keyBy(response, \"id\")); convert array to Object to fix database\n\nexport const itemFetch = id => async dispatch => {\n  // let response = await items.once(\"value\").then(snapshot => {\n  //   return snapshot.val()[id]; //access to Object and get value with key = id\n  // });\n  let response = await items\n    .orderByChild(\"id\")\n    .equalTo(id)\n    .once(\"value\")\n    .then(function(snapshot) {\n      return snapshot.val();\n    });\n  dispatch({\n    type: ITEM_FETCH,\n    payload: response[id]\n  });\n};\n\nexport const itemDelete = id => async dispatch => {\n  const deleteItem = await firebaseConnect.database().ref(`items/${id}`);\n  deleteItem\n    .remove()\n    .then(() => {\n      dispatch({\n        type: ITEM_DELETE,\n        payload: id\n      });\n    })\n    .catch(error => {\n      console.log(error); // need fix delete error\n    });\n  history.push(\"/shoppingcart\");\n};\nexport const itemEdit = (id, formValues) => async dispatch => {\n  let editItem = firebaseConnect.database().ref(`items/${id}`);\n  editItem.update(formValues);\n  const response = await firebaseConnect\n    .database()\n    .ref(`items/${id}`)\n    .once(\"value\")\n    .then(snapshot => {\n      return snapshot.val();\n    });\n  dispatch({\n    type: ITEM_EDIT,\n    payload: response\n  });\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemSorted = (name, value) => (dispatch, getState) => {\n  //sortedItems is an array sent to reducer, reducer will convert to Object\n  console.log(name, value);\n  let sortedItems = [];\n  let originalItems = getState().items;\n  switch (name) {\n    //sort by name\n    case \"name\":\n      if (value === \"0\") {\n        //sort from a to z\n        sortedItems = _.sortBy(Object.values(originalItems), [\n          function(o) {\n            return o.name;\n          }\n        ]);\n      } else {\n        //sort from z to a\n        sortedItems = _.sortBy(Object.values(originalItems), [\n          function(o) {\n            return o.name;\n          }\n        ]).reverse();\n      }\n      break;\n\n    //end sort by name\n    case \"price\":\n      if (value === \"0\") {\n        //sort from low price to hight price\n        sortedItems = Object.values(originalItems).sort(\n          (a, b) => a.price - b.price\n        );\n        console.log(\"low to high\");\n      } else {\n        //sort from high to low price\n        sortedItems = Object.values(originalItems)\n          .sort((a, b) => a.price - b.price)\n          .reverse();\n      }\n      break;\n    case \"time\":\n      if (value === \"0\") {\n        //sort from old to new\n        sortedItems = Object.values(originalItems).sort((a, b) => {\n          return a.createdTime - b.createdTime;\n        });\n      } else {\n        //sort from new to old\n        sortedItems = Object.values(originalItems)\n          .sort((a, b) => {\n            return a.createdTime - b.createdTime;\n          })\n          .reverse();\n      }\n      break;\n    default:\n      console.log(\"no sort\");\n  }\n  dispatch({\n    type: ITEM_SORTED,\n    payload: sortedItems\n  });\n};\n\nexport const itemSearch = formValues => (dispatch, getState) => {\n  let items = getState().items;\n  let keyword = formValues.search;\n  //filter function\n  let filteredItem = [];\n  dispatch({\n    type: ITEM_FILTERED,\n    payload: filteredItem\n  });\n};\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const ITEM_CREATE = \"ITEM_CREATE\";\nexport const ITEM_EDIT = \"ITEM_EDIT\";\nexport const ITEMS_FETCH = \"ITEMS_FETCH\";\nexport const ITEM_FETCH = \"ITEM_FETCH\";\nexport const ITEM_DELETE = \"ITEM_DELETE\";\nexport const ITEM_SORTED = \"ITEM_SORTED\";\nexport const ITEM_FILTERED = \"ITEM_FILTERED\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemSorted, itemSearch } from \"../actions/\";\nimport { Field, reduxForm, formValues } from \"redux-form\";\n\nexport class SortAndFilter extends Component {\n  renderSelecter = ({ name, input, label, option }) => {\n    return (\n      <div className=\"ui form\">\n        {/* Sort Dropdown */}\n\n        <select {...input} onChange={this.handleChange} className=\"ui dropdown\">\n          <option value=\"-1\" defaultValue>\n            {label}\n          </option>\n          {option.map((e, index) => {\n            return (\n              <option value={index} key={index}>\n                {e}\n              </option>\n            );\n            // value = 0 => low to high and old to new\n            // value = 1 => high to old and new to old\n          })}\n        </select>\n        {/* End Sort  Dropdown */}\n      </div>\n    );\n  };\n  handleChange = e => {\n    if (e.target !== undefined) {\n      this.props.itemSorted(e.target.name, e.target.value);\n    }\n  };\n\n  handleOnSearch = formValues => {\n    this.props.itemSearch(formValues);\n  };\n  renderSearch = ({ input, name }) => {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.handleOnSearch)}\n        className=\"ui fluid category search\"\n      >\n        <div className=\"ui icon input\">\n          <input\n            {...input}\n            className=\"prompt\"\n            type=\"text\"\n            placeholder=\"Search...\"\n          ></input>\n          <i className=\"search icon\"></i>\n        </div>\n      </form>\n    );\n  };\n  render() {\n    // console.log(this.props);\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui grid\">\n          {/* here */}\n          <div className=\"four wide column\">\n            <Field name=\"search\" component={this.renderSearch}></Field>\n          </div>\n\n          <div className=\"four wide column\">\n            <Field\n              name=\"price\"\n              label=\"Price\"\n              component={this.renderSelecter}\n              option={[\"Low To High\", \"High To Low\"]}\n            ></Field>\n          </div>\n          <div className=\"four wide column\">\n            <Field\n              name=\"time\"\n              label=\"Time\"\n              component={this.renderSelecter}\n              option={[\"Old To New\", \"New To Old\"]}\n            ></Field>\n          </div>\n          <div className=\"four wide column\">\n            <Field\n              name=\"name\"\n              label=\"Name\"\n              component={this.renderSelecter}\n              option={[\"A-Z\", \"Z-A\"]}\n            ></Field>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items\n  };\n};\nconst wrapper = connect(mapStateToProps, { itemSorted, itemSearch })(\n  SortAndFilter\n);\nexport default reduxForm({\n  form: \"SortAndFilterForm\"\n})(wrapper);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { itemsFetch } from \"../actions\";\nimport { cartAdd } from \"../actions/cartActions\";\nimport SortAndFilter from \"./SortAndFilter\";\nexport class ItemList extends Component {\n  componentDidMount() {\n    this.props.itemsFetch();\n  }\n  renderAdmin = item => {\n    if (item.userId === this.props.currentUserId)\n      return (\n        <div>\n          <hr></hr>\n          <div className=\"ui large two buttons\">\n            <Link\n              to={`/shoppingcart/items/delete/${item.id}`}\n              className=\"ui inverted red button \"\n              style={{ whiteSpace: \"nowrap\" }}\n            >\n              <i className=\"icon trash alternate\" />\n              Delete\n            </Link>\n            <div className=\"or\"></div>\n            <Link\n              to={`/shoppingcart/items/edit/${item.id}`}\n              className=\"ui inverted blue button \"\n            >\n              <i className=\"edit icon\"></i>Edit\n            </Link>\n          </div>\n        </div>\n      );\n  };\n  renderList = () => {\n    return Object.values(this.props.items).map(item => {\n      // console.log(item.images);\n      return (\n        <div className=\"card  \" key={item.id}>\n          <div\n            className=\"blurring dimmable image \"\n            style={{ overflow: \"hidden\" }}\n          >\n            <img\n              className=\"imageCartList  \"\n              style={{\n                width: \"100%\",\n                height: \"290px\",\n                objectFit: \"fill\"\n              }}\n              src={\n                item.images === undefined\n                  ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\n                  : item.images\n              }\n              alt=\"hinh\"\n            ></img>\n          </div>\n\n          <div className=\"content\">\n            <div className=\" ui buttons right floated\">\n              <button\n                className=\"ui button primary\"\n                onClick={() => this.props.cartAdd(item)}\n              >\n                <i className=\"shopping cart icon\"></i>\n                Add\n              </button>\n            </div>\n            <div\n              className=\"header\"\n              style={{ overflow: \"hidden\", textTransform: \"capitalize\" }}\n            >\n              {item.name}\n            </div>\n            <div className=\"meta\">\n              <span\n                className=\"price\"\n                style={{ color: \"#FF9200\", fontSize: \"18px\" }}\n              >\n                ${item.price}\n              </span>\n            </div>\n\n            <div className=\"extra content\">{this.renderAdmin(item)}</div>\n          </div>\n        </div>\n\n        // <div key={item.id} className=\"item\">\n        //   {item.name}/${item.price}\n        //   <div className=\" ui buttons right floated\">\n        //     {this.renderAdmin(item)}\n        //     <button\n        //       className=\"ui button primary\"\n        //       onClick={() => this.props.cartAdd(item)}\n        //     >\n        //       <i className=\"shopping cart icon\"></i>\n        //       Add to cart\n        //     </button>\n        //   </div>\n        // </div>\n      );\n    });\n  };\n  render() {\n    if (Object.keys(this.props.items).length === 0) {\n      return (\n        <div className=\"ui fluid container \">\n          <div className=\"ui segment\">\n            <div className=\"ui active dimmer\" style={{ height: \"100vh\" }}>\n              <div className=\"ui massive text loader\">Loading...</div>\n            </div>\n            <p></p>\n            <p></p>\n            <p></p>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className=\"ui fluid container  \" style={{ marginTop: \"5px\" }}>\n          <SortAndFilter></SortAndFilter>\n          <div className=\"ui special cards centered\">{this.renderList()}</div>\n        </div>\n      );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    currentUserId: state.auth.userId\n  };\n};\nexport default connect(mapStateToProps, { itemsFetch, cartAdd })(ItemList);\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\n\n// import axios from \"axios\";\nclass ItemForm extends Component {\n  state = {\n    selectedFile: null,\n    imageLink: null,\n    uploadPercent: 0,\n    imageName: null\n  };\n\n  renderInput = ({ input, meta, label, type }) => {\n    const confirmError = meta.error && meta.touched;\n    const errorClassName = `field ${confirmError ? `error` : ``}`;\n\n    return (\n      <div className={errorClassName}>\n        <label>\n          {label}\n          {`${confirmError ? \"Requited\" : \"\"}`}\n        </label>\n        <input {...input} type={type} />\n      </div>\n    );\n  };\n\n  renderImageInput = ({ input, meta, label, uploadPercent }) => {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <div>\n          <input type=\"file\" onChange={this.fileSelectedHandler}></input>\n          <div\n            onClick={this.fileUploadHandler}\n            className=\"ui labeled button\"\n            tabIndex=\"0\"\n          >\n            <div id=\"uploadButton\" className=\"ui button  \">\n              <i className=\"upload icon \"></i> Upload\n            </div>\n            <p className=\"ui basic label\">\n              {parseFloat(uploadPercent).toFixed(2)}%\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  convertImage = item => {\n    console.log(\"converting\");\n    var resize_width = 600;\n    var reader = new FileReader();\n\n    //image turned to base64-encoded Data URI.\n    reader.readAsDataURL(item);\n    reader.name = item.name; //get the image's name\n    reader.size = item.size; //get the image's size\n    reader.onload = event => {\n      var img = new Image(); //create a image\n      img.src = event.target.result; //result is base64-encoded Data URI\n      img.name = event.target.name; //set name (optional)\n      img.size = event.target.size; //set size (optional)\n      img.onload = async el => {\n        var elem = document.createElement(\"canvas\"); //create a canvas\n\n        //scale the image to 600 (width) and keep aspect ratio\n        var scaleFactor = resize_width / el.target.width;\n        elem.width = resize_width;\n        elem.height = el.target.height * scaleFactor;\n\n        //draw in canvas\n        var ctx = elem.getContext(\"2d\");\n        ctx.drawImage(el.target, 0, 0, elem.width, elem.height);\n\n        //get the base64-encoded Data URI from the resize image\n        var srcEncoded = ctx.canvas.toDataURL(el.target, \"image/jpeg\", 0);\n        //convert uri to image\n        var binary = atob(srcEncoded.split(\",\")[1]);\n        var array = [];\n        for (var i = 0; i < binary.length; i++) {\n          array.push(binary.charCodeAt(i));\n        }\n        this.setState({\n          selectedFile: new Blob([new Uint8Array(array)], {\n            type: \"image/jpeg\"\n          })\n        });\n      };\n    };\n  };\n\n  fileSelectedHandler = event => {\n    if (event.target.files.length > 0) {\n      this.setState({ imageName: event.target.files[0].name });\n      this.convertImage(event.target.files[0]);\n      document.getElementById(\"submitButton\").disabled = true; //disable submit button , wait for click upload\n      document.getElementById(\"uploadButton\").classList.add(\"green\");\n    }\n  };\n  fileUploadHandler = event => {\n    event.preventDefault();\n    var filename = this.state.imageName; //get file name\n    var storageRef = firebaseConnect.storage().ref(`/images/` + filename); //upload to image folder\n    var uploadTask = storageRef.put(this.state.selectedFile);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        //run during upload proccess\n        this.setState({\n          uploadPercent: (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        });\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          // arrow function to use this.setState\n          this.setState({ imageLink: downloadURL });\n          document.getElementById(\"submitButton\").disabled = false;\n        });\n      }\n    );\n  };\n\n  onSubmit = formValue => {\n    //get time created of item\n    var date = new Date();\n    formValue.createdTime = date.getTime();\n    formValue.images = this.state.imageLink;\n    formValue.price = parseFloat(formValue.price);\n    this.props.onSubmit(formValue);\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <form\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n          className=\"ui form error\"\n        >\n          <Field name=\"name\" component={this.renderInput} label=\"Name : \" />\n          <Field\n            name=\"price\"\n            component={this.renderInput}\n            label=\"Price: \"\n            type=\"number\"\n          />\n\n          {/* Upload item pictures */}\n          <Field\n            name=\"images\"\n            component={this.renderImageInput}\n            label=\"Images: \"\n            uploadPercent={this.state.uploadPercent}\n          />\n\n          <button id=\"submitButton\" className=\"ui green approve right button\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst validate = formValue => {\n  const error = {};\n  if (!formValue.name) error.name = \"Requite Value!\";\n  if (!formValue.price) error.price = \"Requite Value!\";\n\n  return error;\n};\n\nexport default reduxForm({\n  form: \"ItemForm\",\n  validate\n})(ItemForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { itemCreate } from \"../actions\";\nimport ItemForm from \"./ItemForm\";\n\nclass ItemNew extends Component {\n  onSubmit = formValue => {\n    console.log(formValue);\n    this.props.itemCreate(formValue);\n  };\n  render() {\n    if (this.props.isSignedIn)\n      return <ItemForm onSubmit={this.onSubmit}></ItemForm>;\n    else {\n      return (\n        <div className=\"ui  container \">Please Login To Create New Item !</div>\n      );\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, { itemCreate })(ItemNew);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport ItemForm from \"./ItemForm\";\n\nimport { itemFetch, itemEdit } from \"../actions\";\nclass ItemEdit extends Component {\n  componentDidMount() {\n    this.props.itemFetch(this.props.match.params.id);\n\n    //fix createdTime of item\n    // Object.values(this.props.items).map(item => {\n    //   if (!item.createdTime) {\n    //     var date = new Date();\n    //     var TimeInMiliSecond = date.getTime();\n    //     var newItem = { ...item, createdTime: TimeInMiliSecond };\n    //     this.props.itemEdit(newItem.id, newItem);\n    //     console.log(\"edited\");\n    //   }\n    // });\n\n    // add createdTime to Database\n    // Object.values(this.props.items).map(item => {\n    //   var date = new Date();\n    //   var TimeInMiliSecond = date.getTime();\n    //   var newItem = { ...item, createdTime: TimeInMiliSecond };\n    //   this.props.itemEdit(newItem.id, newItem);\n    //   console.log(\"edited\");\n    // });\n  }\n\n  id = this.props.match.params.id;\n\n  onSubmit = formValues => {\n    this.props.itemEdit(this.id, formValues);\n  };\n  render() {\n    if (this.props.item)\n      return (\n        <ItemForm\n          onSubmit={this.onSubmit}\n          initialValues={_.pick(this.props.item, \"name\", \"price\")}\n        ></ItemForm>\n      );\n    else return \"loading\";\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    item: state.items[ownProps.match.params.id],\n    items: state.items\n  };\n};\nexport default connect(mapStateToProps, { itemFetch, itemEdit })(ItemEdit);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport history from \"../history\";\nconst Modal = props => {\n  return ReactDOM.createPortal(\n    <div\n      onClick={() => history.push(\"/\")}\n      className=\"ui dimmer modals visible active\"\n    >\n      <div\n        onClick={e => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">{props.header}</div>\n        <div className=\"content\"> {props.content}</div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Modal from \"./Modal\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { itemFetch, itemDelete } from \"../actions\";\nclass ItemDelete extends Component {\n  componentDidMount() {\n    this.props.itemFetch(this.props.match.params.id);\n  }\n  actions = () => {\n    return (\n      <React.Fragment>\n        <Link to=\"/shoppingcart\" className=\"ui button\">\n          Cancel\n        </Link>\n        <button\n          className=\"ui button primary\"\n          onClick={() => this.props.itemDelete(this.props.match.params.id)}\n        >\n          Delete\n        </button>\n      </React.Fragment>\n    );\n  };\n  render() {\n    //console.log(this.props.item);\n    return (\n      <div>\n        <Modal\n          actions={this.actions()}\n          header=\"Delete Item\"\n          content={`Do you want to delete   ${\n            this.props.item ? this.props.item.name : \"\"\n          }?`}\n        ></Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps.match.params.id);\n  return {\n    item: state.items[ownProps.match.params.id]\n  };\n};\nexport default connect(mapStateToProps, { itemFetch, itemDelete })(ItemDelete);\n","import React, { Component } from \"react\";\n\nexport class ItemView extends Component {\n  render() {\n    return <div>view</div>;\n  }\n}\n\nexport default ItemView;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport { cartFetch } from \"../actions/cartActions\";\nimport { signIn, signOut } from \"../actions/\";\nclass Header extends React.Component {\n  componentDidMount = async () => {\n    await firebaseConnect.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.signIn(user.uid);\n        this.props.cartFetch();\n      }\n    });\n  };\n  renderCartBadge = () => {\n    return (\n      <div>\n        Cart <i className=\" icon shopping cart\" />\n        <span className=\"badge\">{` ( ${\n          this.props.cart ? Object.values(this.props.cart).length : \"0\"\n        })`}</span>\n      </div>\n    );\n  };\n  renderAuthButton = () => {\n    if (this.props.isSignedIn)\n      return (\n        <Link to=\"/shoppingcart\" onClick={this.props.signOut} className=\"item \">\n          Logout\n        </Link>\n      );\n    else\n      return (\n        <Link to=\"/shoppingcart/login/\" className=\"item\">\n          Login\n        </Link>\n      );\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui teal four item inverted menu\">\n          <Link to=\"/shoppingcart/\" className=\" item\">\n            Home\n          </Link>\n          <Link to=\"/shoppingcart/items/new\" className=\"item\">\n            Create Item\n          </Link>\n          <Link id=\"cart\" to=\"/shoppingcart/cart/view\" className=\"item\">\n            {this.renderCartBadge()}\n          </Link>\n          {this.renderAuthButton()}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, { cartFetch, signIn, signOut })(Header);\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\n// import firebaseui from \"firebaseui\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./auth.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n// import GoogleAuth from \"./GoogleAuth\";\nimport history from \"../history\";\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: \"\",\n      showVerifyPassword: false\n    };\n  }\n\n  renderInput = ({ input, meta, label, type }) => {\n    const confirmError = meta.error && meta.touched;\n    const errorClassName = `field textbox ${confirmError ? `error` : ``}`;\n    return (\n      <div className={errorClassName}>\n        <label>\n          {label}\n          {`${confirmError ? meta.error : \"\"}`}\n        </label>\n        <input {...input} type={type} autoComplete={input.name} />\n      </div>\n    );\n  };\n  onSubmit = formValue => {\n    //--------Log In--------\n    if (!this.state.showVerifyPassword)\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(formValue.email, formValue.password)\n        .then(result => {\n          this.setState({ error: \"Login Success\" });\n          history.push(\"/shoppingcart\");\n        })\n        .catch(error => {\n          // Handle Errors here.\n          var errorCode = error.code;\n          this.setState({ error: errorCode });\n        });\n    //--------Sign Up--------\n    else {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(formValue.email, formValue.password)\n        .then(result => {\n          //Created User\n          history.push(`/shoppingcart`);\n        })\n        .catch(error => {\n          //Handle Erros here\n          var errorCode = error.code;\n          this.setState({ error: errorCode });\n        });\n    }\n  };\n  renderErrorFromServer = () => {\n    // console.log(this.state.error);\n    switch (this.state.error) {\n      case \"auth/user-not-found\":\n      case \"auth/wrong-password\":\n        return <div>Wrong User or Password</div>;\n      default:\n        return <div>{this.state.error}</div>;\n    }\n  };\n  googleLogin = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = result.credential.accessToken;\n        // // The signed-in user info.\n        // var user = result.user;\n        // ...\n        if (result.user) history.push(\"/shoppingcart\");\n      })\n      .catch(function(error) {\n        // Handle Errors here.\n        // var errorCode = error.code;\n        // var errorMessage = error.message;\n        // // The email of the user's account used.\n        // var email = error.email;\n        // // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        // ...\n      });\n  };\n\n  renderVerifyPassword = () => {\n    if (this.state.showVerifyPassword) {\n      return (\n        <Field\n          type=\"password\"\n          name=\"verifyPassword\"\n          label=\"Verify Password\"\n          component={this.renderInput}\n        ></Field>\n      );\n    }\n  };\n  renderForgetPassword = () => {\n    if (!this.state.showVerifyPassword) {\n      return (\n        <Link\n          to=\"/shoppingcart/forgotpassword\"\n          className=\"my_forgot_password_text\"\n        >\n          Forgot Your Password\n        </Link>\n      );\n    }\n  };\n  SignInSignUpSwitch = value => {\n    this.setState({ showVerifyPassword: value });\n  };\n  render() {\n    return (\n      <div className=\"ui  container \">\n        <div className=\"login-container\">\n          <div className=\"login-box\">\n            <div className=\"ui equal width center aligned padded grid\">\n              <div className=\"row\">\n                <div\n                  className=\" green column\"\n                  onClick={() => this.SignInSignUpSwitch(false)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  Welcome Back\n                </div>\n                <div\n                  className=\"blue column\"\n                  onClick={() => this.SignInSignUpSwitch(true)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  Sign Up\n                </div>\n              </div>\n            </div>\n            <form\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\n              className=\"ui form error\"\n            >\n              <Field\n                name=\"email\"\n                label=\"Email\"\n                component={this.renderInput}\n              ></Field>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                component={this.renderInput}\n              ></Field>\n              {this.renderForgetPassword()}\n              {this.renderVerifyPassword()}\n              {this.renderErrorFromServer()}\n              <button\n                type=\"submit\"\n                className={`ui approve  button  my-login-button ${\n                  this.state.showVerifyPassword ? `blue` : `green`\n                }`}\n              >\n                {this.state.showVerifyPassword ? `Sign Up` : `Log In`}\n              </button>\n            </form>\n          </div>\n          <button\n            onClick={this.googleLogin}\n            className=\"ui red google button my-google-login\"\n          >\n            <i className=\"google icon\"></i>Google Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nconst validate = formValue => {\n  const error = {};\n  const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (!formValue.email) error.email = \" Requite Value !\";\n  else if (!formValue.email.match(mailformat)) error.email = \" Wrong Format !\";\n  if (!formValue.password) error.password = \" Requite Value !\";\n\n  if (formValue.verifyPassword !== formValue.password)\n    error.verifyPassword = \" : Wrong Verify Password\";\n  if (!formValue.verifyPassword) error.verifyPassword = \" Requite Value !\";\n\n  return error;\n};\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nconst componentWrapup = connect(mapStateToProps, { signIn, signOut })(Auth);\n\nexport default reduxForm({\n  form: \"userForm\",\n  validate\n})(componentWrapup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n//import { Link } from \"react-router-dom\";\nimport { cartRemove, cartFetch } from \"../actions/cartActions\";\nexport class CartView extends Component {\n  componentDidMount() {\n    this.props.cartFetch();\n  }\n  renderList = () => {\n    return Object.values(this.props.cart).map(item => {\n      return (\n        <div key={item.id} className=\"item\">\n          {/* {item.name}/${item.price} */}\n          <div style={{ color: \"#FF9200\", float: \"right\" }}>/${item.price}</div>\n          <img\n            className=\"ui avatar image\"\n            src={item.images}\n            alt={item.name}\n          ></img>\n\n          <div className=\"content\">\n            <div\n              className=\"header\"\n              style={{ color: \"#0167C0\", textTransform: \"capitalize\" }}\n            >\n              {item.name}\n            </div>\n            <button\n              onClick={() => this.props.cartRemove(item.id)}\n              className=\"ui  mini  button \"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      );\n    });\n  };\n  total = () => {\n    var totalprice = 0;\n    if (this.props.cart !== null)\n      Object.values(this.props.cart).map(item => {\n        return (totalprice += parseInt(item.price));\n      });\n    return (\n      <span style={{ color: \"#FF9200\", fontSize: \"30px\" }}> ${totalprice}</span>\n    );\n  };\n\n  render() {\n    if (this.props.cart !== null) {\n      return (\n        <div className=\"ui container\">\n          <div className=\"ui celled massive list\">{this.renderList()}</div>\n\n          <h3 style={{ display: \"inline\" }}>\n            Subtotal ({Object.keys(this.props.cart).length} item):\n          </h3>\n          {this.total()}\n\n          <button className=\"fluid ui button positive \">Pay</button>\n        </div>\n      );\n    } else return <div>Your Cart is empty !</div>;\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\nexport default connect(mapStateToProps, { cartRemove, cartFetch })(CartView);\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nexport class ForGotPassword extends Component {\n  componentWillMount = () => {};\n  handleSubmit = event => {\n    event.preventDefault();\n    var auth = firebase.auth();\n    var email = document.getElementById(\"email\").value;\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        //email sent\n        console.log(\"email sent\");\n        document.getElementById(\"output\").innerHTML = \"Email has been sent!\";\n      })\n      .catch(error => {\n        //an error happened\n        // console.log(error);\n        document.getElementById(\"output\").innerHTML = error;\n      });\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <form>\n          <label>Forgot your password ? </label>\n          <p>\n            Enter the email address for your account we'll email you a link to\n            reset your password.\n          </p>\n          <h3>Email: </h3>\n          <input type=\"text\" id=\"email\"></input>\n          <button onClick={this.handleSubmit}>Sent Reset Password email</button>\n          <h2 id=\"output\"> </h2>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ForGotPassword;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport history from \"../history\";\nimport ItemList from \"./ItemList\";\nimport ItemNew from \"./ItemNew\";\nimport ItemEdit from \"./ItemEdit\";\nimport ItemDelete from \"./ItemDelete\";\nimport ItemView from \"./ItemView\";\nimport Header from \"./Header\";\nimport Auth from \"./Auth\";\nimport CartView from \"./CartView\";\nimport ForGotPassword from \"./ForGotPassword\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui fluid container\">\n        <Router history={history}>\n          <div>\n            <Header />\n            <Switch>\n              <Route path=\"/shoppingcart/\" exact component={ItemList}></Route>\n              <Route\n                path=\"/shoppingcart/items/new\"\n                exact\n                component={ItemNew}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/edit/:id\"\n                exact\n                component={ItemEdit}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/delete/:id\"\n                exact\n                component={ItemDelete}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/view/:id\"\n                exact\n                component={ItemView}\n              ></Route>\n\n              <Route\n                path=\"/shoppingcart/cart/view\"\n                exact\n                component={CartView}\n              ></Route>\n              <Route path=\"/shoppingcart/login\" exact component={Auth}></Route>\n              <Route\n                path=\"/shoppingcart/forgotpassword\"\n                exact\n                component={ForGotPassword}\n              ></Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\n\nconst INTIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\nexport default (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD,\n  CART_FETCH,\n  CART_REMOVE,\n  CART_CLEAN\n} from \"../actions/cartActions/type\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CART_ADD:\n      return { ...state, [action.payload.id]: action.payload };\n    case CART_FETCH:\n      return { ..._.mapKeys(action.payload, \"id\") };\n    case CART_REMOVE:\n      return _.omit(state, action.payload);\n    case CART_CLEAN:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport { reducer as formReducer } from \"redux-form\";\nimport itemReducer from \"./itemReducer\";\nimport cartReducer from \"./cartReducer\";\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  items: itemReducer,\n  cart: cartReducer\n});\n","import {\n  ITEM_CREATE,\n  ITEM_EDIT,\n  ITEMS_FETCH,\n  ITEM_FETCH,\n  ITEM_DELETE,\n  ITEM_SORTED,\n  ITEM_FILTERED\n} from \"../actions/types\";\nimport _ from \"lodash\";\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ITEM_CREATE:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEM_EDIT:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEM_FETCH:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEMS_FETCH:\n      // console.log(\"got items\");\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case ITEM_DELETE:\n      return _.omit(state, action.payload);\n    case ITEM_SORTED:\n      // console.table(action.payload);\n      return _.mapKeys(action.payload, \"id\");\n    case ITEM_FILTERED:\n      return action.payload; // need fix\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}