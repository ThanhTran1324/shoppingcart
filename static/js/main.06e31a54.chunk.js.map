{"version":3,"sources":["history.js","apis/firebaseShoppingCart.js","actions/cartActions/index.js","actions/cartActions/type.js","actions/index.js","actions/types.js","components/SortAndFilter.js","components/ItemList.js","components/RenderButtonLoginAsGuestUser.js","components/LoginRequiteBanner.js","components/ItemForm.js","components/ItemNew.js","components/ItemEdit.js","components/Modal.js","components/ItemDelete.js","components/ItemView.js","components/Header.js","components/Auth.js","components/MyPaypalButton.js","components/CartView.js","components/ForGotPassword.js","components/App.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/index.js","reducers/itemReducer.js","index.js"],"names":["createBrowserHistory","firebaseConnect","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cartFetch","dispatch","getState","a","auth","userId","response","database","ref","once","then","dataSnapshot","val","type","payload","items","signIn","isAnonymous","NotificationManager","success","signInAsAnonymous","isSignedIn","errorMessage","signInAnonymously","catch","error","message","signOut","console","log","history","push","itemFetch","id","orderByChild","equalTo","snapshot","itemSorted","name","value","sortedItems","originalItems","_","Object","values","o","reverse","sort","b","price","createdTime","SortAndFilter","renderSelecter","input","label","option","className","onChange","handleChange","defaultValue","map","e","index","key","target","props","handleOnSearch","formValues","renderSearch","onSubmit","handleSubmit","style","width","placeholder","Field","component","this","Component","wrapper","connect","state","reduxForm","form","ItemList","renderAdmin","item","currentUserId","to","whiteSpace","addToCartHandler","cartAdd","renderList","overflow","height","objectFit","src","images","alt","onClick","textTransform","color","fontSize","itemsFetch","keys","length","sortAndFilterFormValue","marginTop","SortAndFilterForm","set","RenderButtonLoginAsGuestUser","LoginRequiteBanner","banner","content","React","ItemForm","selectedFile","imageLink","uploadPercent","imageName","renderInput","meta","confirmError","touched","errorClassName","renderImageInput","fileSelectedHandler","fileUploadHandler","tabIndex","parseFloat","toFixed","convertImage","reader","FileReader","readAsDataURL","size","onload","event","img","Image","result","el","elem","document","createElement","scaleFactor","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","binary","atob","split","array","i","charCodeAt","setState","Blob","Uint8Array","files","getElementById","disabled","classList","add","preventDefault","filename","uploadTask","storage","put","on","bytesTransferred","totalBytes","getDownloadURL","downloadURL","formValue","date","Date","getTime","validate","ItemNew","itemCreate","newItem","uuid","ItemEdit","match","params","itemEdit","initialValues","pick","ownProps","update","Modal","ReactDOM","createPortal","stopPropagation","header","actions","querySelector","ItemDelete","Fragment","itemDelete","remove","ItemView","Header","componentDidMount","onAuthStateChanged","user","uid","renderCartBadge","number","cart","renderAuthButton","Auth","autoComplete","showVerifyPassword","credential","EmailAuthProvider","email","password","currentUser","linkWithCredential","usercred","createUserWithEmailAndPassword","errorCode","code","signInWithEmailAndPassword","renderErrorFromServer","googleLogin","provider","GoogleAuthProvider","signInWithPopup","renderVerifyPassword","renderForgetPassword","SignInSignUpSwitch","cursor","componentWrapup","verifyPassword","MyPaypalButton","paypalOptions","clientId","intent","buttonStyles","layout","shape","amount","CartView","total","float","cartRemove","renderTotal","totalprice","parseInt","countTotal","renderWarningPanelForlAnonymoust","justifyContent","description","child","ForGotPassword","componentWillMount","marginLeft","sendPasswordResetEmail","innerHTML","App","path","exact","INTIAL_STATE","initialState","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.06e31a54.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import * as firebase from \"firebase\";\n\nvar config = {\n  apiKey: process.env.REACT_APP_API_1,\n  authDomain: process.env.REACT_APP_API_2,\n  databaseURL: process.env.REACT_APP_API_3,\n  projectId: process.env.REACT_APP_API_4,\n  storageBucket: process.env.REACT_APP_API_5,\n  messagingSenderId: process.env.REACT_APP_API_6,\n  appId: process.env.REACT_APP_API_7,\n  measurementId: process.env.REACT_APP_API_8\n};\n// Initialize Firebase\n\nexport const firebaseConnect = firebase.initializeApp(config);\n","import { CART_ADD, CART_FETCH, CART_REMOVE, CART_CLEAN } from \"./type\";\n\nimport { firebaseConnect } from \"../../apis/firebaseShoppingCart\";\n//import history from \"../../history\";\nimport { NotificationManager } from \"react-notifications\";\nexport const cartAdd = item => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  if (userId) {\n    //for Logined User\n    await firebaseConnect\n      .database()\n      .ref(`/cart/Cart-${userId}/${item.id}`)\n      .set(item);\n    NotificationManager.success(\n      \"You have added a new Item!\",\n      \"Successful!\",\n      2000\n    );\n    dispatch({\n      type: CART_ADD,\n      payload: item\n    });\n  }\n};\n\nexport const cartFetch = () => async (dispatch, getState) => {\n  const userId = await getState().auth.userId;\n  let response = {};\n  if (userId !== null) {\n    response = await firebaseConnect\n      .database()\n      .ref(`/cart/Cart-${userId}`)\n      .once(\"value\")\n      .then(function(dataSnapshot) {\n        return dataSnapshot.val();\n      });\n    dispatch({\n      type: CART_FETCH,\n      payload: response\n    });\n  }\n};\n\nexport const cartRemove = id => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  if (userId) {\n    firebaseConnect\n      .database()\n      .ref(`/cart/Cart-${userId}/`)\n      .child(id) //id of child\n      .remove();\n\n    dispatch({\n      type: CART_REMOVE,\n      payload: id\n    });\n  }\n};\nexport const cartClean = () => {\n  return {\n    type: CART_CLEAN\n  };\n};\n","export const CART_ADD = \"CART_ADD\";\nexport const CART_FETCH = \"CART_FETCH\";\nexport const CART_REMOVE = \"CART_REMOVE\";\nexport const CART_CLEAN = \"CART_CLEAN\";\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  ITEM_CREATE,\n  ITEMS_FETCH,\n  ITEM_DELETE,\n  ITEM_FETCH,\n  ITEM_EDIT,\n  ITEM_SORTED\n} from \"./types\";\nimport { cartClean } from \"./cartActions/\";\nimport uuid from \"uuid\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport history from \"../history\";\nimport firebase from \"firebase\";\n// import { cartAdd } from \"./cartActions\";\n// import { CART_CLEAN } from \"./cartActions/type\";\nimport * as _ from \"lodash\";\nimport { NotificationManager } from \"react-notifications\";\n// var data = firebaseConnect.database().ref(\"/\");\n\nlet items = firebaseConnect.database().ref(\"items\");\n\nexport const signIn = (userId, isAnonymous) => async dispatch => {\n  if (isAnonymous)\n    NotificationManager.success(\n      \"Please Upgrade To Permanent User To Have Better Service !\",\n      \"WelCome Back\",\n      2000\n    );\n  else NotificationManager.success(\"Login Success\", \"Success\", 2000);\n  await dispatch({\n    type: SIGN_IN,\n    payload: { userId, isAnonymous }\n  });\n};\n\nexport const signInAsAnonymous = () => async (dispatch, getState) => {\n  if (!getState().auth.isSignedIn) {\n    var errorMessage = null;\n    //if user is not login so create new anonymous user\n    await firebaseConnect\n      .auth()\n      .signInAnonymously()\n      .catch(error => {\n        errorMessage = error.message;\n        NotificationManager.error(errorMessage, \"Error\", 2000);\n      });\n  }\n};\n\nexport const signOut = () => dispatch => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      NotificationManager.success(\"\", \"Logout Successful\", 2000);\n    })\n    .catch(error => {\n      console.log(error);\n      NotificationManager.error(error, \"Error\", 2000);\n    });\n\n  dispatch({ type: SIGN_OUT });\n  dispatch(cartClean());\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemCreate = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const newItem = {\n    ...formValues,\n    userId: userId,\n    id: uuid()\n  };\n  firebaseConnect\n    .database()\n    .ref(`items/${newItem.id}`)\n    .set(newItem);\n\n  const response = await firebaseConnect\n    .database()\n    .ref(`items/${newItem.id}`)\n    .once(\"value\")\n    .then(snapshot => {\n      return snapshot.val();\n    });\n  if (response) NotificationManager.success(\"\", \"New Item Created\", 2000);\n  dispatch({\n    type: ITEM_CREATE,\n    payload: response\n  });\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemsFetch = () => async dispatch => {\n  let response = await items.once(\"value\").then(function(snapshot) {\n    return snapshot.val();\n  });\n  dispatch({\n    type: ITEMS_FETCH,\n    payload: response\n  });\n  dispatch(itemSorted(\"time\", \"1\")); //sort item as new first after fetch\n};\n//items.set(_.keyBy(response, \"id\")); convert array to Object to fix database\n\nexport const itemFetch = id => async dispatch => {\n  // let response = await items.once(\"value\").then(snapshot => {\n  //   return snapshot.val()[id]; //access to Object and get value with key = id\n  // });\n  let response = await items\n    .orderByChild(\"id\")\n    .equalTo(id)\n    .once(\"value\")\n    .then(function(snapshot) {\n      return snapshot.val();\n    });\n  dispatch({\n    type: ITEM_FETCH,\n    payload: response[id]\n  });\n};\n\nexport const itemDelete = id => async dispatch => {\n  const deleteItem = await firebaseConnect.database().ref(`items/${id}`);\n  deleteItem\n    .remove()\n    .then(() => {\n      dispatch({\n        type: ITEM_DELETE,\n        payload: id\n      });\n    })\n    .catch(error => {\n      NotificationManager.error(error, \"Error\", 2000); // need fix delete error\n    });\n  NotificationManager.success(\"\", \"Deleted\", 2000);\n  history.push(\"/shoppingcart\");\n};\nexport const itemEdit = (id, formValues) => async dispatch => {\n  let editItem = firebaseConnect.database().ref(`items/${id}`);\n  editItem.update(formValues);\n  const response = await firebaseConnect\n    .database()\n    .ref(`items/${id}`)\n    .once(\"value\")\n    .then(snapshot => {\n      return snapshot.val();\n    });\n  dispatch({\n    type: ITEM_EDIT,\n    payload: response\n  });\n  history.push(\"/shoppingcart\");\n};\n\nexport const itemSorted = (name, value) => (dispatch, getState) => {\n  //sortedItems is an array sent to reducer, reducer will convert to Object\n  // console.log(name, value);\n  let sortedItems = [];\n  let originalItems = getState().items;\n  switch (name) {\n    //sort by name\n    case \"name\":\n      if (value === \"0\") {\n        //sort from a to z\n        sortedItems = _.sortBy(Object.values(originalItems), [\n          function(o) {\n            return o.name;\n          }\n        ]);\n      } else {\n        //sort from z to a\n        sortedItems = _.sortBy(Object.values(originalItems), [\n          function(o) {\n            return o.name;\n          }\n        ]).reverse();\n      }\n      break;\n\n    //end sort by name\n    case \"price\":\n      if (value === \"0\") {\n        //sort from low price to hight price\n        sortedItems = Object.values(originalItems).sort(\n          (a, b) => a.price - b.price\n        );\n        console.log(\"low to high\");\n      } else {\n        //sort from high to low price\n        sortedItems = Object.values(originalItems)\n          .sort((a, b) => a.price - b.price)\n          .reverse();\n      }\n      break;\n    case \"time\":\n      if (value === \"0\") {\n        //sort from old to new\n        sortedItems = Object.values(originalItems).sort((a, b) => {\n          return a.createdTime - b.createdTime;\n        });\n      } else {\n        //sort from new to old\n        sortedItems = Object.values(originalItems)\n          .sort((a, b) => {\n            return a.createdTime - b.createdTime;\n          })\n          .reverse();\n      }\n      break;\n    default:\n      console.log(\"no sort\");\n  }\n  dispatch({\n    type: ITEM_SORTED,\n    payload: sortedItems\n  });\n};\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const ITEM_CREATE = \"ITEM_CREATE\";\nexport const ITEM_EDIT = \"ITEM_EDIT\";\nexport const ITEMS_FETCH = \"ITEMS_FETCH\";\nexport const ITEM_FETCH = \"ITEM_FETCH\";\nexport const ITEM_DELETE = \"ITEM_DELETE\";\nexport const ITEM_SORTED = \"ITEM_SORTED\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemSorted } from \"../actions/\";\nimport { Field, reduxForm } from \"redux-form\";\n\nexport class SortAndFilter extends Component {\n  renderSelecter = ({ name, input, label, option }) => {\n    return (\n      <div className=\"ui form\">\n        {/* Sort Dropdown */}\n\n        <select {...input} onChange={this.handleChange} className=\"ui dropdown\">\n          <option value=\"-1\" defaultValue>\n            {label}\n          </option>\n          {option.map((e, index) => {\n            return (\n              <option value={index} key={index}>\n                {e}\n              </option>\n            );\n            // value = 0 => low to high and old to new\n            // value = 1 => high to old and new to old\n          })}\n        </select>\n        {/* End Sort  Dropdown */}\n      </div>\n    );\n  };\n  handleChange = e => {\n    if (e.target) {\n      this.props.itemSorted(e.target.name, e.target.value);\n    }\n  };\n\n  handleOnSearch = formValues => {\n    console.log(formValues);\n  };\n  renderSearch = ({ input, name }) => {\n    return (\n      <form onSubmit={this.props.handleSubmit(this.handleOnSearch)}>\n        <div className=\"ui input \" style={{ width: \"100%\" }}>\n          <input {...input} type=\"text\" placeholder=\"Search...\"></input>{\" \"}\n          <button className=\"ui button my-search-button\">\n            <i className=\"search icon\"></i>\n          </button>\n        </div>\n      </form>\n    );\n  };\n  render() {\n    // console.log(this.props);\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui grid\">\n          {/* here */}\n          <div className=\"four wide column\">\n            <Field name=\"search\" component={this.renderSearch}></Field>\n          </div>\n\n          <div className=\"four wide column\">\n            <Field\n              name=\"price\"\n              label=\"Price\"\n              component={this.renderSelecter}\n              option={[\"Low To High\", \"High To Low\"]}\n            ></Field>\n          </div>\n          <div className=\"four wide column\">\n            <Field\n              name=\"time\"\n              label=\"Time\"\n              component={this.renderSelecter}\n              option={[\"Old To New\", \"New To Old\"]}\n            ></Field>\n          </div>\n          <div className=\"four wide column\">\n            <Field\n              name=\"name\"\n              label=\"Name\"\n              component={this.renderSelecter}\n              option={[\"A-Z\", \"Z-A\"]}\n            ></Field>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items\n  };\n};\nconst wrapper = connect(mapStateToProps, { itemSorted })(SortAndFilter);\nexport default reduxForm({\n  form: \"SortAndFilterForm\"\n})(wrapper);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { itemsFetch, signInAsAnonymous } from \"../actions\";\nimport { cartAdd } from \"../actions/cartActions\";\nimport SortAndFilter from \"./SortAndFilter\";\n\nexport class ItemList extends Component {\n  componentDidMount() {\n    this.props.itemsFetch();\n  }\n  renderAdmin = item => {\n    if (item.userId === this.props.currentUserId)\n      return (\n        <div>\n          <hr></hr>\n          <div className=\"ui large two buttons\">\n            <Link\n              to={`/shoppingcart/items/delete/${item.id}`}\n              className=\"ui inverted red button \"\n              style={{ whiteSpace: \"nowrap\" }}\n            >\n              <i className=\"icon trash alternate\" />\n              Delete\n            </Link>\n            <div className=\"or\"></div>\n            <Link\n              to={`/shoppingcart/items/edit/${item.id}`}\n              className=\"ui inverted blue button \"\n            >\n              <i className=\"edit icon\"></i>Edit\n            </Link>\n          </div>\n        </div>\n      );\n  };\n  addToCartHandler = item => {\n    this.props.signInAsAnonymous();\n    this.props.cartAdd(item);\n  };\n  renderList = () => {\n    return Object.values(this.props.items).map(item => {\n      // console.log(item.images);\n      return (\n        <div className=\"card  \" key={item.id}>\n          <div\n            className=\"blurring dimmable image \"\n            style={{ overflow: \"hidden\" }}\n          >\n            <img\n              className=\"imageCartList  \"\n              style={{\n                width: \"100%\",\n                height: \"290px\",\n                objectFit: \"fill\"\n              }}\n              src={\n                !item.images\n                  ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\n                  : item.images\n              }\n              alt=\"hinh\"\n            ></img>\n          </div>\n\n          <div className=\"content\">\n            <div className=\" ui buttons right floated\">\n              <button\n                className=\"ui button primary\"\n                onClick={() => this.addToCartHandler(item)}\n              >\n                <i className=\"shopping cart icon\"></i>\n                Add\n              </button>\n            </div>\n            <div\n              className=\"header\"\n              style={{ overflow: \"hidden\", textTransform: \"capitalize\" }}\n            >\n              {item.name}\n            </div>\n            <div className=\"meta\">\n              <span\n                className=\"price\"\n                style={{ color: \"#FF9200\", fontSize: \"18px\" }}\n              >\n                ${item.price}\n              </span>\n            </div>\n\n            <div className=\"extra content\">{this.renderAdmin(item)}</div>\n          </div>\n        </div>\n\n        // <div key={item.id} className=\"item\">\n        //   {item.name}/${item.price}\n        //   <div className=\" ui buttons right floated\">\n        //     {this.renderAdmin(item)}\n        //     <button\n        //       className=\"ui button primary\"\n        //       onClick={() => this.props.cartAdd(item)}\n        //     >\n        //       <i className=\"shopping cart icon\"></i>\n        //       Add to cart\n        //     </button>\n        //   </div>\n        // </div>\n      );\n    });\n  };\n  render() {\n    // console.log(this.props.sortAndFilterFormValue);\n    if (\n      Object.keys(this.props.items).length === 0 &&\n      !this.props.sortAndFilterFormValue\n    ) {\n      return (\n        <div className=\"ui fluid container \">\n          <div className=\"ui segment\">\n            <div className=\"ui active dimmer\" style={{ height: \"100vh\" }}>\n              <div className=\"ui massive text loader\">Loading...</div>\n            </div>\n            <p></p>\n            <p></p>\n            <p></p>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className=\"ui fluid container  \" style={{ marginTop: \"5px\" }}>\n          <SortAndFilter></SortAndFilter>\n          <div className=\"ui special cards centered\">{this.renderList()}</div>\n        </div>\n      );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    sortAndFilterFormValue: state.form.SortAndFilterForm\n  };\n};\nexport default connect(mapStateToProps, {\n  itemsFetch,\n  cartAdd,\n  signInAsAnonymous\n})(ItemList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signInAsAnonymous } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nexport class RenderButtonLoginAsGuestUser extends Component {\n  render() {\n    if (!this.props.isSignedIn)\n      //not login\n      return (\n        <button\n          onClick={this.props.signInAsAnonymous}\n          className=\"ui teal google button my-google-login\"\n        >\n          <i className=\"user secret icon\"></i>Login As Guest User\n        </button>\n      );\n    else if (this.props.isSignedIn && this.props.isAnonymous) {\n      //logined as guest\n      return (\n        <Link\n          to=\"/shoppingcart/login/\"\n          className=\"ui blue google button my-google-login\"\n        >\n          <i className=\"user secret icon\"></i>Upgrade to permanent user\n        </Link>\n      );\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    isAnonymous: state.auth.isAnonymous\n  };\n};\nexport default connect(mapStateToProps, { signInAsAnonymous })(\n  RenderButtonLoginAsGuestUser\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport RenderButtonLoginAsGuestUser from \"./RenderButtonLoginAsGuestUser\";\nclass LoginRequiteBanner extends React.Component {\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui one column grid\">\n          <div className=\"column\">\n            <div className=\"ui raised segment\">\n              <p className=\"ui red ribbon label\">{this.props.banner}</p>\n              <p></p>\n              <div>\n                Please{\" \"}\n                {\n                  <Link className=\"ui teal button\" to=\"/shoppingcart/login\">\n                    Login\n                  </Link>\n                }\n                {this.props.content}\n                <RenderButtonLoginAsGuestUser />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null)(LoginRequiteBanner);\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport { NotificationManager } from \"react-notifications\";\n// import axios from \"axios\";\nclass ItemForm extends Component {\n  state = {\n    selectedFile: null,\n    imageLink: null,\n    uploadPercent: 0,\n    imageName: null\n  };\n\n  renderInput = ({ input, meta, label, type }) => {\n    const confirmError = meta.error && meta.touched;\n    const errorClassName = `field ${confirmError ? `error` : ``}`;\n\n    return (\n      <div className={errorClassName}>\n        <label>\n          {label}\n          {`${confirmError ? \"Requited\" : \"\"}`}\n        </label>\n        <input {...input} type={type} />\n      </div>\n    );\n  };\n\n  renderImageInput = ({ input, meta, label, uploadPercent }) => {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <div>\n          <input type=\"file\" onChange={this.fileSelectedHandler}></input>\n\n          <div\n            onClick={this.fileUploadHandler}\n            className=\"ui labeled button\"\n            tabIndex=\"0\"\n          >\n            <div id=\"uploadButton\" className=\"ui button  \">\n              <i className=\"upload icon \"></i> Upload\n            </div>\n            <p className=\"ui basic label\">\n              {parseFloat(uploadPercent).toFixed(2)}%\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  convertImage = item => {\n    var resize_width = 600;\n    var reader = new FileReader();\n\n    //image turned to base64-encoded Data URI.\n    reader.readAsDataURL(item);\n    reader.name = item.name; //get the image's name\n    reader.size = item.size; //get the image's size\n    reader.onload = event => {\n      var img = new Image(); //create a image\n      img.src = event.target.result; //result is base64-encoded Data URI\n      img.name = event.target.name; //set name (optional)\n      img.size = event.target.size; //set size (optional)\n      img.onload = async el => {\n        var elem = document.createElement(\"canvas\"); //create a canvas\n\n        //scale the image to 600 (width) and keep aspect ratio\n        var scaleFactor = resize_width / el.target.width;\n        elem.width = resize_width;\n        elem.height = el.target.height * scaleFactor;\n\n        //draw in canvas\n        var ctx = elem.getContext(\"2d\");\n        ctx.drawImage(el.target, 0, 0, elem.width, elem.height);\n\n        //get the base64-encoded Data URI from the resize image\n        var srcEncoded = ctx.canvas.toDataURL(el.target, \"image/jpeg\", 0);\n        //convert uri to image\n        var binary = atob(srcEncoded.split(\",\")[1]);\n        var array = [];\n        for (var i = 0; i < binary.length; i++) {\n          array.push(binary.charCodeAt(i));\n        }\n        this.setState({\n          selectedFile: new Blob([new Uint8Array(array)], {\n            type: \"image/jpeg\"\n          })\n        });\n      };\n    };\n  };\n\n  fileSelectedHandler = event => {\n    if (event.target.files.length > 0) {\n      this.setState({ imageName: event.target.files[0].name });\n      this.convertImage(event.target.files[0]);\n      NotificationManager.success(\n        ` ${parseFloat(event.target.files[0].size / 1024 / 1024).toFixed(\n          2\n        )} MB `,\n        \"Converting Your Image\",\n        2000\n      );\n      document.getElementById(\"submitButton\").disabled = true; //disable submit button , wait for click upload\n      document.getElementById(\"uploadButton\").classList.add(\"green\");\n    }\n  };\n  fileUploadHandler = event => {\n    event.preventDefault();\n    var filename = this.state.imageName; //get file name\n    var storageRef = firebaseConnect.storage().ref(`/images/` + filename); //upload to image folder\n    var uploadTask = storageRef.put(this.state.selectedFile);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        //run during upload proccess\n        this.setState({\n          uploadPercent: (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        });\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          // arrow function to use this.setState\n          this.setState({ imageLink: downloadURL });\n          document.getElementById(\"submitButton\").disabled = false;\n        });\n      }\n    );\n  };\n\n  onSubmit = formValue => {\n    //get time created of item\n    var date = new Date();\n    formValue.createdTime = date.getTime();\n    formValue.images = this.state.imageLink;\n    formValue.price = parseFloat(formValue.price);\n    this.props.onSubmit(formValue);\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <form\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n          className=\"ui form error\"\n        >\n          <Field name=\"name\" component={this.renderInput} label=\"Name : \" />\n          <Field\n            name=\"price\"\n            component={this.renderInput}\n            label=\"Price: \"\n            type=\"number\"\n          />\n\n          {/* Upload item pictures */}\n          <Field\n            name=\"images\"\n            component={this.renderImageInput}\n            label=\"Images: \"\n            uploadPercent={this.state.uploadPercent}\n          />\n\n          <button id=\"submitButton\" className=\"ui green approve right button\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst validate = formValue => {\n  const error = {};\n  if (!formValue.name) error.name = \"Requite Value!\";\n  if (!formValue.price) error.price = \"Requite Value!\";\n\n  return error;\n};\n\nexport default reduxForm({\n  form: \"ItemForm\",\n  validate\n})(ItemForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\nimport { itemCreate } from \"../actions\";\nimport ItemForm from \"./ItemForm\";\n\nclass ItemNew extends Component {\n  onSubmit = formValue => {\n    console.log(formValue);\n    this.props.itemCreate(formValue);\n  };\n\n  render() {\n    if (this.props.isSignedIn && !this.props.isAnonymous)\n      return <ItemForm onSubmit={this.onSubmit}></ItemForm>;\n    else if (this.props.isAnonymous)\n      return (\n        <LoginRequiteBanner\n          banner=\"Please Login\"\n          content={`You Are Shopping As Guest User!\n        Please Login To Have Better Service.`}\n        ></LoginRequiteBanner>\n      );\n    else {\n      return (\n        <LoginRequiteBanner\n          banner=\"Please Login\"\n          content=\"To Start Selling\"\n        ></LoginRequiteBanner>\n      );\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    isAnonymous: state.auth.isAnonymous\n  };\n};\nexport default connect(mapStateToProps, { itemCreate })(ItemNew);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport ItemForm from \"./ItemForm\";\n\nimport { itemFetch, itemEdit } from \"../actions\";\nclass ItemEdit extends Component {\n  componentDidMount() {\n    this.props.itemFetch(this.props.match.params.id);\n\n    //fix createdTime of item\n    // Object.values(this.props.items).map(item => {\n    //   if (!item.createdTime) {\n    //     var date = new Date();\n    //     var TimeInMiliSecond = date.getTime();\n    //     var newItem = { ...item, createdTime: TimeInMiliSecond };\n    //     this.props.itemEdit(newItem.id, newItem);\n    //     console.log(\"edited\");\n    //   }\n    // });\n\n    // add createdTime to Database\n    // Object.values(this.props.items).map(item => {\n    //   var date = new Date();\n    //   var TimeInMiliSecond = date.getTime();\n    //   var newItem = { ...item, createdTime: TimeInMiliSecond };\n    //   this.props.itemEdit(newItem.id, newItem);\n    //   console.log(\"edited\");\n    // });\n  }\n\n  id = this.props.match.params.id;\n\n  onSubmit = formValues => {\n    this.props.itemEdit(this.id, formValues);\n  };\n  render() {\n    if (this.props.item)\n      return (\n        <ItemForm\n          onSubmit={this.onSubmit}\n          initialValues={_.pick(this.props.item, \"name\", \"price\")}\n        ></ItemForm>\n      );\n    else return \"loading\";\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    item: state.items[ownProps.match.params.id],\n    items: state.items\n  };\n};\nexport default connect(mapStateToProps, { itemFetch, itemEdit })(ItemEdit);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport history from \"../history\";\nconst Modal = props => {\n  return ReactDOM.createPortal(\n    <div\n      onClick={() => history.push(\"/\")}\n      className=\"ui dimmer modals visible active\"\n    >\n      <div\n        onClick={e => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">{props.header}</div>\n        <div className=\"content\"> {props.content}</div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Modal from \"./Modal\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { itemFetch, itemDelete } from \"../actions\";\nclass ItemDelete extends Component {\n  componentDidMount() {\n    this.props.itemFetch(this.props.match.params.id);\n  }\n  actions = () => {\n    return (\n      <React.Fragment>\n        <Link to=\"/shoppingcart\" className=\"ui button\">\n          Cancel\n        </Link>\n        <button\n          className=\"ui button primary\"\n          onClick={() => this.props.itemDelete(this.props.match.params.id)}\n        >\n          Delete\n        </button>\n      </React.Fragment>\n    );\n  };\n  render() {\n    //console.log(this.props.item);\n    return (\n      <div>\n        <Modal\n          actions={this.actions()}\n          header=\"Delete Item\"\n          content={`Do you want to delete   ${\n            this.props.item ? this.props.item.name : \"\"\n          }?`}\n        ></Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps.match.params.id);\n  return {\n    item: state.items[ownProps.match.params.id]\n  };\n};\nexport default connect(mapStateToProps, { itemFetch, itemDelete })(ItemDelete);\n","import React, { Component } from \"react\";\n\nexport class ItemView extends Component {\n  render() {\n    return <div>view</div>;\n  }\n}\n\nexport default ItemView;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\nimport { cartFetch } from \"../actions/cartActions\";\nimport { signIn, signOut } from \"../actions/\";\nclass Header extends React.Component {\n  componentDidMount = async () => {\n    await firebaseConnect.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.signIn(user.uid, user.isAnonymous);\n        this.props.cartFetch();\n      }\n    });\n  };\n  renderCartBadge = () => {\n    let number = \"0\";\n\n    if (this.props.cart) number = Object.values(this.props.cart).length;\n    return (\n      <div>\n        Cart <i className=\" icon shopping cart\" />\n        <span className=\"badge\">{` ( ${number})`}</span>\n      </div>\n    );\n  };\n  renderAuthButton = () => {\n    if (this.props.isSignedIn && !this.props.isAnonymous)\n      return (\n        <Link to=\"/shoppingcart\" onClick={this.props.signOut} className=\"item \">\n          Logout\n        </Link>\n      );\n    else\n      return (\n        <Link to=\"/shoppingcart/login/\" className=\"item\">\n          Login\n        </Link>\n      );\n  };\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"ui teal four item inverted menu\">\n          <Link to=\"/shoppingcart/\" className=\" item\">\n            Home\n          </Link>\n          <Link to=\"/shoppingcart/items/new\" className=\"item\">\n            Create Item\n          </Link>\n          <Link id=\"cart\" to=\"/shoppingcart/cart/view\" className=\"item\">\n            {this.renderCartBadge()}\n          </Link>\n          {this.renderAuthButton()}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n    isSignedIn: state.auth.isSignedIn,\n    isAnonymous: state.auth.isAnonymous\n  };\n};\nexport default connect(mapStateToProps, { cartFetch, signIn, signOut })(Header);\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\n// import firebaseui from \"firebaseui\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./auth.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { NotificationManager } from \"react-notifications\";\nimport history from \"../history\";\n// import GoogleAuth from \"./GoogleAuth\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: \"\",\n      showVerifyPassword: false\n    };\n  }\n\n  renderInput = ({ input, meta, label, type }) => {\n    const confirmError = meta.error && meta.touched;\n    const errorClassName = `field textbox ${confirmError ? `error` : ``}`;\n    return (\n      <div className={errorClassName}>\n        <label>\n          {label}\n          {`${confirmError ? meta.error : \"\"}`}\n        </label>\n        <input {...input} type={type} autoComplete={input.name} />\n      </div>\n    );\n  };\n  onSubmit = formValue => {\n    //--------Log In--------\n    if (!this.state.showVerifyPassword) {\n      //Login\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(formValue.email, formValue.password)\n        .then(result => {\n          this.setState({ error: \"Login Success\" });\n\n          history.push(\"/shoppingcart\");\n        })\n        .catch(error => {\n          // Handle Errors here.\n          var errorCode = error.code;\n          this.setState({ error: errorCode });\n        });\n    }\n    //--------Sign Up--------\n    else {\n      if (this.props.isSignedIn && this.props.isAnonymous) {\n        //merge anonymous user and new user\n        var credential = firebase.auth.EmailAuthProvider.credential(\n          formValue.email,\n          formValue.password\n        );\n        // console.log(credential);\n        firebase\n          .auth()\n          .currentUser.linkWithCredential(credential)\n          .then(\n            function(usercred) {\n              NotificationManager.success(\n                `Anonymous account successfully upgraded `,\n                \"Successful!\",\n                2000\n              );\n              history.push(\"/shoppingcart\");\n              // console.log(\"Anonymous account successfully upgraded\");\n            },\n            function(error) {\n              NotificationManager.error(error.message, \"Error!\", 2000);\n              // console.log(\"Error upgrading anonymous account\", );\n            }\n          );\n      } else {\n        //Create User\n        firebase\n          .auth()\n          .createUserWithEmailAndPassword(formValue.email, formValue.password)\n          .then(result => {\n            history.push(`/shoppingcart`);\n          })\n          .catch(error => {\n            //Handle Erros here\n            var errorCode = error.code;\n            this.setState({ error: errorCode });\n          });\n      }\n      //notificateModal\n    }\n  };\n  renderErrorFromServer = () => {\n    // console.log(this.state.error);\n    switch (this.state.error) {\n      case \"auth/user-not-found\":\n      case \"auth/wrong-password\":\n        return <div>Wrong User or Password</div>;\n      default:\n        return <div>{this.state.error}</div>;\n    }\n  };\n  googleLogin = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function(result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = result.credential.accessToken;\n        // // The signed-in user info.\n        // var user = result.user;\n        // ...\n        if (result.user) history.push(\"/shoppingcart\");\n      })\n      .catch(function(error) {\n        // Handle Errors here.\n        // var errorCode = error.code;\n        // var errorMessage = error.message;\n        // // The email of the user's account used.\n        // var email = error.email;\n        // // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        // ...\n      });\n  };\n\n  renderVerifyPassword = () => {\n    if (this.state.showVerifyPassword) {\n      return (\n        <Field\n          type=\"password\"\n          name=\"verifyPassword\"\n          label=\"Verify Password\"\n          component={this.renderInput}\n        ></Field>\n      );\n    }\n  };\n  renderForgetPassword = () => {\n    if (!this.state.showVerifyPassword) {\n      return (\n        <Link\n          to=\"/shoppingcart/forgotpassword\"\n          className=\"my_forgot_password_text\"\n        >\n          Forgot Your Password\n        </Link>\n      );\n    }\n  };\n  SignInSignUpSwitch = value => {\n    this.setState({ showVerifyPassword: value });\n  };\n  render() {\n    return (\n      <div className=\"ui  container \">\n        <div className=\"login-container\">\n          <div className=\"login-box\">\n            <div className=\"ui equal width center aligned padded grid\">\n              <div className=\"row\">\n                <div\n                  className=\" green column\"\n                  onClick={() => this.SignInSignUpSwitch(false)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  Log in\n                </div>\n                <div\n                  className=\"blue column\"\n                  onClick={() => this.SignInSignUpSwitch(true)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  Sign Up\n                </div>\n              </div>\n            </div>\n            <form\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\n              className=\"ui form error\"\n            >\n              <Field\n                name=\"email\"\n                label=\"Email\"\n                component={this.renderInput}\n              ></Field>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                component={this.renderInput}\n              ></Field>\n              {this.renderForgetPassword()}\n              {this.renderVerifyPassword()}\n              {this.renderErrorFromServer()}\n              <button\n                type=\"submit\"\n                className={`ui approve  button  my-login-button ${\n                  this.state.showVerifyPassword ? `blue` : `green`\n                }`}\n              >\n                {this.state.showVerifyPassword ? `Sign Up` : `Log In`}\n              </button>\n            </form>\n          </div>\n          <button\n            onClick={this.googleLogin}\n            className=\"ui red google button my-google-login\"\n          >\n            <i className=\"google icon\"></i>Google Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nconst validate = formValue => {\n  const error = {};\n  const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (!formValue.email) error.email = \" Requite Value !\";\n  else if (!formValue.email.match(mailformat)) error.email = \" Wrong Format !\";\n  if (!formValue.password) error.password = \" Requite Value !\";\n\n  if (formValue.verifyPassword !== formValue.password)\n    error.verifyPassword = \" : Wrong Verify Password\";\n  if (!formValue.verifyPassword) error.verifyPassword = \" Requite Value !\";\n\n  return error;\n};\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    isAnonymous: state.auth.isAnonymous\n  };\n};\nconst componentWrapup = connect(mapStateToProps, {\n  signIn,\n  signOut\n})(Auth);\n\nexport default reduxForm({\n  form: \"userForm\",\n  validate\n})(componentWrapup);\n","/* eslint-disable react/react-in-jsx-scope */\nimport { PayPalButton } from \"react-paypal-button\";\nimport React from \"react\";\nexport default function MyPaypalButton(props) {\n  const paypalOptions = {\n    clientId:\n      \"AYI5Th6t7An5aFVx5rkUvvbo68XhT-ol3iXLVdyBbkiTzYUo9RaNZJoCcpVUKv3fGNQnGXzpF3J_Bd4a\",\n    intent: \"capture\"\n  };\n\n  const buttonStyles = {\n    layout: \"vertical\",\n    shape: \"rect\"\n  };\n  // console.log(props.price);\n  return (\n    <PayPalButton\n      paypalOptions={paypalOptions}\n      buttonStyles={buttonStyles}\n      amount={props.price}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";//import { Link } from \"react-router-dom\";\nimport { cartRemove, cartFetch } from \"../actions/cartActions\";\nimport MyPaypalButton from \"./MyPaypalButton\";\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\nexport class CartView extends Component {\n  state = {\n    total: 0\n  };\n\n  componentDidMount() {\n    this.props.cartFetch();\n  }\n  renderList = items => {\n    return items.map(item => {\n      return (\n        <div key={item.id} className=\"item\">\n          {/* {item.name}/${item.price} */}\n          <div style={{ color: \"#FF9200\", float: \"right\" }}>/${item.price}</div>\n          <img\n            className=\"ui avatar image\"\n            src={item.images}\n            alt={item.name}\n          ></img>\n\n          <div className=\"content\">\n            <div\n              className=\"header\"\n              style={{ color: \"#0167C0\", textTransform: \"capitalize\" }}\n            >\n              {item.name}\n            </div>\n            <button\n              onClick={() => this.props.cartRemove(item.id)}\n              className=\"ui  mini  button \"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderTotal = () => {\n    var totalprice = 0;\n    if (this.props.cart !== null) {\n      Object.values(this.props.cart).map(item => {\n        return (totalprice += parseInt(item.price));\n      });\n    }\n\n    return (\n      <span style={{ color: \"#FF9200\", fontSize: \"30px\" }}> ${totalprice}</span>\n    );\n  };\n  countTotal = () => {\n    let totalprice = 0;\n    Object.values(this.props.cart).map(item => {\n      return (totalprice += parseInt(item.price));\n    });\n    return totalprice;\n  };\n  renderWarningPanelForlAnonymoust = () => {\n    if (this.props.isAnonymous)\n      return (\n        <LoginRequiteBanner\n          banner=\"Please Login\"\n          content={`You Are Shopping As Guest User!\n          Please Login To Have Better Service.`}\n        ></LoginRequiteBanner>\n      );\n  };\n  render() {\n    if (this.props.isSignedIn) {\n      if (this.props.cart !== null) {\n        return (\n          <div className=\"ui container\" style={{ justifyContent: \"center\" }}>\n            {this.renderWarningPanelForlAnonymoust()}\n            <div className=\"ui celled massive list\">\n              {this.renderList(Object.values(this.props.cart))}\n            </div>\n\n            <div className=\"ui container \" style={{ width: \"500px\" }}>\n              {\" \"}\n              <h3>\n                Subtotal ({Object.keys(this.props.cart).length} item):\n                {this.renderTotal()}\n              </h3>\n              {this.countTotal() !== 0 ? (\n                <MyPaypalButton\n                  description=\"item cui bap\"\n                  price={this.countTotal()}\n                ></MyPaypalButton>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        );\n      } else return <div>Your Cart is empty !</div>;\n    } else {\n      return (\n        <LoginRequiteBanner\n          banner=\"Please Login\"\n          content=\"To Start Shopping\"\n        ></LoginRequiteBanner>\n      );\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n    isSignedIn: state.auth.isSignedIn,\n    isAnonymous: state.auth.isAnonymous\n  };\n};\nexport default connect(mapStateToProps, { cartRemove, cartFetch })(CartView);\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\n\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\nexport class ForGotPassword extends Component {\n  componentWillMount = () => {};\n  content = () => {\n    return (\n      <div>\n        <h2>\n          Enter the email address for your account we'll email you a link to\n          reset your password.\n        </h2>\n        <p></p>\n        <form className=\"ui form\">\n          <div className=\"field\">\n            <label>Email address: </label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              autoComplete=\"off\"\n              style={{ width: \"300px\" }}\n            ></input>\n            <button\n              onClick={this.handleSubmit}\n              className=\"ui interted teal button \"\n              style={{ marginLeft: \"5px\" }}\n            >\n              Sent Reset Password Email\n            </button>\n            <h2 id=\"output\"> </h2>\n          </div>\n        </form>\n        <p></p>\n      </div>\n    );\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    var auth = firebase.auth();\n    var email = document.getElementById(\"email\").value;\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        //email sent\n        console.log(\"email sent\");\n        document.getElementById(\"output\").innerHTML = \"Email has been sent!\";\n      })\n      .catch(error => {\n        //an error happened\n        // console.log(error);\n        document.getElementById(\"output\").innerHTML = error;\n      });\n  };\n  render() {\n    return (\n      <LoginRequiteBanner\n        banner=\"Forgot your password ? \"\n        content={this.content()}\n      ></LoginRequiteBanner>\n    );\n  }\n}\n\nexport default ForGotPassword;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport history from \"../history\";\nimport ItemList from \"./ItemList\";\nimport ItemNew from \"./ItemNew\";\nimport ItemEdit from \"./ItemEdit\";\nimport ItemDelete from \"./ItemDelete\";\nimport ItemView from \"./ItemView\";\nimport Header from \"./Header\";\nimport Auth from \"./Auth\";\nimport CartView from \"./CartView\";\nimport ForGotPassword from \"./ForGotPassword\";\n\nimport \"react-notifications/lib/notifications.css\";\nimport { NotificationContainer } from \"react-notifications\";\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui fluid container\">\n        <NotificationContainer />\n        <Router history={history}>\n          <div>\n            <Header />\n            <Switch>\n              <Route path=\"/shoppingcart/\" exact component={ItemList}></Route>\n              <Route\n                path=\"/shoppingcart/items/new\"\n                exact\n                component={ItemNew}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/edit/:id\"\n                exact\n                component={ItemEdit}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/delete/:id\"\n                exact\n                component={ItemDelete}\n              ></Route>\n              <Route\n                path=\"/shoppingcart/items/view/:id\"\n                exact\n                component={ItemView}\n              ></Route>\n\n              <Route\n                path=\"/shoppingcart/cart/view\"\n                exact\n                component={CartView}\n              ></Route>\n              <Route path=\"/shoppingcart/login\" exact component={Auth}></Route>\n              <Route\n                path=\"/shoppingcart/forgotpassword\"\n                exact\n                component={ForGotPassword}\n              ></Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\n\nconst INTIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n  isAnonymous: false\n};\nexport default (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true,\n        isAnonymous: action.payload.isAnonymous,\n        userId: action.payload.userId\n      };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, isAnonymous: false, userId: null };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD,\n  CART_FETCH,\n  CART_REMOVE,\n  CART_CLEAN\n} from \"../actions/cartActions/type\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CART_ADD:\n      return { ...state, [action.payload.id]: action.payload };\n    case CART_FETCH:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case CART_REMOVE:\n      return _.omit(state, action.payload);\n    case CART_CLEAN:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport { reducer as formReducer } from \"redux-form\";\nimport itemReducer from \"./itemReducer\";\nimport cartReducer from \"./cartReducer\";\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  items: itemReducer,\n  cart: cartReducer\n});\n","import {\n  ITEM_CREATE,\n  ITEM_EDIT,\n  ITEMS_FETCH,\n  ITEM_FETCH,\n  ITEM_DELETE,\n  ITEM_SORTED\n} from \"../actions/types\";\nimport _ from \"lodash\";\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ITEM_CREATE:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEM_EDIT:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEM_FETCH:\n      return { ...state, [action.payload.id]: action.payload };\n    case ITEMS_FETCH:\n      // console.log(\"got items\");\n      return { ..._.mapKeys(action.payload, \"id\") };\n    case ITEM_DELETE:\n      return _.omit(state, action.payload);\n    case ITEM_SORTED:\n      // console.table(action.payload);\n      return _.mapKeys(action.payload, \"id\");\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}