{"version":3,"sources":["history.js","apis/firebaseShoppingCart.js","actions/cartActions/index.js","actions/cartActions/type.js","actions/index.js","actions/types.js","components/SortAndFilter.js","components/Loading.js","components/Utility.js","components/ItemList.js","components/RenderButtonLoginAsGuestUser.js","components/LoginRequiteBanner.js","components/ItemForm.js","components/ItemNew.js","components/ItemEdit.js","components/Modal.js","components/ItemDelete.js","components/ItemView.js","components/Header.js","components/Auth.js","components/MyPaypalButton.js","components/CartView.js","components/ForGotPassword.js","components/App.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/index.js","reducers/itemReducer.js","index.js"],"names":["createBrowserHistory","firebaseConnect","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cartFetch","dispatch","getState","a","auth","userId","response","database","ref","once","then","dataSnapshot","val","type","payload","items","signIn","isAnonymous","NotificationManager","success","signInAsAnonymous","isSignedIn","errorMessage","signInAnonymously","catch","error","message","signOut","console","log","history","push","itemFetch","id","orderByChild","equalTo","snapshot","itemImageDelete","imageUrl","storage","refFromURL","delete","itemSorted","name","value","sortedItems","originalItems","_","Object","values","o","reverse","sort","b","price","createdTime","SortAndFilter","renderSelecter","input","label","option","className","onChange","handleChange","defaultValue","map","e","index","key","target","props","handleOnSearch","formValues","renderSearch","onSubmit","handleSubmit","style","width","placeholder","marginTop","paddingLeft","paddingRight","Field","component","this","Component","wrapper","connect","state","reduxForm","form","Loading","shortString","str","num","length","slice","ItemList","renderAdmin","item","currentUserId","to","addToCartHandler","cartAdd","renderList","src","images","alt","onClick","itemsFetch","keys","sortAndFilterFormValue","searchform","SortAndFilterForm","set","RenderButtonLoginAsGuestUser","LoginRequiteBanner","banner","content","React","ItemForm","selectedFile","imageLink","uploadPercent","imageName","componentDidMount","initialValues","setState","renderInput","meta","confirmError","touched","errorClassName","renderPreImage","renderImageInput","fileSelectedHandler","fileUploadHandler","tabIndex","parseFloat","toFixed","convertImage","reader","FileReader","readAsDataURL","size","onload","event","img","Image","result","el","elem","document","createElement","scaleFactor","height","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","binary","atob","split","array","i","charCodeAt","Blob","Uint8Array","files","getElementById","disabled","classList","add","randomImagePrefix","Math","floor","random","preventDefault","filename","uploadTask","put","on","bytesTransferred","totalBytes","getDownloadURL","downloadURL","formValue","date","Date","getTime","validate","ItemNew","itemCreate","newItem","uuidv4","ItemEdit","match","params","itemEdit","pick","ownProps","update","Modal","ReactDOM","createPortal","stopPropagation","header","actions","querySelector","ItemDelete","Fragment","itemDelete","remove","ItemView","Header","analytics","onAuthStateChanged","user","uid","renderCartBadge","number","cart","renderAuthButton","Auth","autoComplete","showVerifyPassword","credential","EmailAuthProvider","email","password","currentUser","linkWithCredential","usercred","createUserWithEmailAndPassword","errorCode","code","signInWithEmailAndPassword","renderErrorFromServer","googleLogin","provider","GoogleAuthProvider","signInWithPopup","renderVerifyPassword","renderForgetPassword","SignInSignUpSwitch","cursor","componentWrapup","verifyPassword","MyPaypalButton","paypalOptions","clientId","intent","buttonStyles","layout","shape","amount","CartView","total","class","cartRemove","renderTotal","totalprice","parseInt","countTotal","renderWarningPanelForlAnonymoust","justifyContent","description","child","ForGotPassword","componentWillMount","marginLeft","sendPasswordResetEmail","innerHTML","App","path","exact","INTIAL_STATE","initialState","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.cab1eaad.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/database\";\r\nimport \"firebase/analytics\";\r\n\r\nvar config = {\r\n  apiKey: process.env.REACT_APP_API_1,\r\n  authDomain: process.env.REACT_APP_API_2,\r\n  databaseURL: process.env.REACT_APP_API_3,\r\n  projectId: process.env.REACT_APP_API_4,\r\n  storageBucket: process.env.REACT_APP_API_5,\r\n  messagingSenderId: process.env.REACT_APP_API_6,\r\n  appId: process.env.REACT_APP_API_7,\r\n  measurementId: process.env.REACT_APP_API_8,\r\n};\r\n// Initialize Firebase\r\n\r\nexport const firebaseConnect = firebase.initializeApp(config);\r\n","import { CART_ADD, CART_FETCH, CART_REMOVE, CART_CLEAN } from \"./type\";\r\n\r\nimport { firebaseConnect } from \"../../apis/firebaseShoppingCart\";\r\n//import history from \"../../history\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nexport const cartAdd = (item) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  if (userId) {\r\n    //for Logined User\r\n    NotificationManager.success(\r\n      \"You have added a new Item!\",\r\n      \"Successful!\",\r\n      2000\r\n    );\r\n    await firebaseConnect\r\n      .database()\r\n      .ref(`/cart/Cart-${userId}/${item.id}`)\r\n      .set(item);\r\n\r\n    dispatch({\r\n      type: CART_ADD,\r\n      payload: item,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cartFetch = () => async (dispatch, getState) => {\r\n  const userId = await getState().auth.userId;\r\n  let response = {};\r\n  if (userId !== null) {\r\n    response = await firebaseConnect\r\n      .database()\r\n      .ref(`/cart/Cart-${userId}`)\r\n      .once(\"value\")\r\n      .then(function (dataSnapshot) {\r\n        return dataSnapshot.val();\r\n      });\r\n    dispatch({\r\n      type: CART_FETCH,\r\n      payload: response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cartRemove = (id) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  if (userId) {\r\n    firebaseConnect\r\n      .database()\r\n      .ref(`/cart/Cart-${userId}/`)\r\n      .child(id) //id of child\r\n      .remove();\r\n\r\n    dispatch({\r\n      type: CART_REMOVE,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\nexport const cartClean = () => {\r\n  return {\r\n    type: CART_CLEAN,\r\n  };\r\n};\r\n","export const CART_ADD = \"CART_ADD\";\r\nexport const CART_FETCH = \"CART_FETCH\";\r\nexport const CART_REMOVE = \"CART_REMOVE\";\r\nexport const CART_CLEAN = \"CART_CLEAN\";\r\n","import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  ITEM_CREATE,\r\n  ITEMS_FETCH,\r\n  ITEM_DELETE,\r\n  ITEM_FETCH,\r\n  ITEM_EDIT,\r\n  ITEM_SORTED,\r\n} from \"./types\";\r\nimport { cartClean } from \"./cartActions/\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport history from \"../history\";\r\nimport firebase from \"firebase\";\r\n// import { cartAdd } from \"./cartActions\";\r\n// import { CART_CLEAN } from \"./cartActions/type\";\r\nimport * as _ from \"lodash\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n// var data = firebaseConnect.database().ref(\"/\");\r\n\r\nlet items = firebaseConnect.database().ref(\"items\");\r\n\r\nexport const signIn = (userId, isAnonymous) => async (dispatch) => {\r\n  if (isAnonymous)\r\n    NotificationManager.success(\r\n      \"Please Upgrade To Permanent User To Have Better Service !\",\r\n      \"WelCome Back\",\r\n      2000\r\n    );\r\n  else NotificationManager.success(\"Login Success\", \"Success\", 2000);\r\n  await dispatch({\r\n    type: SIGN_IN,\r\n    payload: { userId, isAnonymous },\r\n  });\r\n};\r\n\r\nexport const signInAsAnonymous = () => async (dispatch, getState) => {\r\n  if (!getState().auth.isSignedIn) {\r\n    var errorMessage = null;\r\n    //if user is not login so create new anonymous user\r\n    await firebaseConnect\r\n      .auth()\r\n      .signInAnonymously()\r\n      .catch((error) => {\r\n        errorMessage = error.message;\r\n        NotificationManager.error(errorMessage, \"Error\", 2000);\r\n      });\r\n  }\r\n};\r\n\r\nexport const signOut = () => (dispatch) => {\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n      NotificationManager.success(\"\", \"Logout Successful\", 2000);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      NotificationManager.error(error.errorMessage, \"Error\", 2000);\r\n    });\r\n\r\n  dispatch({ type: SIGN_OUT });\r\n  dispatch(cartClean());\r\n  history.push(\"/shoppingcart\");\r\n};\r\n\r\nexport const itemCreate = (formValues) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const newItem = {\r\n    ...formValues,\r\n    userId: userId,\r\n    id: uuidv4(),\r\n  };\r\n  firebaseConnect.database().ref(`items/${newItem.id}`).set(newItem);\r\n\r\n  const response = await firebaseConnect\r\n    .database()\r\n    .ref(`items/${newItem.id}`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      return snapshot.val();\r\n    });\r\n  if (response) NotificationManager.success(\"\", \"New Item Created\", 2000);\r\n  dispatch({\r\n    type: ITEM_CREATE,\r\n    payload: response,\r\n  });\r\n  history.push(\"/shoppingcart\");\r\n};\r\n\r\nexport const itemsFetch = () => async (dispatch) => {\r\n  let response = await items.once(\"value\").then(function (snapshot) {\r\n    return snapshot.val();\r\n  });\r\n  dispatch({\r\n    type: ITEMS_FETCH,\r\n    payload: response,\r\n  });\r\n  dispatch(itemSorted(\"time\", \"1\")); //sort item as new first after fetch\r\n};\r\n//items.set(_.keyBy(response, \"id\")); convert array to Object to fix database\r\n\r\nexport const itemFetch = (id) => async (dispatch) => {\r\n  // let response = await items.once(\"value\").then(snapshot => {\r\n  //   return snapshot.val()[id]; //access to Object and get value with key = id\r\n  // });\r\n  let response = await items\r\n    .orderByChild(\"id\")\r\n    .equalTo(id)\r\n    .once(\"value\")\r\n    .then(function (snapshot) {\r\n      return snapshot.val();\r\n    });\r\n  dispatch({\r\n    type: ITEM_FETCH,\r\n    payload: response[id],\r\n  });\r\n};\r\nexport const itemImageDelete = (imageUrl) => () => {\r\n  firebaseConnect\r\n    .storage()\r\n    .refFromURL(imageUrl)\r\n    .delete()\r\n    .then(function () {\r\n      console.log(\"image deleted\");\r\n    })\r\n    .catch(function () {\r\n      console.log(\"unable to delete image\");\r\n    });\r\n};\r\nexport const itemDelete = (id) => async (dispatch, getState) => {\r\n  const deleteItem = await firebaseConnect.database().ref(`items/${id}`);\r\n  deleteItem\r\n    .remove()\r\n    .then(() => {\r\n      if (getState().items[id].images)\r\n        itemImageDelete(getState().items[id].images);\r\n      NotificationManager.success(\"\", \"Item Deleted\", 2000);\r\n      dispatch({\r\n        type: ITEM_DELETE,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      NotificationManager.error(error.errorMessage, \"Error\", 2000); // need fix delete error\r\n    });\r\n\r\n  history.push(\"/shoppingcart\");\r\n};\r\nexport const itemEdit = (id, formValues) => async (dispatch) => {\r\n  let editItem = firebaseConnect.database().ref(`items/${id}`);\r\n  editItem.update(formValues);\r\n  const response = await firebaseConnect\r\n    .database()\r\n    .ref(`items/${id}`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      return snapshot.val();\r\n    });\r\n  dispatch({\r\n    type: ITEM_EDIT,\r\n    payload: response,\r\n  });\r\n  history.push(\"/shoppingcart\");\r\n};\r\n\r\nexport const itemSorted = (name, value) => (dispatch, getState) => {\r\n  //sortedItems is an array sent to reducer, reducer will convert to Object\r\n\r\n  let sortedItems = [];\r\n  let originalItems = getState().items;\r\n  switch (name) {\r\n    //sort by name\r\n    case \"name\":\r\n      if (value === \"0\") {\r\n        //sort from a to z\r\n        sortedItems = _.sortBy(Object.values(originalItems), [\r\n          function (o) {\r\n            return o.name;\r\n          },\r\n        ]);\r\n      } else {\r\n        //sort from z to a\r\n        sortedItems = _.sortBy(Object.values(originalItems), [\r\n          function (o) {\r\n            return o.name;\r\n          },\r\n        ]).reverse();\r\n      }\r\n      break;\r\n\r\n    //end sort by name\r\n    case \"price\":\r\n      if (value === \"0\") {\r\n        //sort from low price to hight price\r\n        sortedItems = Object.values(originalItems).sort(\r\n          (a, b) => a.price - b.price\r\n        );\r\n      } else {\r\n        //sort from high to low price\r\n        sortedItems = Object.values(originalItems)\r\n          .sort((a, b) => a.price - b.price)\r\n          .reverse();\r\n      }\r\n      break;\r\n    case \"time\":\r\n      if (value === \"0\") {\r\n        //sort from old to new\r\n        sortedItems = Object.values(originalItems).sort((a, b) => {\r\n          return a.createdTime - b.createdTime;\r\n        });\r\n      } else {\r\n        //sort from new to old\r\n        sortedItems = Object.values(originalItems)\r\n          .sort((a, b) => {\r\n            return a.createdTime - b.createdTime;\r\n          })\r\n          .reverse();\r\n      }\r\n      break;\r\n    // case \"searchByName\":\r\n    //   sortedItems = Object.values(originalItems).filter(e =>\r\n    //     e.name.match(value)\r\n    //   );\r\n    //   console.log(sortedItems.length === 0);\r\n    //   if (sortedItems.length === 0) {\r\n    //     console.log(\"no item\");\r\n    //     NotificationManager.warning(\"\", \"No Item Was found!\", 3000);\r\n    //     dispatch(itemsFetch());\r\n    //   }\r\n\r\n    //   break;\r\n    default:\r\n  }\r\n  dispatch({\r\n    type: ITEM_SORTED,\r\n    payload: sortedItems,\r\n  });\r\n};\r\n","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const ITEM_CREATE = \"ITEM_CREATE\";\r\nexport const ITEM_EDIT = \"ITEM_EDIT\";\r\nexport const ITEMS_FETCH = \"ITEMS_FETCH\";\r\nexport const ITEM_FETCH = \"ITEM_FETCH\";\r\nexport const ITEM_DELETE = \"ITEM_DELETE\";\r\nexport const ITEM_SORTED = \"ITEM_SORTED\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { itemSorted } from \"../actions/\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nexport class SortAndFilter extends Component {\r\n  renderSelecter = ({ name, input, label, option }) => {\r\n    return (\r\n      <div className=\"ui three column form\">\r\n        {/* Sort Dropdown */}\r\n\r\n        <select {...input} onChange={this.handleChange} className=\"ui dropdown\">\r\n          <option value=\"-1\" defaultValue>\r\n            {label}\r\n          </option>\r\n          {option.map((e, index) => {\r\n            return (\r\n              <option value={index} key={index}>\r\n                {e}\r\n              </option>\r\n            );\r\n            // value = 0 => low to high and old to new\r\n            // value = 1 => high to old and new to old\r\n          })}\r\n        </select>\r\n        {/* End Sort  Dropdown */}\r\n      </div>\r\n    );\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target) {\r\n      this.props.itemSorted(e.target.name, e.target.value);\r\n    }\r\n  };\r\n\r\n  handleOnSearch = (formValues) => {\r\n    // console.log(formValues);\r\n    // this.props.itemSorted(\"searchByName\", formValues.search);\r\n  };\r\n  renderSearch = ({ input, name }) => {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.handleOnSearch)}>\r\n        <div className=\"ui input \" style={{ width: \"100%\" }}>\r\n          <input {...input} type=\"text\" placeholder=\"Search...\"></input>{\" \"}\r\n          <button type=\"submit\" className=\"ui button my-search-button\">\r\n            <i className=\"search icon\"></i>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div className=\"ui grid container \" style={{ marginTop: \"10px\" }}>\r\n        {/* here */}\r\n        {/* <div className=\"three wide column\">\r\n            <Field name=\"search\" component={this.renderSearch}></Field>\r\n          </div> */}\r\n        <div\r\n          className=\"four column row\"\r\n          style={{ width: \"100%\", paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <div className=\"ui  ui three column form\">\r\n            <input placeholder=\"Search\"></input>\r\n          </div>\r\n          <Field\r\n            name=\"price\"\r\n            label=\"Price\"\r\n            component={this.renderSelecter}\r\n            option={[\"Low To High\", \"High To Low\"]}\r\n          ></Field>\r\n\r\n          <Field\r\n            name=\"time\"\r\n            label=\"Time\"\r\n            component={this.renderSelecter}\r\n            option={[\"Old To New\", \"New To Old\"]}\r\n          ></Field>\r\n\r\n          <Field\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            component={this.renderSelecter}\r\n            option={[\"A-Z\", \"Z-A\"]}\r\n          ></Field>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n  };\r\n};\r\nconst wrapper = connect(mapStateToProps, { itemSorted })(SortAndFilter);\r\nexport default reduxForm({\r\n  form: \"SortAndFilterForm\",\r\n})(wrapper);\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"ui active active dimmer\">\r\n      <div className=\"ui large text loader\">Loading ...</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","export const shortString = function (str, num) {\r\n  if (str.length <= num) return str;\r\n  return str.slice(0, num) + \"...\";\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { itemsFetch, signInAsAnonymous } from \"../actions\";\r\nimport { cartAdd } from \"../actions/cartActions\";\r\nimport SortAndFilter from \"./SortAndFilter\";\r\nimport Loading from \"./Loading\";\r\nimport { shortString } from \"./Utility\";\r\nimport \"../css/ItemList.css\";\r\nexport class ItemList extends Component {\r\n  componentDidMount() {\r\n    this.props.itemsFetch();\r\n  }\r\n  renderAdmin = (item) => {\r\n    if (item.userId === this.props.currentUserId)\r\n      return (\r\n        <div>\r\n          <hr></hr>\r\n          <div className=\"ui large two buttons\">\r\n            <Link\r\n              to={`/shoppingcart/items/delete/${item.id}`}\r\n              className=\"ui inverted red button \"\r\n              // style={{ whiteSpace: \"nowrap\" }}\r\n            >\r\n              <i className=\"icon trash alternate\" />\r\n              Delete\r\n            </Link>\r\n            <div className=\"or\"></div>\r\n            <Link\r\n              to={`/shoppingcart/items/edit/${item.id}`}\r\n              className=\"ui inverted blue button \"\r\n            >\r\n              <i className=\"edit icon\"></i>Edit\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n  addToCartHandler = (item) => {\r\n    this.props.signInAsAnonymous();\r\n    this.props.cartAdd(item);\r\n  };\r\n  // shortString = (str, num) => {\r\n  //   if (str.length <= num) return str;\r\n  //   return str.slice(0, num) + \"...\";\r\n  // };\r\n  renderList = (items) => {\r\n    return items.map((item) => {\r\n      return (\r\n        <div className=\"card  \" key={item.id}>\r\n          <div\r\n            className=\"blurring dimmable image \"\r\n            // style={{ position: \"relative\" }}\r\n          >\r\n            <img\r\n              className=\"imageCartList  myImageCardList\"\r\n              src={\r\n                !item.images\r\n                  ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\r\n                  : item.images\r\n              }\r\n              alt=\"hinh\"\r\n            ></img>\r\n            <button\r\n              className=\"ui button primary myAddButton\"\r\n              onClick={() => this.addToCartHandler(item)}\r\n            >\r\n              <i className=\"shopping cart icon\"></i>\r\n              Add\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"content\">\r\n            {/* <div className=\" ui buttons right floated\"> */}\r\n\r\n            {/* </div> */}\r\n            <div className=\"header myItemName\">\r\n              {shortString(item.name, 50)}\r\n            </div>\r\n            <div className=\"meta\">\r\n              <p className=\"myPrice\">${item.price}</p>\r\n            </div>\r\n\r\n            <div className=\"extra content\">{this.renderAdmin(item)}</div>\r\n          </div>\r\n        </div>\r\n\r\n        // <div key={item.id} className=\"item\">\r\n        //   {item.name}/${item.price}\r\n        //   <div className=\" ui buttons right floated\">\r\n        //     {this.renderAdmin(item)}\r\n        //     <button\r\n        //       className=\"ui button primary\"\r\n        //       onClick={() => this.props.cartAdd(item)}\r\n        //     >\r\n        //       <i className=\"shopping cart icon\"></i>\r\n        //       Add to cart\r\n        //     </button>\r\n        //   </div>\r\n        // </div>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    // console.log(this.props.sortAndFilterFormValue);\r\n    if (\r\n      Object.keys(this.props.items).length === 0 &&\r\n      !this.props.sortAndFilterFormValue\r\n    ) {\r\n      return <Loading />;\r\n    } else\r\n      return (\r\n        <div className=\"ui fluid container \">\r\n          <SortAndFilter></SortAndFilter>\r\n          <div className=\"ui special cards centered\">\r\n            {this.renderList(Object.values(this.props.items))}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n    searchform: state.form.SortAndFilterForm,\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  itemsFetch,\r\n  cartAdd,\r\n  signInAsAnonymous,\r\n})(ItemList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAsAnonymous } from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nexport class RenderButtonLoginAsGuestUser extends Component {\r\n  render() {\r\n    if (!this.props.isSignedIn)\r\n      //not login\r\n      return (\r\n        <button\r\n          onClick={this.props.signInAsAnonymous}\r\n          className=\"ui teal google button my-google-login\"\r\n        >\r\n          <i className=\"user secret icon\"></i>Login As Guest User\r\n        </button>\r\n      );\r\n    else if (this.props.isSignedIn && this.props.isAnonymous) {\r\n      //logined as guest\r\n      return (\r\n        <Link\r\n          to=\"/shoppingcart/login/\"\r\n          className=\"ui blue google button my-google-login\"\r\n        >\r\n          <i className=\"user secret icon\"></i>Upgrade to permanent user\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { signInAsAnonymous })(\r\n  RenderButtonLoginAsGuestUser\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport RenderButtonLoginAsGuestUser from \"./RenderButtonLoginAsGuestUser\";\r\nclass LoginRequiteBanner extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui one column grid\">\r\n          <div className=\"column\">\r\n            <div className=\"ui raised segment\">\r\n              <p className=\"ui red ribbon label\">{this.props.banner}</p>\r\n              <p></p>\r\n              <div>\r\n                Please{\" \"}\r\n                {\r\n                  <Link className=\"ui teal button\" to=\"/shoppingcart/login\">\r\n                    Login\r\n                  </Link>\r\n                }\r\n                {this.props.content}\r\n                <RenderButtonLoginAsGuestUser />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(LoginRequiteBanner);\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n// import axios from \"axios\";\r\nclass ItemForm extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    imageLink: null,\r\n    uploadPercent: 0,\r\n    imageName: null,\r\n  };\r\n  componentDidMount = () => {\r\n    if (this.props.initialValues)\r\n      this.setState({ imageLink: this.props.initialValues.images });\r\n  };\r\n  renderInput = ({ input, meta, label, type }) => {\r\n    const confirmError = meta.error && meta.touched;\r\n    const errorClassName = `field ${confirmError ? `error` : ``}`;\r\n\r\n    return (\r\n      <div className={errorClassName}>\r\n        <label>\r\n          {label} :{`${confirmError ? \"Requited\" : \"\"}`}\r\n        </label>\r\n        <input {...input} type={type} placeholder={label} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderPreImage = () => {\r\n    if (this.props.initialValues) {\r\n      return (\r\n        <div>\r\n          <img\r\n            className=\"ui medium centered rounded image \"\r\n            src={this.props.initialValues.images}\r\n            alt=\"Item\"\r\n          ></img>\r\n          <p> Click Choose File to update new image :</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  renderImageInput = ({ input, meta, label, uploadPercent }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        <label>{label} :</label>\r\n        {this.renderPreImage()}\r\n\r\n        <div>\r\n          <input type=\"file\" onChange={this.fileSelectedHandler}></input>\r\n\r\n          <div\r\n            onClick={this.fileUploadHandler}\r\n            className=\"ui labeled button\"\r\n            tabIndex=\"0\"\r\n          >\r\n            <div id=\"uploadButton\" className=\"ui button  \">\r\n              <i className=\"upload icon \"></i> Upload\r\n            </div>\r\n            <p className=\"ui basic label\">\r\n              {parseFloat(uploadPercent).toFixed(2)}%\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  convertImage = (item) => {\r\n    var resize_width = 600;\r\n    var reader = new FileReader();\r\n\r\n    //image turned to base64-encoded Data URI.\r\n    reader.readAsDataURL(item);\r\n    reader.name = item.name; //get the image's name\r\n    reader.size = item.size; //get the image's size\r\n    reader.onload = (event) => {\r\n      var img = new Image(); //create a image\r\n      img.src = event.target.result; //result is base64-encoded Data URI\r\n      img.name = event.target.name; //set name (optional)\r\n      img.size = event.target.size; //set size (optional)\r\n      img.onload = async (el) => {\r\n        var elem = document.createElement(\"canvas\"); //create a canvas\r\n\r\n        //scale the image to 600 (width) and keep aspect ratio\r\n        var scaleFactor = resize_width / el.target.width;\r\n        elem.width = resize_width;\r\n        elem.height = el.target.height * scaleFactor;\r\n\r\n        //draw in canvas\r\n        var ctx = elem.getContext(\"2d\");\r\n        ctx.drawImage(el.target, 0, 0, elem.width, elem.height);\r\n\r\n        //get the base64-encoded Data URI from the resize image\r\n        var srcEncoded = ctx.canvas.toDataURL(el.target, \"image/jpeg\", 0);\r\n        //convert uri to image\r\n        var binary = atob(srcEncoded.split(\",\")[1]);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n          array.push(binary.charCodeAt(i));\r\n        }\r\n        this.setState({\r\n          selectedFile: new Blob([new Uint8Array(array)], {\r\n            type: \"image/jpeg\",\r\n          }),\r\n        });\r\n      };\r\n    };\r\n  };\r\n\r\n  fileSelectedHandler = (event) => {\r\n    if (event.target.files.length > 0) {\r\n      this.setState({ imageName: event.target.files[0].name });\r\n      this.convertImage(event.target.files[0]);\r\n      NotificationManager.success(\r\n        ` ${parseFloat(event.target.files[0].size / 1024 / 1024).toFixed(\r\n          2\r\n        )} MB `,\r\n        \"Converting Your Image\",\r\n        2000\r\n      );\r\n      document.getElementById(\"submitButton\").disabled = true; //disable submit button , wait for click upload\r\n      document.getElementById(\"uploadButton\").classList.add(\"green\");\r\n    }\r\n  };\r\n  fileUploadHandler = (event) => {\r\n    var randomImagePrefix = Math.floor(Math.random() * Math.floor(1000)); //to fix same image name\r\n\r\n    event.preventDefault();\r\n    var filename = this.state.imageName; //get file name\r\n    var storageRef = firebaseConnect\r\n      .storage()\r\n      .ref(`/images/` + randomImagePrefix + filename); //upload to image folder\r\n    var uploadTask = storageRef.put(this.state.selectedFile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        //run during upload proccess\r\n        this.setState({\r\n          uploadPercent:\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          // arrow function to use this.setState\r\n          this.setState({ imageLink: downloadURL });\r\n          document.getElementById(\"submitButton\").disabled = false;\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValue) => {\r\n    //get time created of item\r\n    var date = new Date();\r\n    formValue.createdTime = date.getTime();\r\n    formValue.images = this.state.imageLink;\r\n    formValue.price = parseFloat(formValue.price);\r\n    this.props.onSubmit(formValue);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui  container segment\">\r\n        <form\r\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n          className=\"ui form error\"\r\n        >\r\n          <Field name=\"name\" component={this.renderInput} label=\"Name\" />\r\n          <Field\r\n            name=\"price\"\r\n            component={this.renderInput}\r\n            label=\"Price\"\r\n            type=\"number\"\r\n          />\r\n\r\n          {/* Upload item pictures */}\r\n          <Field\r\n            name=\"images\"\r\n            component={this.renderImageInput}\r\n            label=\"Images\"\r\n            uploadPercent={this.state.uploadPercent}\r\n          />\r\n\r\n          <button id=\"submitButton\" className=\"ui green approve right button\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValue) => {\r\n  const error = {};\r\n  if (!formValue.name) error.name = \"Requite Value!\";\r\n  if (!formValue.price) error.price = \"Requite Value!\";\r\n\r\n  return error;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"ItemForm\",\r\n  validate,\r\n})(ItemForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\r\nimport { itemCreate } from \"../actions\";\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nclass ItemNew extends Component {\r\n  onSubmit = formValue => {\r\n    this.props.itemCreate(formValue);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isSignedIn && !this.props.isAnonymous)\r\n      return <ItemForm onSubmit={this.onSubmit}></ItemForm>;\r\n    else if (this.props.isAnonymous)\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content={`You Are Shopping As Guest User!\r\n        Please Login To Have Better Service.`}\r\n        ></LoginRequiteBanner>\r\n      );\r\n    else {\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content=\"To Start Selling\"\r\n        ></LoginRequiteBanner>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { itemCreate })(ItemNew);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nimport { itemFetch, itemEdit, itemImageDelete } from \"../actions\";\r\nclass ItemEdit extends Component {\r\n  componentDidMount() {\r\n    this.props.itemFetch(this.props.match.params.id);\r\n\r\n    //fix createdTime of item\r\n    // Object.values(this.props.items).map(item => {\r\n    //   if (!item.createdTime) {\r\n    //     var date = new Date();\r\n    //     var TimeInMiliSecond = date.getTime();\r\n    //     var newItem = { ...item, createdTime: TimeInMiliSecond };\r\n    //     this.props.itemEdit(newItem.id, newItem);\r\n    //     console.log(\"edited\");\r\n    //   }\r\n    // });\r\n\r\n    // add createdTime to Database\r\n    // Object.values(this.props.items).map(item => {\r\n    //   var date = new Date();\r\n    //   var TimeInMiliSecond = date.getTime();\r\n    //   var newItem = { ...item, createdTime: TimeInMiliSecond };\r\n    //   this.props.itemEdit(newItem.id, newItem);\r\n    //   console.log(\"edited\");\r\n    // });\r\n  }\r\n\r\n  id = this.props.match.params.id;\r\n\r\n  onSubmit = (formValues) => {\r\n    if (formValues.images !== this.props.item.images)\r\n      this.props.itemImageDelete(this.props.item.images);\r\n    this.props.itemEdit(this.id, formValues);\r\n  };\r\n  render() {\r\n    if (this.props.item)\r\n      return (\r\n        <ItemForm\r\n          onSubmit={this.onSubmit}\r\n          initialValues={_.pick(this.props.item, \"name\", \"price\", \"images\")}\r\n        ></ItemForm>\r\n      );\r\n    else return \"loading\";\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    item: state.items[ownProps.match.params.id],\r\n    items: state.items,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  itemFetch,\r\n  itemEdit,\r\n  itemImageDelete,\r\n})(ItemEdit);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport history from \"../history\";\r\nconst Modal = props => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      onClick={() => history.push(\"/\")}\r\n      className=\"ui dimmer modals visible active\"\r\n    >\r\n      <div\r\n        onClick={e => e.stopPropagation()}\r\n        className=\"ui standard modal visible active\"\r\n      >\r\n        <div className=\"header\">{props.header}</div>\r\n        <div className=\"content\"> {props.content}</div>\r\n        <div className=\"actions\">{props.actions}</div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { itemFetch, itemDelete } from \"../actions\";\r\nclass ItemDelete extends Component {\r\n  componentDidMount() {\r\n    this.props.itemFetch(this.props.match.params.id);\r\n  }\r\n  actions = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/shoppingcart\" className=\"ui button\">\r\n          Cancel\r\n        </Link>\r\n        <button\r\n          className=\"ui button primary\"\r\n          onClick={() => this.props.itemDelete(this.props.match.params.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  render() {\r\n    //console.log(this.props.item);\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={this.actions()}\r\n          header=\"Delete Item\"\r\n          content={`Do you want to delete   ${\r\n            this.props.item ? this.props.item.name : \"\"\r\n          }?`}\r\n        ></Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    item: state.items[ownProps.match.params.id]\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { itemFetch, itemDelete })(ItemDelete);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ItemView extends Component {\r\n  render() {\r\n    return <div>view</div>;\r\n  }\r\n}\r\n\r\nexport default ItemView;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport { cartFetch } from \"../actions/cartActions\";\r\nimport { signIn, signOut } from \"../actions/\";\r\nclass Header extends React.Component {\r\n  componentDidMount = async () => {\r\n    firebaseConnect.analytics();\r\n    await firebaseConnect.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.props.signIn(user.uid, user.isAnonymous);\r\n        this.props.cartFetch();\r\n      }\r\n    });\r\n  };\r\n  renderCartBadge = () => {\r\n    let number = \"0\";\r\n\r\n    if (this.props.cart) number = Object.values(this.props.cart).length;\r\n    return (\r\n      <div>\r\n        Cart <i className=\" icon shopping cart\" />\r\n        <span className=\"badge\">{` ( ${number})`}</span>\r\n      </div>\r\n    );\r\n  };\r\n  renderAuthButton = () => {\r\n    if (this.props.isSignedIn && !this.props.isAnonymous)\r\n      return (\r\n        <Link to=\"/shoppingcart\" onClick={this.props.signOut} className=\"item \">\r\n          Logout\r\n        </Link>\r\n      );\r\n    else\r\n      return (\r\n        <Link to=\"/shoppingcart/login/\" className=\"item\">\r\n          Login\r\n        </Link>\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"myNavBar\">\r\n        <div className=\"ui teal four item inverted menu\">\r\n          <Link to=\"/shoppingcart/\" className=\" item\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/shoppingcart/items/new\" className=\"item\">\r\n            Create Item\r\n          </Link>\r\n          <Link id=\"cart\" to=\"/shoppingcart/cart/view\" className=\"item\">\r\n            {this.renderCartBadge()}\r\n          </Link>\r\n          {this.renderAuthButton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { cartFetch, signIn, signOut })(Header);\r\n","import React, { Component } from \"react\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n// import firebaseui from \"firebaseui\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/auth.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport history from \"../history\";\r\n// import GoogleAuth from \"./GoogleAuth\";\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: \"\",\r\n      showVerifyPassword: false,\r\n    };\r\n  }\r\n\r\n  renderInput = ({ input, meta, label, type }) => {\r\n    const confirmError = meta.error && meta.touched;\r\n    const errorClassName = `field textbox ${confirmError ? `error` : ``}`;\r\n    return (\r\n      <div className={errorClassName}>\r\n        <label>\r\n          {label}\r\n          {`${confirmError ? meta.error : \"\"}`}\r\n        </label>\r\n        <input {...input} type={type} autoComplete={input.name} />\r\n      </div>\r\n    );\r\n  };\r\n  onSubmit = (formValue) => {\r\n    //--------Log In--------\r\n    if (!this.state.showVerifyPassword) {\r\n      //Login\r\n      firebaseConnect\r\n        .auth()\r\n        .signInWithEmailAndPassword(formValue.email, formValue.password)\r\n        .then((result) => {\r\n          this.setState({ error: \"Login Success\" });\r\n          history.push(\"/shoppingcart\");\r\n        })\r\n        .catch((error) => {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          this.setState({ error: errorCode });\r\n        });\r\n    }\r\n    //--------Sign Up--------\r\n    else {\r\n      if (this.props.isSignedIn && this.props.isAnonymous) {\r\n        //merge anonymous user and new user\r\n        var credential = firebaseConnect.auth.EmailAuthProvider.credential(\r\n          formValue.email,\r\n          formValue.password\r\n        );\r\n        // console.log(credential);\r\n        firebaseConnect\r\n          .auth()\r\n          .currentUser.linkWithCredential(credential)\r\n          .then(\r\n            function (usercred) {\r\n              NotificationManager.success(\r\n                `Anonymous account successfully upgraded `,\r\n                \"Successful!\",\r\n                2000\r\n              );\r\n              history.push(\"/shoppingcart\");\r\n              // console.log(\"Anonymous account successfully upgraded\");\r\n            },\r\n            function (error) {\r\n              NotificationManager.error(error.message, \"Error!\", 2000);\r\n              // console.log(\"Error upgrading anonymous account\", );\r\n            }\r\n          );\r\n      } else {\r\n        //Create User\r\n        firebaseConnect\r\n          .auth()\r\n          .createUserWithEmailAndPassword(formValue.email, formValue.password)\r\n          .then((result) => {\r\n            history.push(`/shoppingcart`);\r\n          })\r\n          .catch((error) => {\r\n            //Handle Erros here\r\n            var errorCode = error.code;\r\n            this.setState({ error: errorCode });\r\n          });\r\n      }\r\n      //notificateModal\r\n    }\r\n  };\r\n  renderErrorFromServer = () => {\r\n    // console.log(this.state.error);\r\n    switch (this.state.error) {\r\n      case \"auth/user-not-found\":\r\n      case \"auth/wrong-password\":\r\n        return <div>Wrong User or Password</div>;\r\n      default:\r\n        return <div>{this.state.error}</div>;\r\n    }\r\n  };\r\n  googleLogin = () => {\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    firebaseConnect\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(function (result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        // var token = result.credential.accessToken;\r\n        // // The signed-in user info.\r\n        // var user = result.user;\r\n        // ...\r\n        if (result.user) history.push(\"/shoppingcart\");\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        // var errorCode = error.code;\r\n        // var errorMessage = error.message;\r\n        // // The email of the user's account used.\r\n        // var email = error.email;\r\n        // // The firebase.auth.AuthCredential type that was used.\r\n        // var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  renderVerifyPassword = () => {\r\n    if (this.state.showVerifyPassword) {\r\n      return (\r\n        <Field\r\n          type=\"password\"\r\n          name=\"verifyPassword\"\r\n          label=\"Verify Password\"\r\n          component={this.renderInput}\r\n        ></Field>\r\n      );\r\n    }\r\n  };\r\n  renderForgetPassword = () => {\r\n    if (!this.state.showVerifyPassword) {\r\n      return (\r\n        <Link\r\n          to=\"/shoppingcart/forgotpassword\"\r\n          className=\"my_forgot_password_text\"\r\n        >\r\n          Forgot Your Password\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n  SignInSignUpSwitch = (value) => {\r\n    this.setState({ showVerifyPassword: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui  container \">\r\n        <div className=\"login-container\">\r\n          <div className=\"login-box\">\r\n            <div className=\"ui equal width center aligned padded grid\">\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\" green column\"\r\n                  onClick={() => this.SignInSignUpSwitch(false)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Log in\r\n                </div>\r\n                <div\r\n                  className=\"blue column\"\r\n                  onClick={() => this.SignInSignUpSwitch(true)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Sign Up\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <form\r\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n              className=\"ui form error\"\r\n            >\r\n              <Field\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                component={this.renderInput}\r\n              ></Field>\r\n              <Field\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                component={this.renderInput}\r\n              ></Field>\r\n              {this.renderForgetPassword()}\r\n              {this.renderVerifyPassword()}\r\n              {this.renderErrorFromServer()}\r\n              <button\r\n                type=\"submit\"\r\n                className={`ui approve  button  my-login-button ${\r\n                  this.state.showVerifyPassword ? `blue` : `green`\r\n                }`}\r\n              >\r\n                {this.state.showVerifyPassword ? `Sign Up` : `Log In`}\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <button\r\n            onClick={this.googleLogin}\r\n            className=\"ui red google button my-google-login\"\r\n          >\r\n            <i className=\"google icon\"></i>Google Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst validate = (formValue) => {\r\n  const error = {};\r\n  const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  if (!formValue.email) error.email = \" Requite Value !\";\r\n  else if (!formValue.email.match(mailformat)) error.email = \" Wrong Format !\";\r\n  if (!formValue.password) error.password = \" Requite Value !\";\r\n\r\n  if (formValue.verifyPassword !== formValue.password)\r\n    error.verifyPassword = \" : Wrong Verify Password\";\r\n  if (!formValue.verifyPassword) error.verifyPassword = \" Requite Value !\";\r\n\r\n  return error;\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nconst componentWrapup = connect(mapStateToProps, {\r\n  signIn,\r\n  signOut,\r\n})(Auth);\r\n\r\nexport default reduxForm({\r\n  form: \"userForm\",\r\n  validate,\r\n})(componentWrapup);\r\n","/* eslint-disable react/react-in-jsx-scope */\r\nimport { PayPalButton } from \"react-paypal-button\";\r\nimport React from \"react\";\r\nexport default function MyPaypalButton(props) {\r\n  const paypalOptions = {\r\n    clientId: process.env.REACT_APP_API_PAYPALKEY,\r\n    intent: \"capture\"\r\n  };\r\n\r\n  const buttonStyles = {\r\n    layout: \"vertical\",\r\n    shape: \"rect\"\r\n  };\r\n  // console.log(props.price);\r\n  return (\r\n    <PayPalButton\r\n      paypalOptions={paypalOptions}\r\n      buttonStyles={buttonStyles}\r\n      amount={props.price}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";//import { Link } from \"react-router-dom\";\r\nimport { cartRemove, cartFetch } from \"../actions/cartActions\";\r\nimport MyPaypalButton from \"./MyPaypalButton\";\r\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\r\nimport \"../css/CartView.css\";\r\nimport { shortString } from \"./Utility\";\r\nexport class CartView extends Component {\r\n  state = {\r\n    total: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.cartFetch();\r\n  }\r\n  renderList = (items) => {\r\n    return items.map((item) => {\r\n      return (\r\n        <div key={item.id} className=\"three column row itemContainerCart\">\r\n          <div class=\"four wide column \">\r\n            <img\r\n              className=\"ui tiny image centered\"\r\n              src={\r\n                !item.images\r\n                  ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\r\n                  : item.images\r\n              }\r\n              alt={item.name}\r\n            ></img>\r\n          </div>\r\n          <div class=\"eight wide column \">\r\n            <span className=\"myItemNameCart \">\r\n              {shortString(item.name, 55)}\r\n            </span>\r\n          </div>\r\n          <div class=\"four wide column\">\r\n            <div className=\"myCartViewPrice \">/${item.price}</div>\r\n            <button\r\n              onClick={() => this.props.cartRemove(item.id)}\r\n              className=\"ui  mini  button myRemoveButton  \"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  renderTotal = () => {\r\n    var totalprice = 0;\r\n    if (this.props.cart !== null) {\r\n      Object.values(this.props.cart).map((item) => {\r\n        return (totalprice += parseInt(item.price));\r\n      });\r\n    }\r\n\r\n    return <span className=\"myTotalAmount\"> ${totalprice}</span>;\r\n  };\r\n  countTotal = () => {\r\n    let totalprice = 0;\r\n    Object.values(this.props.cart).map((item) => {\r\n      return (totalprice += parseInt(item.price));\r\n    });\r\n    return totalprice;\r\n  };\r\n  renderWarningPanelForlAnonymoust = () => {\r\n    if (this.props.isAnonymous)\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content={`You Are Shopping As Guest User!\r\n          Please Login To Have Better Service.`}\r\n        ></LoginRequiteBanner>\r\n      );\r\n  };\r\n  render() {\r\n    if (this.props.isSignedIn) {\r\n      if (this.props.cart !== null) {\r\n        return (\r\n          <div\r\n            className=\"ui container segment\"\r\n            style={{ justifyContent: \"center\" }}\r\n          >\r\n            {this.renderWarningPanelForlAnonymoust()}\r\n            <div className=\"ui grid\">\r\n              {this.renderList(Object.values(this.props.cart))}\r\n            </div>\r\n\r\n            <div className=\"ui container \" style={{ width: \"500px\" }}>\r\n              {\" \"}\r\n              <h3>\r\n                Subtotal ({Object.keys(this.props.cart).length} item):\r\n                {this.renderTotal()}\r\n              </h3>\r\n              {this.countTotal() !== 0 ? (\r\n                <MyPaypalButton\r\n                  description=\"item cui bap\"\r\n                  price={this.countTotal()}\r\n                ></MyPaypalButton>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      } else return <div>Your Cart is empty !</div>;\r\n    } else {\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content=\"To Start Shopping\"\r\n        ></LoginRequiteBanner>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { cartRemove, cartFetch })(CartView);\r\n","import React, { Component } from \"react\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\n\r\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\r\nexport class ForGotPassword extends Component {\r\n  componentWillMount = () => {};\r\n  content = () => {\r\n    return (\r\n      <div>\r\n        <h2>\r\n          Enter the email address for your account we'll email you a link to\r\n          reset your password.\r\n        </h2>\r\n        <p></p>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Email address: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              autoComplete=\"off\"\r\n              style={{ width: \"300px\" }}\r\n            ></input>\r\n            <button\r\n              onClick={this.handleSubmit}\r\n              className=\"ui interted teal button \"\r\n              style={{ marginLeft: \"5px\" }}\r\n            >\r\n              Sent Reset Password Email\r\n            </button>\r\n            <h2 id=\"output\"> </h2>\r\n          </div>\r\n        </form>\r\n        <p></p>\r\n      </div>\r\n    );\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var auth = firebaseConnect.auth();\r\n    var email = document.getElementById(\"email\").value;\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        //email sent\r\n        console.log(\"email sent\");\r\n        document.getElementById(\"output\").innerHTML = \"Email has been sent!\";\r\n      })\r\n      .catch((error) => {\r\n        //an error happened\r\n        // console.log(error);\r\n        document.getElementById(\"output\").innerHTML = error;\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <LoginRequiteBanner\r\n        banner=\"Forgot your password ? \"\r\n        content={this.content()}\r\n      ></LoginRequiteBanner>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForGotPassword;\r\n","import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport history from \"../history\";\r\nimport ItemList from \"./ItemList\";\r\nimport ItemNew from \"./ItemNew\";\r\nimport ItemEdit from \"./ItemEdit\";\r\nimport ItemDelete from \"./ItemDelete\";\r\nimport ItemView from \"./ItemView\";\r\nimport Header from \"./Header\";\r\nimport Auth from \"./Auth\";\r\nimport CartView from \"./CartView\";\r\nimport ForGotPassword from \"./ForGotPassword\";\r\n\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui  container fluid\">\r\n        <NotificationContainer />\r\n        <Router history={history}>\r\n          <div>\r\n            <Header />\r\n            <Switch>\r\n              <Route path=\"/shoppingcart/\" exact component={ItemList}></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/new\"\r\n                exact\r\n                component={ItemNew}\r\n              ></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/edit/:id\"\r\n                exact\r\n                component={ItemEdit}\r\n              ></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/delete/:id\"\r\n                exact\r\n                component={ItemDelete}\r\n              ></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/view/:id\"\r\n                exact\r\n                component={ItemView}\r\n              ></Route>\r\n\r\n              <Route\r\n                path=\"/shoppingcart/cart/view\"\r\n                exact\r\n                component={CartView}\r\n              ></Route>\r\n              <Route path=\"/shoppingcart/login\" exact component={Auth}></Route>\r\n              <Route\r\n                path=\"/shoppingcart/forgotpassword\"\r\n                exact\r\n                component={ForGotPassword}\r\n              ></Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null,\r\n  isAnonymous: false\r\n};\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        isAnonymous: action.payload.isAnonymous,\r\n        userId: action.payload.userId\r\n      };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, isAnonymous: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD,\r\n  CART_FETCH,\r\n  CART_REMOVE,\r\n  CART_CLEAN\r\n} from \"../actions/cartActions/type\";\r\nimport _ from \"lodash\";\r\nconst initialState = {};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CART_FETCH:\r\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    case CART_REMOVE:\r\n      return _.omit(state, action.payload);\r\n    case CART_CLEAN:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  items: itemReducer,\r\n  cart: cartReducer\r\n});\r\n","import {\r\n  ITEM_CREATE,\r\n  ITEM_EDIT,\r\n  ITEMS_FETCH,\r\n  ITEM_FETCH,\r\n  ITEM_DELETE,\r\n  ITEM_SORTED\r\n} from \"../actions/types\";\r\nimport _ from \"lodash\";\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ITEM_CREATE:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case ITEM_EDIT:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case ITEM_FETCH:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case ITEMS_FETCH:\r\n      // console.log(\"got items\");\r\n      return { ..._.mapKeys(action.payload, \"id\") };\r\n    case ITEM_DELETE:\r\n      return _.omit(state, action.payload);\r\n    case ITEM_SORTED:\r\n      // console.table(action.payload);\r\n      return _.mapKeys(action.payload, \"id\");\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}