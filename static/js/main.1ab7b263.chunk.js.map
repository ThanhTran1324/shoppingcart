{"version":3,"sources":["images/thanh_logo.jpg","history.js","apis/firebaseShoppingCart.js","actions/cartActions/index.js","actions/cartActions/type.js","actions/index.js","actions/types.js","components/SortAndFilter.js","actions/filterActions/index.js","components/Loading.js","components/Utility.js","components/ItemList.js","components/RenderButtonLoginAsGuestUser.js","components/LoginRequiteBanner.js","components/ItemForm.js","components/ItemNew.js","components/ItemEdit.js","components/Modal.js","components/ItemDelete.js","components/ItemView.js","components/Header.js","components/Auth.js","components/MyPaypalButton.js","components/CartView.js","components/ForGotPassword.js","components/App.js","reducers/cartReducer.js","reducers/authReducer.js","reducers/index.js","reducers/itemReducer.js","reducers/filterReducer.js","index.js"],"names":["module","exports","createBrowserHistory","firebaseConnect","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cartAdd","item","dispatch","getState","a","userId","auth","NotificationManager","success","database","ref","id","set","type","payload","cartFetch","response","once","then","dataSnapshot","val","items","signIn","isAnonymous","signInAsAnonymous","isSignedIn","errorMessage","signInAnonymously","catch","error","message","signOut","console","log","history","push","itemFetch","orderByChild","equalTo","snapshot","itemImageDelete","imageUrl","storage","refFromURL","delete","itemSorted","name","value","sortedItems","originalItems","_","Object","values","o","reverse","sort","b","price","createdTime","SortAndFilter","renderSelecter","input","label","option","className","onChange","handleChange","defaultValue","map","e","index","key","target","props","handleOnSearch","formValues","itemSearch","search","renderSearch","onSubmit","handleSubmit","class","placeholder","style","marginTop","marginBottom","backgroundColor","borderRadius","Field","component","this","initialValues","Component","wrapper","connect","state","searchKey","undefined","isSearching","reduxForm","form","Loading","shortString","str","num","length","slice","ItemList","renderAdmin","currentUserId","to","addToCartHandler","renderList","src","images","alt","onClick","myFilter","filter","toLowerCase","includes","itemsFetch","keys","searchform","SortAndFilterForm","RenderButtonLoginAsGuestUser","fontSize","color","LoginRequiteBanner","banner","content","React","ItemForm","selectedFile","imageLink","uploadPercent","imageName","componentDidMount","setState","renderInput","meta","confirmError","touched","errorClassName","renderPreImage","renderImageInput","fileSelectedHandler","fileUploadHandler","tabIndex","parseFloat","toFixed","convertImage","reader","FileReader","readAsDataURL","size","onload","event","img","Image","result","el","elem","document","createElement","scaleFactor","width","height","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","binary","atob","split","array","i","charCodeAt","Blob","Uint8Array","files","getElementById","disabled","classList","add","randomImagePrefix","Math","floor","random","preventDefault","filename","uploadTask","put","on","bytesTransferred","totalBytes","getDownloadURL","downloadURL","formValue","date","Date","getTime","validate","ItemNew","itemCreate","newItem","uuidv4","ItemEdit","match","params","itemEdit","pick","ownProps","update","Modal","ReactDOM","createPortal","stopPropagation","header","actions","querySelector","ItemDelete","Fragment","itemDelete","remove","ItemView","renderItemInfo","margin","Header","analytics","onAuthStateChanged","user","uid","renderCartBadge","number","cart","renderAuthButton","thanh_logo","Auth","autoComplete","showVerifyPassword","credential","EmailAuthProvider","email","password","currentUser","linkWithCredential","usercred","createUserWithEmailAndPassword","errorCode","code","signInWithEmailAndPassword","renderErrorFromServer","googleLogin","provider","GoogleAuthProvider","signInWithPopup","renderVerifyPassword","renderForgetPassword","SignInSignUpSwitch","cursor","componentWrapup","verifyPassword","MyPaypalButton","paypalOptions","clientId","intent","buttonStyles","layout","shape","amount","CartView","total","cartRemove","renderTotal","totalprice","parseInt","countTotal","renderWarningPanelForlAnonymoust","renderTotalAndPaypal","description","justifyContent","child","ForGotPassword","componentWillMount","marginLeft","sendPasswordResetEmail","innerHTML","App","path","exact","initialState","INTIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.1ab7b263.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thanh_logo.f9b63344.jpg\";","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/database\";\r\nimport \"firebase/analytics\";\r\n\r\nvar config = {\r\n  apiKey: process.env.REACT_APP_API_1,\r\n  authDomain: process.env.REACT_APP_API_2,\r\n  databaseURL: process.env.REACT_APP_API_3,\r\n  projectId: process.env.REACT_APP_API_4,\r\n  storageBucket: process.env.REACT_APP_API_5,\r\n  messagingSenderId: process.env.REACT_APP_API_6,\r\n  appId: process.env.REACT_APP_API_7,\r\n  measurementId: process.env.REACT_APP_API_8,\r\n};\r\n// Initialize Firebase\r\n\r\nexport const firebaseConnect = firebase.initializeApp(config);\r\n","import { CART_ADD, CART_FETCH, CART_REMOVE, CART_CLEAN } from \"./type\";\r\n\r\nimport { firebaseConnect } from \"../../apis/firebaseShoppingCart\";\r\n//import history from \"../../history\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nexport const cartAdd = (item) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  if (userId) {\r\n    //for Logined User\r\n    NotificationManager.success(\r\n      \"You have added a new Item!\",\r\n      \"Successful!\",\r\n      2000\r\n    );\r\n    await firebaseConnect\r\n      .database()\r\n      .ref(`/cart/Cart-${userId}/${item.id}`)\r\n      .set(item);\r\n\r\n    dispatch({\r\n      type: CART_ADD,\r\n      payload: item,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cartFetch = () => async (dispatch, getState) => {\r\n  const userId = await getState().auth.userId;\r\n  let response = {};\r\n  if (userId !== null) {\r\n    response = await firebaseConnect\r\n      .database()\r\n      .ref(`/cart/Cart-${userId}`)\r\n      .once(\"value\")\r\n      .then(function (dataSnapshot) {\r\n        return dataSnapshot.val();\r\n      });\r\n    dispatch({\r\n      type: CART_FETCH,\r\n      payload: response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cartRemove = (id) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  if (userId) {\r\n    firebaseConnect\r\n      .database()\r\n      .ref(`/cart/Cart-${userId}/`)\r\n      .child(id) //id of child\r\n      .remove();\r\n\r\n    dispatch({\r\n      type: CART_REMOVE,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\nexport const cartClean = () => {\r\n  return {\r\n    type: CART_CLEAN,\r\n  };\r\n};\r\n","export const CART_ADD = \"CART_ADD\";\r\nexport const CART_FETCH = \"CART_FETCH\";\r\nexport const CART_REMOVE = \"CART_REMOVE\";\r\nexport const CART_CLEAN = \"CART_CLEAN\";\r\n","import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  ITEM_CREATE,\r\n  ITEMS_FETCH,\r\n  ITEM_DELETE,\r\n  ITEM_FETCH,\r\n  ITEM_EDIT,\r\n  ITEM_SORTED,\r\n} from \"./types\";\r\nimport { cartClean } from \"./cartActions/\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport history from \"../history\";\r\nimport firebase from \"firebase\";\r\n// import { cartAdd } from \"./cartActions\";\r\n// import { CART_CLEAN } from \"./cartActions/type\";\r\nimport * as _ from \"lodash\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n// var data = firebaseConnect.database().ref(\"/\");\r\n\r\nlet items = firebaseConnect.database().ref(\"items\");\r\n\r\nexport const signIn = (userId, isAnonymous) => async (dispatch) => {\r\n  if (isAnonymous)\r\n    NotificationManager.success(\r\n      \"Your Shopping Cart Items Will Be Added When You Create a New Account.\",\r\n      \"Anonymous Login Success\",\r\n      5000\r\n    );\r\n  else NotificationManager.success(\"Login Success\", \"Success\", 2000);\r\n  await dispatch({\r\n    type: SIGN_IN,\r\n    payload: { userId, isAnonymous },\r\n  });\r\n};\r\n\r\nexport const signInAsAnonymous = () => async (dispatch, getState) => {\r\n  if (!getState().auth.isSignedIn) {\r\n    var errorMessage = null;\r\n    //if user is not login so create new anonymous user\r\n    await firebaseConnect\r\n      .auth()\r\n      .signInAnonymously()\r\n      .catch((error) => {\r\n        errorMessage = error.message;\r\n        NotificationManager.error(errorMessage, \"Error\", 2000);\r\n      });\r\n  }\r\n};\r\n\r\nexport const signOut = () => (dispatch) => {\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n      NotificationManager.success(\"\", \"Logout Successful\", 2000);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      NotificationManager.error(error.errorMessage, \"Error\", 2000);\r\n    });\r\n\r\n  dispatch({ type: SIGN_OUT });\r\n  dispatch(cartClean());\r\n  history.push(\"/shoppingcart\");\r\n};\r\n\r\nexport const itemCreate = (formValues) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const newItem = {\r\n    ...formValues,\r\n    userId: userId,\r\n    id: uuidv4(),\r\n  };\r\n  firebaseConnect.database().ref(`items/${newItem.id}`).set(newItem);\r\n\r\n  const response = await firebaseConnect\r\n    .database()\r\n    .ref(`items/${newItem.id}`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      return snapshot.val();\r\n    });\r\n  if (response) NotificationManager.success(\"\", \"New Item Created\", 2000);\r\n  dispatch({\r\n    type: ITEM_CREATE,\r\n    payload: response,\r\n  });\r\n  history.push(\"/shoppingcart\");\r\n};\r\n\r\nexport const itemsFetch = () => async (dispatch) => {\r\n  let response = await items.once(\"value\").then(function (snapshot) {\r\n    return snapshot.val();\r\n  });\r\n  dispatch({\r\n    type: ITEMS_FETCH,\r\n    payload: response,\r\n  });\r\n  dispatch(itemSorted(\"time\", \"1\")); //sort item as new first after fetch\r\n};\r\n//items.set(_.keyBy(response, \"id\")); convert array to Object to fix database\r\n\r\nexport const itemFetch = (id) => async (dispatch) => {\r\n  // let response = await items.once(\"value\").then(snapshot => {\r\n  //   return snapshot.val()[id]; //access to Object and get value with key = id\r\n  // });\r\n  let response = await items\r\n    .orderByChild(\"id\")\r\n    .equalTo(id)\r\n    .once(\"value\")\r\n    .then(function (snapshot) {\r\n      return snapshot.val();\r\n    });\r\n  dispatch({\r\n    type: ITEM_FETCH,\r\n    payload: response[id],\r\n  });\r\n};\r\nexport const itemImageDelete = (imageUrl) => () => {\r\n  firebaseConnect\r\n    .storage()\r\n    .refFromURL(imageUrl)\r\n    .delete()\r\n    .then(function () {\r\n      console.log(\"image deleted\");\r\n    })\r\n    .catch(function () {\r\n      console.log(\"unable to delete image\");\r\n    });\r\n};\r\nexport const itemDelete = (id) => async (dispatch, getState) => {\r\n  const deleteItem = await firebaseConnect.database().ref(`items/${id}`);\r\n  deleteItem\r\n    .remove()\r\n    .then(() => {\r\n      if (getState().items[id].images)\r\n        itemImageDelete(getState().items[id].images);\r\n      NotificationManager.success(\"\", \"Item Deleted\", 2000);\r\n      dispatch({\r\n        type: ITEM_DELETE,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      NotificationManager.error(error.errorMessage, \"Error\", 2000); // need fix delete error\r\n    });\r\n\r\n  history.push(\"/shoppingcart\");\r\n};\r\nexport const itemEdit = (id, formValues) => async (dispatch) => {\r\n  let editItem = firebaseConnect.database().ref(`items/${id}`);\r\n  editItem.update(formValues);\r\n  const response = await firebaseConnect\r\n    .database()\r\n    .ref(`items/${id}`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      return snapshot.val();\r\n    });\r\n  dispatch({\r\n    type: ITEM_EDIT,\r\n    payload: response,\r\n  });\r\n  history.push(\"/shoppingcart\");\r\n};\r\n\r\nexport const itemSorted = (name, value) => (dispatch, getState) => {\r\n  //sortedItems is an array sent to reducer, reducer will convert to Object\r\n\r\n  let sortedItems = [];\r\n  let originalItems = getState().items;\r\n  switch (name) {\r\n    //sort by name\r\n    case \"name\":\r\n      if (value === \"0\") {\r\n        //sort from a to z\r\n        sortedItems = _.sortBy(Object.values(originalItems), [\r\n          function (o) {\r\n            return o.name;\r\n          },\r\n        ]);\r\n      } else {\r\n        //sort from z to a\r\n        sortedItems = _.sortBy(Object.values(originalItems), [\r\n          function (o) {\r\n            return o.name;\r\n          },\r\n        ]).reverse();\r\n      }\r\n      break;\r\n\r\n    //end sort by name\r\n    case \"price\":\r\n      if (value === \"0\") {\r\n        //sort from low price to hight price\r\n        sortedItems = Object.values(originalItems).sort(\r\n          (a, b) => a.price - b.price\r\n        );\r\n      } else {\r\n        //sort from high to low price\r\n        sortedItems = Object.values(originalItems)\r\n          .sort((a, b) => a.price - b.price)\r\n          .reverse();\r\n      }\r\n      break;\r\n    case \"time\":\r\n      if (value === \"0\") {\r\n        //sort from old to new\r\n        sortedItems = Object.values(originalItems).sort((a, b) => {\r\n          return a.createdTime - b.createdTime;\r\n        });\r\n      } else {\r\n        //sort from new to old\r\n        sortedItems = Object.values(originalItems)\r\n          .sort((a, b) => {\r\n            return a.createdTime - b.createdTime;\r\n          })\r\n          .reverse();\r\n      }\r\n      break;\r\n    // case \"searchByName\":\r\n    //   sortedItems = Object.values(originalItems).filter(e =>\r\n    //     e.name.match(value)\r\n    //   );\r\n    //   console.log(sortedItems.length === 0);\r\n    //   if (sortedItems.length === 0) {\r\n    //     console.log(\"no item\");\r\n    //     NotificationManager.warning(\"\", \"No Item Was found!\", 3000);\r\n    //     dispatch(itemsFetch());\r\n    //   }\r\n\r\n    //   break;\r\n    default:\r\n  }\r\n  dispatch({\r\n    type: ITEM_SORTED,\r\n    payload: sortedItems,\r\n  });\r\n};\r\n","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const ITEM_CREATE = \"ITEM_CREATE\";\r\nexport const ITEM_EDIT = \"ITEM_EDIT\";\r\nexport const ITEMS_FETCH = \"ITEMS_FETCH\";\r\nexport const ITEM_FETCH = \"ITEM_FETCH\";\r\nexport const ITEM_DELETE = \"ITEM_DELETE\";\r\nexport const ITEM_SORTED = \"ITEM_SORTED\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { itemSorted } from \"../actions/\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { itemSearch } from \"../actions/filterActions\";\r\nexport class SortAndFilter extends Component {\r\n  renderSelecter = ({ name, input, label, option }) => {\r\n    return (\r\n      <div className=\"ui four column form noPadding\">\r\n        {/* Sort Dropdown */}\r\n\r\n        <select {...input} onChange={this.handleChange} className=\"ui dropdown\">\r\n          <option value=\"-1\" defaultValue>\r\n            {label}\r\n          </option>\r\n          {option.map((e, index) => {\r\n            return (\r\n              <option value={index} key={index}>\r\n                {e}\r\n              </option>\r\n            );\r\n            // value = 0 => low to high and old to new\r\n            // value = 1 => high to old and new to old\r\n          })}\r\n        </select>\r\n        {/* End Sort  Dropdown */}\r\n      </div>\r\n    );\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target) {\r\n      this.props.itemSorted(e.target.name, e.target.value);\r\n    }\r\n  };\r\n\r\n  handleOnSearch = (formValues) => {\r\n    this.props.itemSearch(formValues.search);\r\n  };\r\n  renderSearch = ({ input, name }) => {\r\n    return (\r\n      <div className=\"ui  ui four column form noPadding\">\r\n        <form onSubmit={this.props.handleSubmit(this.handleOnSearch)}>\r\n          <div class=\"ui search\">\r\n            <div class=\"ui icon input\">\r\n              <input type=\"text\" placeholder=\"Search...\" {...input}></input>\r\n\r\n              <i class=\"search icon\"></i>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui grid container myFilterContainer\"\r\n        style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n      >\r\n        <div\r\n          className=\"four column row \"\r\n          style={{\r\n            backgroundColor: \"rgba(208, 214, 214, 0.514)\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <Field\r\n            name=\"search\"\r\n            component={this.renderSearch}\r\n            initialValues={{ search: \"hello\" }}\r\n          ></Field>\r\n\r\n          <Field\r\n            name=\"price\"\r\n            label=\"Price\"\r\n            component={this.renderSelecter}\r\n            option={[\"Low To High\", \"High To Low\"]}\r\n          ></Field>\r\n\r\n          <Field\r\n            name=\"time\"\r\n            label=\"Time\"\r\n            component={this.renderSelecter}\r\n            option={[\"Old To New\", \"New To Old\"]}\r\n          ></Field>\r\n\r\n          <Field\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            component={this.renderSelecter}\r\n            option={[\"A-Z\", \"Z-A\"]}\r\n          ></Field>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n  };\r\n};\r\nconst wrapper = connect(mapStateToProps, { itemSorted, itemSearch })(\r\n  SortAndFilter\r\n);\r\nexport default reduxForm({\r\n  form: \"SortAndFilterForm\",\r\n})(wrapper);\r\n","export const itemSearch = (searchKey) => (dispatch) => {\r\n  if (searchKey === undefined)\r\n    dispatch({ type: \"ITEMSEARCH\", payload: { isSearching: false } });\r\n  else\r\n    dispatch({\r\n      type: \"ITEMSEARCH\",\r\n      payload: { searchKey: searchKey, isSearching: true },\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"ui active active dimmer\">\r\n      <div className=\"ui large text loader\">Loading ...</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","export const shortString = function (str, num) {\r\n  if (str.length <= num) return str;\r\n  return str.slice(0, num) + \"...\";\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { itemsFetch, signInAsAnonymous } from \"../actions\";\r\nimport { cartAdd } from \"../actions/cartActions\";\r\nimport SortAndFilter from \"./SortAndFilter\";\r\nimport Loading from \"./Loading\";\r\nimport { shortString } from \"./Utility\";\r\nimport \"../css/ItemList.css\";\r\n\r\nexport class ItemList extends Component {\r\n  componentDidMount() {\r\n    this.props.itemsFetch();\r\n  }\r\n  renderAdmin = (item) => {\r\n    if (item.userId === this.props.currentUserId)\r\n      return (\r\n        <div>\r\n          <hr></hr>\r\n          <div className=\"ui large two buttons\">\r\n            <Link\r\n              to={`/shoppingcart/items/delete/${item.id}`}\r\n              className=\"ui inverted red button \"\r\n              // style={{ whiteSpace: \"nowrap\" }}\r\n            >\r\n              <i className=\"icon trash alternate\" />\r\n              Delete\r\n            </Link>\r\n            <div className=\"or\"></div>\r\n            <Link\r\n              to={`/shoppingcart/items/edit/${item.id}`}\r\n              className=\"ui inverted blue button \"\r\n            >\r\n              <i className=\"edit icon\"></i>Edit\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n  addToCartHandler = (item) => {\r\n    this.props.signInAsAnonymous();\r\n    this.props.cartAdd(item);\r\n  };\r\n  // shortString = (str, num) => {\r\n  //   if (str.length <= num) return str;\r\n  //   return str.slice(0, num) + \"...\";\r\n  // };\r\n\r\n  renderList = (items) => {\r\n    if (items.length === 0) {\r\n      return <h1>Sorry, We don't have the Item you need !!!</h1>;\r\n    } else\r\n      return items.map((item) => {\r\n        return (\r\n          <div className=\"card  \" key={item.id}>\r\n            <div\r\n              // className=\"blurring dimmable image \"\r\n              className=\"myImageContainer\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <Link to={`/shoppingcart/item/view/${item.id}`}>\r\n                <img\r\n                  className=\"imageCartList  myImageCardList\"\r\n                  src={\r\n                    !item.images\r\n                      ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\r\n                      : item.images\r\n                  }\r\n                  alt=\"hinh\"\r\n                ></img>\r\n              </Link>\r\n              <button\r\n                className=\"ui button primary myAddButton\"\r\n                onClick={() => this.addToCartHandler(item)}\r\n              >\r\n                <i className=\"shopping cart icon\"></i>\r\n                Add\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n              {/* <div className=\" ui buttons right floated\"> */}\r\n\r\n              {/* </div> */}\r\n              <div className=\"header myItemName\">\r\n                <Link to={`/shoppingcart/item/view/${item.id}`}>\r\n                  {shortString(item.name, 50)}\r\n                </Link>\r\n              </div>\r\n              <div className=\"meta\">\r\n                <p className=\"myPrice\">${item.price}</p>\r\n              </div>\r\n\r\n              <div className=\"extra content\">{this.renderAdmin(item)}</div>\r\n            </div>\r\n          </div>\r\n\r\n          // <div key={item.id} className=\"item\">\r\n          //   {item.name}/${item.price}\r\n          //   <div className=\" ui buttons right floated\">\r\n          //     {this.renderAdmin(item)}\r\n          //     <button\r\n          //       className=\"ui button primary\"\r\n          //       onClick={() => this.props.cartAdd(item)}\r\n          //     >\r\n          //       <i className=\"shopping cart icon\"></i>\r\n          //       Add to cart\r\n          //     </button>\r\n          //   </div>\r\n          // </div>\r\n        );\r\n      });\r\n  };\r\n  myFilter = (items) => {\r\n    if (this.props.isSearching) {\r\n      return items.filter((item) => {\r\n        return item.name\r\n          .toLowerCase()\r\n          .includes(this.props.searchKey.toLowerCase());\r\n      });\r\n    } else return items;\r\n  };\r\n  render() {\r\n    if (Object.keys(this.props.items).length === 0) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className=\"ui fluid container \">\r\n          <SortAndFilter\r\n            initialValues={{ search: this.props.searchKey }}\r\n          ></SortAndFilter>\r\n          <div className=\"ui special cards centered\">\r\n            {this.renderList(this.myFilter(Object.values(this.props.items)))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n    searchform: state.form.SortAndFilterForm,\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isSearching: state.filter.isSearching,\r\n    searchKey: state.filter.searchKey,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  itemsFetch,\r\n  cartAdd,\r\n  signInAsAnonymous,\r\n})(ItemList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAsAnonymous } from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nexport class RenderButtonLoginAsGuestUser extends Component {\r\n  render() {\r\n    if (!this.props.isSignedIn)\r\n      //not login\r\n      return (\r\n        <button\r\n          onClick={this.props.signInAsAnonymous}\r\n          className=\"ui teal google button my-google-login\"\r\n        >\r\n          <i\r\n            className=\"user secret icon\"\r\n            style={{ fontSize: \"25px\", color: \"red\" }}\r\n          ></i>\r\n          Anonymous Login\r\n        </button>\r\n      );\r\n    else if (this.props.isSignedIn && this.props.isAnonymous) {\r\n      //logined as guest\r\n      return (\r\n        <Link\r\n          to=\"/shoppingcart/login/\"\r\n          className=\"ui blue google button my-google-login\"\r\n        >\r\n          <i className=\"user secret icon\"></i>Upgrade to permanent user\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { signInAsAnonymous })(\r\n  RenderButtonLoginAsGuestUser\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport RenderButtonLoginAsGuestUser from \"./RenderButtonLoginAsGuestUser\";\r\nclass LoginRequiteBanner extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui one column grid\">\r\n          <div className=\"column\">\r\n            <div className=\"ui raised segment\">\r\n              <p className=\"ui red ribbon label\">{this.props.banner}</p>\r\n              <p></p>\r\n              <div>\r\n                Please{\" \"}\r\n                {\r\n                  <Link className=\"ui teal button\" to=\"/shoppingcart/login\">\r\n                    Login\r\n                  </Link>\r\n                }\r\n                {this.props.content}\r\n                <RenderButtonLoginAsGuestUser />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(LoginRequiteBanner);\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n// import axios from \"axios\";\r\nclass ItemForm extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    imageLink: null,\r\n    uploadPercent: 0,\r\n    imageName: null,\r\n  };\r\n  componentDidMount = () => {\r\n    if (this.props.initialValues)\r\n      this.setState({ imageLink: this.props.initialValues.images });\r\n  };\r\n  renderInput = ({ input, meta, label, type }) => {\r\n    const confirmError = meta.error && meta.touched;\r\n    const errorClassName = `field ${confirmError ? `error` : ``}`;\r\n\r\n    return (\r\n      <div className={errorClassName}>\r\n        <label>\r\n          {label} :{`${confirmError ? \"Requited\" : \"\"}`}\r\n        </label>\r\n        <input {...input} type={type} placeholder={label} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderPreImage = () => {\r\n    if (this.props.initialValues) {\r\n      return (\r\n        <div>\r\n          <img\r\n            className=\"ui medium centered rounded image \"\r\n            src={this.props.initialValues.images}\r\n            alt=\"Item\"\r\n          ></img>\r\n          <p> Click Choose File to update new image :</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  renderImageInput = ({ input, meta, label, uploadPercent }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        <label>{label} :</label>\r\n        {this.renderPreImage()}\r\n\r\n        <div>\r\n          <input type=\"file\" onChange={this.fileSelectedHandler}></input>\r\n\r\n          <div\r\n            onClick={this.fileUploadHandler}\r\n            className=\"ui labeled button\"\r\n            tabIndex=\"0\"\r\n          >\r\n            <div id=\"uploadButton\" className=\"ui button  \">\r\n              <i className=\"upload icon \"></i> Upload\r\n            </div>\r\n            <p className=\"ui basic label\">\r\n              {parseFloat(uploadPercent).toFixed(2)}%\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  convertImage = (item) => {\r\n    var resize_width = 600;\r\n    var reader = new FileReader();\r\n\r\n    //image turned to base64-encoded Data URI.\r\n    reader.readAsDataURL(item);\r\n    reader.name = item.name; //get the image's name\r\n    reader.size = item.size; //get the image's size\r\n    reader.onload = (event) => {\r\n      var img = new Image(); //create a image\r\n      img.src = event.target.result; //result is base64-encoded Data URI\r\n      img.name = event.target.name; //set name (optional)\r\n      img.size = event.target.size; //set size (optional)\r\n      img.onload = async (el) => {\r\n        var elem = document.createElement(\"canvas\"); //create a canvas\r\n\r\n        //scale the image to 600 (width) and keep aspect ratio\r\n        var scaleFactor = resize_width / el.target.width;\r\n        elem.width = resize_width;\r\n        elem.height = el.target.height * scaleFactor;\r\n\r\n        //draw in canvas\r\n        var ctx = elem.getContext(\"2d\");\r\n        ctx.drawImage(el.target, 0, 0, elem.width, elem.height);\r\n\r\n        //get the base64-encoded Data URI from the resize image\r\n        var srcEncoded = ctx.canvas.toDataURL(el.target, \"image/jpeg\", 0);\r\n        //convert uri to image\r\n        var binary = atob(srcEncoded.split(\",\")[1]);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n          array.push(binary.charCodeAt(i));\r\n        }\r\n        this.setState({\r\n          selectedFile: new Blob([new Uint8Array(array)], {\r\n            type: \"image/jpeg\",\r\n          }),\r\n        });\r\n      };\r\n    };\r\n  };\r\n\r\n  fileSelectedHandler = (event) => {\r\n    if (event.target.files.length > 0) {\r\n      this.setState({ imageName: event.target.files[0].name });\r\n      this.convertImage(event.target.files[0]);\r\n      NotificationManager.success(\r\n        ` ${parseFloat(event.target.files[0].size / 1024 / 1024).toFixed(\r\n          2\r\n        )} MB `,\r\n        \"Converting Your Image\",\r\n        2000\r\n      );\r\n      document.getElementById(\"submitButton\").disabled = true; //disable submit button , wait for click upload\r\n      document.getElementById(\"uploadButton\").classList.add(\"green\");\r\n    }\r\n  };\r\n  fileUploadHandler = (event) => {\r\n    var randomImagePrefix = Math.floor(Math.random() * Math.floor(1000)); //to fix same image name\r\n\r\n    event.preventDefault();\r\n    var filename = this.state.imageName; //get file name\r\n    var storageRef = firebaseConnect\r\n      .storage()\r\n      .ref(`/images/` + randomImagePrefix + filename); //upload to image folder\r\n    var uploadTask = storageRef.put(this.state.selectedFile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        //run during upload proccess\r\n        this.setState({\r\n          uploadPercent:\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          // arrow function to use this.setState\r\n          this.setState({ imageLink: downloadURL });\r\n          document.getElementById(\"submitButton\").disabled = false;\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValue) => {\r\n    //get time created of item\r\n    var date = new Date();\r\n    formValue.createdTime = date.getTime();\r\n    formValue.images = this.state.imageLink;\r\n    formValue.price = parseFloat(formValue.price);\r\n    this.props.onSubmit(formValue);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui  container segment\">\r\n        <form\r\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n          className=\"ui form error\"\r\n        >\r\n          <Field name=\"name\" component={this.renderInput} label=\"Name\" />\r\n          <Field\r\n            name=\"price\"\r\n            component={this.renderInput}\r\n            label=\"Price\"\r\n            type=\"number\"\r\n          />\r\n\r\n          {/* Upload item pictures */}\r\n          <Field\r\n            name=\"images\"\r\n            component={this.renderImageInput}\r\n            label=\"Images\"\r\n            uploadPercent={this.state.uploadPercent}\r\n          />\r\n\r\n          <button id=\"submitButton\" className=\"ui green approve right button\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValue) => {\r\n  const error = {};\r\n  if (!formValue.name) error.name = \"Requite Value!\";\r\n  if (!formValue.price) error.price = \"Requite Value!\";\r\n\r\n  return error;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"ItemForm\",\r\n  validate,\r\n})(ItemForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\r\nimport { itemCreate } from \"../actions\";\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nclass ItemNew extends Component {\r\n  onSubmit = formValue => {\r\n    this.props.itemCreate(formValue);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isSignedIn && !this.props.isAnonymous)\r\n      return <ItemForm onSubmit={this.onSubmit}></ItemForm>;\r\n    else if (this.props.isAnonymous)\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content={`You Are Shopping As Guest User!\r\n        Please Login To Have Better Service.`}\r\n        ></LoginRequiteBanner>\r\n      );\r\n    else {\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content=\"To Start Selling\"\r\n        ></LoginRequiteBanner>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { itemCreate })(ItemNew);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nimport { itemFetch, itemEdit, itemImageDelete } from \"../actions\";\r\nclass ItemEdit extends Component {\r\n  componentDidMount() {\r\n    this.props.itemFetch(this.props.match.params.id);\r\n\r\n    //fix createdTime of item\r\n    // Object.values(this.props.items).map(item => {\r\n    //   if (!item.createdTime) {\r\n    //     var date = new Date();\r\n    //     var TimeInMiliSecond = date.getTime();\r\n    //     var newItem = { ...item, createdTime: TimeInMiliSecond };\r\n    //     this.props.itemEdit(newItem.id, newItem);\r\n    //     console.log(\"edited\");\r\n    //   }\r\n    // });\r\n\r\n    // add createdTime to Database\r\n    // Object.values(this.props.items).map(item => {\r\n    //   var date = new Date();\r\n    //   var TimeInMiliSecond = date.getTime();\r\n    //   var newItem = { ...item, createdTime: TimeInMiliSecond };\r\n    //   this.props.itemEdit(newItem.id, newItem);\r\n    //   console.log(\"edited\");\r\n    // });\r\n  }\r\n\r\n  id = this.props.match.params.id;\r\n\r\n  onSubmit = (formValues) => {\r\n    if (formValues.images !== this.props.item.images)\r\n      this.props.itemImageDelete(this.props.item.images);\r\n    this.props.itemEdit(this.id, formValues);\r\n  };\r\n  render() {\r\n    if (this.props.item)\r\n      return (\r\n        <ItemForm\r\n          onSubmit={this.onSubmit}\r\n          initialValues={_.pick(this.props.item, \"name\", \"price\", \"images\")}\r\n        ></ItemForm>\r\n      );\r\n    else return \"loading\";\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    item: state.items[ownProps.match.params.id],\r\n    items: state.items,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  itemFetch,\r\n  itemEdit,\r\n  itemImageDelete,\r\n})(ItemEdit);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport history from \"../history\";\r\nconst Modal = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      onClick={() => history.push(\"/shoppingcart\")}\r\n      className=\"ui dimmer modals visible active\"\r\n    >\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        className=\"ui standard modal visible active\"\r\n      >\r\n        <div className=\"header\">{props.header}</div>\r\n        <div className=\"content\"> {props.content}</div>\r\n        <div className=\"actions\">{props.actions}</div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { itemFetch, itemDelete } from \"../actions\";\r\nclass ItemDelete extends Component {\r\n  componentDidMount() {\r\n    this.props.itemFetch(this.props.match.params.id);\r\n  }\r\n  actions = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/shoppingcart\" className=\"ui button\">\r\n          Cancel\r\n        </Link>\r\n        <button\r\n          className=\"ui button primary\"\r\n          onClick={() => this.props.itemDelete(this.props.match.params.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  render() {\r\n    //console.log(this.props.item);\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={this.actions()}\r\n          header=\"Delete Item\"\r\n          content={`Do you want to delete   ${\r\n            this.props.item ? this.props.item.name : \"\"\r\n          }?`}\r\n        ></Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    item: state.items[ownProps.match.params.id]\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { itemFetch, itemDelete })(ItemDelete);\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport { itemFetch, signInAsAnonymous } from \"../actions\";\r\nimport { cartAdd } from \"../actions/cartActions\";\r\nimport Loading from \"./Loading\";\r\nimport \"../css/ItemView.css\";\r\nclass ItemView extends Component {\r\n  componentDidMount() {\r\n    this.props.itemFetch(this.props.match.params.id);\r\n  }\r\n  addToCartHandler = (item) => {\r\n    this.props.signInAsAnonymous();\r\n    this.props.cartAdd(item);\r\n    history.push(\"/shoppingcart\");\r\n  };\r\n  actions = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/shoppingcart\" className=\"ui button\">\r\n          Cancel\r\n        </Link>\r\n        <button\r\n          className=\"ui button primary\"\r\n          onClick={() => this.addToCartHandler(this.props.item)}\r\n        >\r\n          Add To Cart\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  renderItemInfo = (item) => {\r\n    return (\r\n      <div className=\"ui grid\">\r\n        <div class=\"six wide column\">\r\n          <img\r\n            className=\"ui large image\"\r\n            src={item.images}\r\n            alt={item.name + \"photo\"}\r\n          ></img>\r\n        </div>\r\n        <div class=\"ten wide column\">\r\n          <p className=\"myItemViewPrice\">$ {item.price}</p> & FREE Shipping\r\n          <h2 style={{ margin: 0 }}>Product Information</h2>\r\n          <p className=\"myItemInfo\">\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil\r\n            expedita dolores, debitis animi sequi ullam blanditiis. Et tenetur,\r\n            temporibus beatae dolores illo accusantium excepturi recusandae\r\n            rerum laborum necessitatibus deserunt.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    //console.log(this.props.item);\r\n\r\n    if (this.props.item) {\r\n      const item = this.props.item;\r\n\r\n      return (\r\n        <div>\r\n          <Modal\r\n            actions={this.actions()}\r\n            header={item.name}\r\n            content={this.renderItemInfo(item)}\r\n          ></Modal>\r\n        </div>\r\n      );\r\n    } else return <Loading />;\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    item: state.items[ownProps.match.params.id],\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  itemFetch,\r\n  cartAdd,\r\n  signInAsAnonymous,\r\n})(ItemView);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport { cartFetch } from \"../actions/cartActions\";\r\nimport { signIn, signOut } from \"../actions/\";\r\nimport thanh_logo from \"../images/thanh_logo.jpg\";\r\nimport \"../css/Header.css\";\r\nclass Header extends React.Component {\r\n  componentDidMount = async () => {\r\n    firebaseConnect.analytics();\r\n    await firebaseConnect.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.props.signIn(user.uid, user.isAnonymous);\r\n        this.props.cartFetch();\r\n      }\r\n    });\r\n  };\r\n  renderCartBadge = () => {\r\n    let number = \"0\";\r\n\r\n    if (this.props.cart) number = Object.values(this.props.cart).length;\r\n    return (\r\n      <div>\r\n        Cart <i className=\" icon shopping cart\" />\r\n        <span className=\"badge\">{` ( ${number})`}</span>\r\n      </div>\r\n    );\r\n  };\r\n  renderAuthButton = () => {\r\n    if (this.props.isSignedIn && !this.props.isAnonymous)\r\n      return (\r\n        <Link to=\"/shoppingcart\" onClick={this.props.signOut} className=\"item \">\r\n          Logout\r\n        </Link>\r\n      );\r\n    else\r\n      return (\r\n        <Link to=\"/shoppingcart/login/\" className=\"item\">\r\n          Login\r\n        </Link>\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"myNavBar\">\r\n        <div className=\"ui teal four item inverted menu myNavBarLink\">\r\n          <Link to=\"/shoppingcart/\" className=\" item\">\r\n            <img\r\n              src={thanh_logo}\r\n              alt=\"thanh_logo\"\r\n              className=\"  thanhLogo\"\r\n            ></img>\r\n            Home\r\n          </Link>\r\n          <Link to=\"/shoppingcart/items/new\" className=\"item\">\r\n            Create Item\r\n          </Link>\r\n          <Link id=\"cart\" to=\"/shoppingcart/cart/view\" className=\"item\">\r\n            {this.renderCartBadge()}\r\n          </Link>\r\n          {this.renderAuthButton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { cartFetch, signIn, signOut })(Header);\r\n","import React, { Component } from \"react\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n// import firebaseui from \"firebaseui\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/auth.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport history from \"../history\";\r\n// import GoogleAuth from \"./GoogleAuth\";\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: \"\",\r\n      showVerifyPassword: false,\r\n    };\r\n  }\r\n\r\n  renderInput = ({ input, meta, label, type }) => {\r\n    const confirmError = meta.error && meta.touched;\r\n    const errorClassName = `field textbox ${confirmError ? `error` : ``}`;\r\n    return (\r\n      <div className={errorClassName}>\r\n        <label>\r\n          {label}\r\n          {`${confirmError ? meta.error : \"\"}`}\r\n        </label>\r\n        <input {...input} type={type} autoComplete={input.name} />\r\n      </div>\r\n    );\r\n  };\r\n  onSubmit = (formValue) => {\r\n    //--------Log In--------\r\n    if (!this.state.showVerifyPassword) {\r\n      //Login\r\n      firebaseConnect\r\n        .auth()\r\n        .signInWithEmailAndPassword(formValue.email, formValue.password)\r\n        .then((result) => {\r\n          this.setState({ error: \"Login Success\" });\r\n          history.push(\"/shoppingcart\");\r\n        })\r\n        .catch((error) => {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          this.setState({ error: errorCode });\r\n        });\r\n    }\r\n    //--------Sign Up--------\r\n    else {\r\n      if (this.props.isSignedIn && this.props.isAnonymous) {\r\n        //merge anonymous user and new user\r\n        var credential = firebaseConnect.auth.EmailAuthProvider.credential(\r\n          formValue.email,\r\n          formValue.password\r\n        );\r\n        // console.log(credential);\r\n        firebaseConnect\r\n          .auth()\r\n          .currentUser.linkWithCredential(credential)\r\n          .then(\r\n            function (usercred) {\r\n              NotificationManager.success(\r\n                `Anonymous account successfully upgraded `,\r\n                \"Successful!\",\r\n                2000\r\n              );\r\n              history.push(\"/shoppingcart\");\r\n              // console.log(\"Anonymous account successfully upgraded\");\r\n            },\r\n            function (error) {\r\n              NotificationManager.error(error.message, \"Error!\", 2000);\r\n              // console.log(\"Error upgrading anonymous account\", );\r\n            }\r\n          );\r\n      } else {\r\n        //Create User\r\n        firebaseConnect\r\n          .auth()\r\n          .createUserWithEmailAndPassword(formValue.email, formValue.password)\r\n          .then((result) => {\r\n            history.push(`/shoppingcart`);\r\n          })\r\n          .catch((error) => {\r\n            //Handle Erros here\r\n            var errorCode = error.code;\r\n            this.setState({ error: errorCode });\r\n          });\r\n      }\r\n      //notificateModal\r\n    }\r\n  };\r\n  renderErrorFromServer = () => {\r\n    // console.log(this.state.error);\r\n    switch (this.state.error) {\r\n      case \"auth/user-not-found\":\r\n      case \"auth/wrong-password\":\r\n        return <div>Wrong User or Password</div>;\r\n      default:\r\n        return <div>{this.state.error}</div>;\r\n    }\r\n  };\r\n  googleLogin = () => {\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    firebaseConnect\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(function (result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        // var token = result.credential.accessToken;\r\n        // // The signed-in user info.\r\n        // var user = result.user;\r\n        // ...\r\n        if (result.user) history.push(\"/shoppingcart\");\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        // var errorCode = error.code;\r\n        // var errorMessage = error.message;\r\n        // // The email of the user's account used.\r\n        // var email = error.email;\r\n        // // The firebase.auth.AuthCredential type that was used.\r\n        // var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  renderVerifyPassword = () => {\r\n    if (this.state.showVerifyPassword) {\r\n      return (\r\n        <Field\r\n          type=\"password\"\r\n          name=\"verifyPassword\"\r\n          label=\"Verify Password\"\r\n          component={this.renderInput}\r\n        ></Field>\r\n      );\r\n    }\r\n  };\r\n  renderForgetPassword = () => {\r\n    if (!this.state.showVerifyPassword) {\r\n      return (\r\n        <Link\r\n          to=\"/shoppingcart/forgotpassword\"\r\n          className=\"my_forgot_password_text\"\r\n        >\r\n          Forgot Your Password\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n  SignInSignUpSwitch = (value) => {\r\n    this.setState({ showVerifyPassword: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui  container \">\r\n        <div className=\"login-container\">\r\n          <div className=\"login-box\">\r\n            <div className=\"ui equal width center aligned padded grid\">\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\" green column\"\r\n                  onClick={() => this.SignInSignUpSwitch(false)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Log in\r\n                </div>\r\n                <div\r\n                  className=\"blue column\"\r\n                  onClick={() => this.SignInSignUpSwitch(true)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Sign Up\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <form\r\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n              className=\"ui form error\"\r\n            >\r\n              <Field\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                component={this.renderInput}\r\n              ></Field>\r\n              <Field\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                component={this.renderInput}\r\n              ></Field>\r\n              {this.renderForgetPassword()}\r\n              {this.renderVerifyPassword()}\r\n              {this.renderErrorFromServer()}\r\n              <button\r\n                type=\"submit\"\r\n                className={`ui approve  button  my-login-button ${\r\n                  this.state.showVerifyPassword ? `blue` : `green`\r\n                }`}\r\n              >\r\n                {this.state.showVerifyPassword ? `Sign Up` : `Log In`}\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <button\r\n            onClick={this.googleLogin}\r\n            className=\"ui red google button my-google-login\"\r\n          >\r\n            <i className=\"google icon\"></i>Google Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst validate = (formValue) => {\r\n  const error = {};\r\n  const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  if (!formValue.email) error.email = \" Requite Value !\";\r\n  else if (!formValue.email.match(mailformat)) error.email = \" Wrong Format !\";\r\n  if (!formValue.password) error.password = \" Requite Value !\";\r\n\r\n  if (formValue.verifyPassword !== formValue.password)\r\n    error.verifyPassword = \" : Wrong Verify Password\";\r\n  if (!formValue.verifyPassword) error.verifyPassword = \" Requite Value !\";\r\n\r\n  return error;\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nconst componentWrapup = connect(mapStateToProps, {\r\n  signIn,\r\n  signOut,\r\n})(Auth);\r\n\r\nexport default reduxForm({\r\n  form: \"userForm\",\r\n  validate,\r\n})(componentWrapup);\r\n","/* eslint-disable react/react-in-jsx-scope */\r\nimport { PayPalButton } from \"react-paypal-button\";\r\nimport React from \"react\";\r\nexport default function MyPaypalButton(props) {\r\n  const paypalOptions = {\r\n    clientId: process.env.REACT_APP_API_PAYPALKEY,\r\n    intent: \"capture\"\r\n  };\r\n\r\n  const buttonStyles = {\r\n    layout: \"vertical\",\r\n    shape: \"rect\"\r\n  };\r\n  // console.log(props.price);\r\n  return (\r\n    <PayPalButton\r\n      paypalOptions={paypalOptions}\r\n      buttonStyles={buttonStyles}\r\n      amount={props.price}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";//import { Link } from \"react-router-dom\";\r\nimport { cartRemove, cartFetch } from \"../actions/cartActions\";\r\nimport MyPaypalButton from \"./MyPaypalButton\";\r\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\r\nimport \"../css/CartView.css\";\r\nimport { shortString } from \"./Utility\";\r\nexport class CartView extends Component {\r\n  state = {\r\n    total: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.cartFetch();\r\n  }\r\n  renderList = (items) => {\r\n    return items.map((item) => {\r\n      return (\r\n        <div key={item.id} className=\"three column row itemContainerCart\">\r\n          <div class=\"four wide column \">\r\n            <img\r\n              className=\"ui tiny image centered\"\r\n              src={\r\n                !item.images\r\n                  ? \"https://firebasestorage.googleapis.com/v0/b/shoppingcart-f5bc6.appspot.com/o/donut.jpg?alt=media&token=dae66b8a-f9dd-451b-b13d-3ff658e6dd28\"\r\n                  : item.images\r\n              }\r\n              alt={item.name}\r\n            ></img>\r\n          </div>\r\n          <div class=\"eight wide column \">\r\n            <span className=\"myItemNameCart \">\r\n              {shortString(item.name, 55)}\r\n            </span>\r\n          </div>\r\n          <div class=\"four wide column\">\r\n            <div className=\"myCartViewPrice \">/${item.price}</div>\r\n            <button\r\n              onClick={() => this.props.cartRemove(item.id)}\r\n              className=\"ui  mini  button myRemoveButton  \"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  renderTotal = () => {\r\n    var totalprice = 0;\r\n    if (this.props.cart !== null) {\r\n      Object.values(this.props.cart).map((item) => {\r\n        return (totalprice += parseInt(item.price));\r\n      });\r\n    }\r\n\r\n    return <span className=\"myTotalAmount\"> ${totalprice}</span>;\r\n  };\r\n  countTotal = () => {\r\n    let totalprice = 0;\r\n    Object.values(this.props.cart).map((item) => {\r\n      return (totalprice += parseInt(item.price));\r\n    });\r\n    return totalprice;\r\n  };\r\n  renderWarningPanelForlAnonymoust = () => {\r\n    if (this.props.isAnonymous)\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content={`You Are Shopping As Guest User!\r\n          Please Login To Have Better Service.`}\r\n        ></LoginRequiteBanner>\r\n      );\r\n  };\r\n  renderTotalAndPaypal = () => {\r\n    return (\r\n      <div className=\"ui container totalAmountAndPaypalContainer\">\r\n        <h3>\r\n          Subtotal ({Object.keys(this.props.cart).length} item):\r\n          {this.renderTotal()}\r\n        </h3>\r\n        <div className=\"myPaypalContainer\">\r\n          <MyPaypalButton\r\n            description=\"Paypal Buttons\"\r\n            price={this.countTotal()}\r\n          ></MyPaypalButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    if (this.props.isSignedIn) {\r\n      if (this.props.cart !== null) {\r\n        return (\r\n          <div\r\n            className=\"ui container segment\"\r\n            style={{ justifyContent: \"center\" }}\r\n          >\r\n            {this.renderWarningPanelForlAnonymoust()}\r\n            <div className=\"ui grid\">\r\n              {this.renderList(Object.values(this.props.cart))}\r\n            </div>\r\n\r\n            {this.countTotal() !== 0 ? this.renderTotalAndPaypal() : \"\"}\r\n          </div>\r\n        );\r\n      } else return <div>Your Cart is empty !</div>;\r\n    } else {\r\n      return (\r\n        <LoginRequiteBanner\r\n          banner=\"Please Login\"\r\n          content=\"To Start Shopping\"\r\n        ></LoginRequiteBanner>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isAnonymous: state.auth.isAnonymous,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { cartRemove, cartFetch })(CartView);\r\n","import React, { Component } from \"react\";\r\nimport { firebaseConnect } from \"../apis/firebaseShoppingCart\";\r\n\r\nimport LoginRequiteBanner from \"./LoginRequiteBanner\";\r\nexport class ForGotPassword extends Component {\r\n  componentWillMount = () => {};\r\n  content = () => {\r\n    return (\r\n      <div>\r\n        <h2>\r\n          Enter the email address for your account we'll email you a link to\r\n          reset your password.\r\n        </h2>\r\n        <p></p>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Email address: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              autoComplete=\"off\"\r\n              style={{ width: \"300px\" }}\r\n            ></input>\r\n            <button\r\n              onClick={this.handleSubmit}\r\n              className=\"ui interted teal button \"\r\n              style={{ marginLeft: \"5px\" }}\r\n            >\r\n              Sent Reset Password Email\r\n            </button>\r\n            <h2 id=\"output\"> </h2>\r\n          </div>\r\n        </form>\r\n        <p></p>\r\n      </div>\r\n    );\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var auth = firebaseConnect.auth();\r\n    var email = document.getElementById(\"email\").value;\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        //email sent\r\n        console.log(\"email sent\");\r\n        document.getElementById(\"output\").innerHTML = \"Email has been sent!\";\r\n      })\r\n      .catch((error) => {\r\n        //an error happened\r\n        // console.log(error);\r\n        document.getElementById(\"output\").innerHTML = error;\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <LoginRequiteBanner\r\n        banner=\"Forgot your password ? \"\r\n        content={this.content()}\r\n      ></LoginRequiteBanner>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForGotPassword;\r\n","import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport history from \"../history\";\r\nimport ItemList from \"./ItemList\";\r\nimport ItemNew from \"./ItemNew\";\r\nimport ItemEdit from \"./ItemEdit\";\r\nimport ItemDelete from \"./ItemDelete\";\r\nimport ItemView from \"./ItemView\";\r\nimport Header from \"./Header\";\r\nimport Auth from \"./Auth\";\r\nimport CartView from \"./CartView\";\r\nimport ForGotPassword from \"./ForGotPassword\";\r\n\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui  container fluid\">\r\n        <NotificationContainer />\r\n        <Router history={history}>\r\n          <div>\r\n            <Header />\r\n            <Switch>\r\n              <Route path=\"/shoppingcart/\" exact component={ItemList}></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/new\"\r\n                exact\r\n                component={ItemNew}\r\n              ></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/edit/:id\"\r\n                exact\r\n                component={ItemEdit}\r\n              ></Route>\r\n              <Route\r\n                path=\"/shoppingcart/items/delete/:id\"\r\n                exact\r\n                component={ItemDelete}\r\n              ></Route>\r\n              <Route\r\n                path=\"/shoppingcart/item/view/:id\"\r\n                exact\r\n                component={ItemView}\r\n              ></Route>\r\n\r\n              <Route\r\n                path=\"/shoppingcart/cart/view\"\r\n                exact\r\n                component={CartView}\r\n              ></Route>\r\n              <Route path=\"/shoppingcart/login\" exact component={Auth}></Route>\r\n              <Route\r\n                path=\"/shoppingcart/forgotpassword\"\r\n                exact\r\n                component={ForGotPassword}\r\n              ></Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import {\r\n  CART_ADD,\r\n  CART_FETCH,\r\n  CART_REMOVE,\r\n  CART_CLEAN\r\n} from \"../actions/cartActions/type\";\r\nimport _ from \"lodash\";\r\nconst initialState = {};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CART_FETCH:\r\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    case CART_REMOVE:\r\n      return _.omit(state, action.payload);\r\n    case CART_CLEAN:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null,\r\n  isAnonymous: false\r\n};\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        isAnonymous: action.payload.isAnonymous,\r\n        userId: action.payload.userId\r\n      };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, isAnonymous: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  items: itemReducer,\r\n  cart: cartReducer,\r\n  filter: filterReducer,\r\n});\r\n","import {\r\n  ITEM_CREATE,\r\n  ITEM_EDIT,\r\n  ITEMS_FETCH,\r\n  ITEM_FETCH,\r\n  ITEM_DELETE,\r\n  ITEM_SORTED,\r\n} from \"../actions/types\";\r\n\r\nimport _ from \"lodash\";\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ITEM_CREATE:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case ITEM_EDIT:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case ITEM_FETCH:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case ITEMS_FETCH:\r\n      // console.log(\"got items\");\r\n      return { ..._.mapKeys(action.payload, \"id\") };\r\n    case ITEM_DELETE:\r\n      return _.omit(state, action.payload);\r\n    case ITEM_SORTED:\r\n      // console.table(action.payload);\r\n      return _.mapKeys(action.payload, \"id\");\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = { isSearching: false }, action) => {\r\n  switch (action.type) {\r\n    case \"ITEMSEARCH\":\r\n      return {\r\n        isSearching: action.payload.isSearching,\r\n        searchKey: action.payload.searchKey,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}